Ext.namespace("GeoExt");GeoExt.singleFile=true;
(function(){var a=typeof GeoExt=="object"&&GeoExt.singleFile,b=a?"GeoExt.js":"lib/GeoExt.js",c=function(){for(var i="",k=document.documentElement.getElementsByTagName("script"),j=0,l=k.length;j<l;j++){var m=k[j].getAttribute("src");if(m){var n=m.lastIndexOf(b),o=m.lastIndexOf("?");if(o<0)o=m.length;if(n>-1&&n+b.length==o){i=m.slice(0,o-b.length);break}}}return i};if(!a){a=["GeoExt/data/AttributeReader.js","GeoExt/data/AttributeStore.js","GeoExt/data/FeatureRecord.js","GeoExt/data/FeatureReader.js",
"GeoExt/data/FeatureStore.js","GeoExt/data/LayerRecord.js","GeoExt/data/LayerReader.js","GeoExt/data/LayerStore.js","GeoExt/data/ScaleStore.js","GeoExt/data/WMSCapabilitiesReader.js","GeoExt/data/WMSCapabilitiesStore.js","GeoExt/data/WFSCapabilitiesReader.js","GeoExt/data/WFSCapabilitiesStore.js","GeoExt/data/WMSDescribeLayerReader.js","GeoExt/data/WMSDescribeLayerStore.js","GeoExt/data/WMCReader.js","GeoExt/widgets/Action.js","GeoExt/data/ProtocolProxy.js","GeoExt/widgets/FeatureRenderer.js","GeoExt/widgets/MapPanel.js",
"GeoExt/widgets/Popup.js","GeoExt/widgets/form.js","GeoExt/widgets/form/SearchAction.js","GeoExt/widgets/form/BasicForm.js","GeoExt/widgets/form/FormPanel.js","GeoExt/widgets/tips/SliderTip.js","GeoExt/widgets/tips/LayerOpacitySliderTip.js","GeoExt/widgets/tips/ZoomSliderTip.js","GeoExt/widgets/tree/LayerNode.js","GeoExt/widgets/tree/TreeNodeUIEventMixin.js","GeoExt/plugins/TreeNodeComponent.js","GeoExt/plugins/TreeNodeRadioButton.js","GeoExt/plugins/TreeNodeActions.js","GeoExt/widgets/tree/LayerLoader.js",
"GeoExt/widgets/tree/LayerContainer.js","GeoExt/widgets/tree/BaseLayerContainer.js","GeoExt/widgets/tree/OverlayLayerContainer.js","GeoExt/widgets/tree/LayerParamNode.js","GeoExt/widgets/tree/LayerParamLoader.js","GeoExt/widgets/tree/WMSCapabilitiesLoader.js","GeoExt/widgets/LayerOpacitySlider.js","GeoExt/widgets/LayerLegend.js","GeoExt/widgets/LegendImage.js","GeoExt/widgets/UrlLegend.js","GeoExt/widgets/WMSLegend.js","GeoExt/widgets/VectorLegend.js","GeoExt/widgets/LegendPanel.js","GeoExt/widgets/ZoomSlider.js",
"GeoExt/widgets/grid/FeatureSelectionModel.js","GeoExt/data/PrintPage.js","GeoExt/data/PrintProvider.js","GeoExt/plugins/PrintPageField.js","GeoExt/plugins/PrintProviderField.js","GeoExt/plugins/PrintExtent.js","GeoExt/plugins/AttributeForm.js","GeoExt/widgets/PrintMapPanel.js","GeoExt/state/PermalinkProvider.js","GeoExt/Lang.js"];var d=navigator.userAgent;if(d=d.match("MSIE")||d.match("Safari"))var e=Array(a.length);c=c()+"lib/";for(var f=0,g=a.length;f<g;f++)if(d)e[f]="<script src='"+c+a[f]+"'><\/script>";
else{var h=document.createElement("script");h.src=c+a[f];(document.getElementsByTagName("head").length?document.getElementsByTagName("head")[0]:document.body).appendChild(h)}d&&document.write(e.join(""))}})();Ext.namespace("GeoExt");
GeoExt.LayerLegend=Ext.extend(Ext.Container,{layerRecord:null,showTitle:true,legendTitle:null,labelCls:null,layerStore:null,initComponent:function(){GeoExt.LayerLegend.superclass.initComponent.call(this);this.autoEl={};this.add({xtype:"label",text:this.getLayerTitle(this.layerRecord),cls:"x-form-item x-form-item-label"+(this.labelCls?" "+this.labelCls:"")});if(this.layerRecord&&this.layerRecord.store){this.layerStore=this.layerRecord.store;this.layerStore.on("update",this.onStoreUpdate,this)}},onStoreUpdate:function(a,
b){if(b===this.layerRecord&&this.items.getCount()>0){var c=b.getLayer();this.setVisible(c.getVisibility()&&c.calculateInRange()&&c.displayInLayerSwitcher&&!b.get("hideInLegend"));this.update()}},update:function(){var a=this.getLayerTitle(this.layerRecord);this.items.get(0).text!==a&&this.items.get(0).setText(a)},getLayerTitle:function(a){var b=this.legendTitle||"";if(this.showTitle&&!b)if(a&&!a.get("hideTitle"))b=a.get("title")||a.get("name")||a.getLayer().name||"";return b},beforeDestroy:function(){this.layerStore&&
this.layerStore.un("update",this.onStoreUpdate,this);GeoExt.LayerLegend.superclass.beforeDestroy.apply(this,arguments)},onDestroy:function(){this.layerStore=this.layerRecord=null;GeoExt.LayerLegend.superclass.onDestroy.apply(this,arguments)}});GeoExt.LayerLegend.getTypes=function(a,b){var c=(b||[]).concat(),d=[],e;for(e in GeoExt.LayerLegend.types)if(GeoExt.LayerLegend.types[e].supports(a))c.indexOf(e)==-1&&d.push(e);else c.remove(e);return c.concat(d)};GeoExt.LayerLegend.supports=function(){};
GeoExt.LayerLegend.types={};Ext.namespace("GeoExt");
GeoExt.VectorLegend=Ext.extend(GeoExt.LayerLegend,{layerRecord:null,layer:null,rules:null,symbolType:null,untitledPrefix:"Untitled ",clickableSymbol:false,clickableTitle:false,selectOnClick:false,enableDD:false,bodyBorder:false,feature:null,selectedRule:null,currentScaleDenominator:null,initComponent:function(){GeoExt.VectorLegend.superclass.initComponent.call(this);if(this.layerRecord){this.layer=this.layerRecord.getLayer();if(this.layer.map){this.currentScaleDenominator=this.layer.map.getScale();
this.layer.map.events.on({zoomend:this.onMapZoom,scope:this})}}if(!this.symbolType)if(this.feature)this.symbolType=this.symbolTypeFromFeature(this.feature);else if(this.layer)if(this.layer.features.length>0){var a=this.layer.features[0].clone();a.attributes={};this.feature=a;this.symbolType=this.symbolTypeFromFeature(this.feature)}else this.layer.events.on({featuresadded:this.onFeaturesAdded,scope:this});this.layer&&this.feature&&!this.rules&&this.setRules();this.rulesContainer=new Ext.Container({autoEl:{}});
this.add(this.rulesContainer);this.addEvents("titleclick","symbolclick","ruleclick","ruleselected","ruleunselected","rulemoved");this.update()},onMapZoom:function(){this.setCurrentScaleDenominator(this.layer.map.getScale())},symbolTypeFromFeature:function(a){return(a=a.geometry.CLASS_NAME.match(/Point|Line|Polygon/))&&a[0]||"Point"},onFeaturesAdded:function(){this.layer.events.un({featuresadded:this.onFeaturesAdded,scope:this});var a=this.layer.features[0].clone();a.attributes={};this.feature=a;this.symbolType=
this.symbolTypeFromFeature(this.feature);this.rules||this.setRules();this.update()},setRules:function(){var a=this.layer.styleMap&&this.layer.styleMap.styles["default"];a||(a=new OpenLayers.Style);this.rules=a.rules.length===0?[new OpenLayers.Rule({symbolizer:a.createSymbolizer(this.feature)})]:a.rules},setCurrentScaleDenominator:function(a){if(a!==this.currentScaleDenominator){this.currentScaleDenominator=a;this.update()}},getRuleEntry:function(a){return this.rulesContainer.items.get(this.rules.indexOf(a))},
addRuleEntry:function(a,b){this.rulesContainer.add(this.createRuleEntry(a));b||this.doLayout()},removeRuleEntry:function(a,b){var c=this.getRuleEntry(a);if(c){this.rulesContainer.remove(c);b||this.doLayout()}},selectRuleEntry:function(a){var b=a!=this.selectedRule;this.selectedRule&&this.unselect();if(b){this.getRuleEntry(a).body.addClass("x-grid3-row-selected");this.selectedRule=a;this.fireEvent("ruleselected",this,a)}},unselect:function(){this.rulesContainer.items.each(function(a,b){if(this.rules[b]==
this.selectedRule){a.body.removeClass("x-grid3-row-selected");this.selectedRule=null;this.fireEvent("ruleunselected",this,this.rules[b])}},this)},createRuleEntry:function(a){var b=true;if(this.currentScaleDenominator!=null){if(a.minScaleDenominator)b=b&&this.currentScaleDenominator>=a.minScaleDenominator;if(a.maxScaleDenominator)b=b&&this.currentScaleDenominator<a.maxScaleDenominator}return{xtype:"panel",layout:"column",border:false,hidden:!b,bodyStyle:this.selectOnClick?{cursor:"pointer"}:undefined,
defaults:{border:false},items:[this.createRuleRenderer(a),this.createRuleTitle(a)],listeners:{render:function(c){this.selectOnClick&&c.getEl().on({click:function(){this.selectRuleEntry(a)},scope:this});this.enableDD==true&&this.addDD(c)},scope:this}}},createRuleRenderer:function(a){var b=[this.symbolType,"Point","Line","Polygon"],c,d,e=a.symbolizers;if(e){var f;k=0;var g=b.length;a:for(;k<g;++k){c=b[k];if(f=OpenLayers.Symbolizer[c])for(var h=0,i=e.length;h<i;++h)if(e[h]instanceof f){d=true;break a}}}else{e=
a.symbolizer;var k=0;for(f=b.length;k<f;++k){c=b[k];if(e[c]){e=e[c];d=true;break}}e=[e]}return{xtype:"gx_renderer",symbolType:d?c:this.symbolType,symbolizers:e,style:this.clickableSymbol?{cursor:"pointer"}:undefined,listeners:{click:function(){if(this.clickableSymbol){this.fireEvent("symbolclick",this,a);this.fireEvent("ruleclick",this,a)}},scope:this}}},createRuleTitle:function(a){return{cls:"x-form-item",style:"padding: 0.2em 0.5em 0;",bodyStyle:Ext.applyIf({background:"transparent"},this.clickableTitle?
{cursor:"pointer"}:undefined),html:this.getRuleTitle(a),listeners:{render:function(b){this.clickableTitle&&b.getEl().on({click:function(){this.fireEvent("titleclick",this,a);this.fireEvent("ruleclick",this,a)},scope:this})},scope:this}}},addDD:function(a){var b=a.ownerCt,c=this;new Ext.dd.DragSource(a.getEl(),{ddGroup:b.id,onDragOut:function(d,e){var f=Ext.getCmp(e);f.removeClass("gx-ruledrag-insert-above");f.removeClass("gx-ruledrag-insert-below");return Ext.dd.DragZone.prototype.onDragOut.apply(this,
arguments)},onDragEnter:function(d,e){var f=Ext.getCmp(e),g,h=b.items.indexOf(a),i=b.items.indexOf(f);if(h>i)g="gx-ruledrag-insert-above";else if(h<i)g="gx-ruledrag-insert-below";g&&f.addClass(g);return Ext.dd.DragZone.prototype.onDragEnter.apply(this,arguments)},onDragDrop:function(d,e){c.moveRule(b.items.indexOf(a),b.items.indexOf(Ext.getCmp(e)));return Ext.dd.DragZone.prototype.onDragDrop.apply(this,arguments)},getDragData:function(d){if(d=d.getTarget(".x-column-inner")){var e=d.cloneNode(true);
e.id=Ext.id();return{sourceEl:d,repairXY:Ext.fly(d).getXY(),ddel:e}}}});new Ext.dd.DropTarget(a.getEl(),{ddGroup:b.id,notifyDrop:function(){return true}})},update:function(){GeoExt.VectorLegend.superclass.update.apply(this,arguments);if(this.symbolType&&this.rules){if(this.rulesContainer.items)for(var a,b=this.rulesContainer.items.length-1;b>=0;--b){a=this.rulesContainer.getComponent(b);this.rulesContainer.remove(a,true)}b=0;for(a=this.rules.length;b<a;++b)this.addRuleEntry(this.rules[b],true);this.doLayout();
this.selectedRule&&this.getRuleEntry(this.selectedRule).body.addClass("x-grid3-row-selected")}},updateRuleEntry:function(a){var b=this.getRuleEntry(a);if(b){b.removeAll();b.add(this.createRuleRenderer(a));b.add(this.createRuleTitle(a));b.doLayout()}},moveRule:function(a,b){var c=this.rules[a];this.rules.splice(a,1);this.rules.splice(b,0,c);this.update();this.fireEvent("rulemoved",this,c)},getRuleTitle:function(a){var b=a.title||a.name||"";if(!b&&this.untitledPrefix)b=this.untitledPrefix+(this.rules.indexOf(a)+
1);return b},beforeDestroy:function(){if(this.layer){this.layer.events&&this.layer.events.un({featuresadded:this.onFeaturesAdded,scope:this});this.layer.map&&this.layer.map.events&&this.layer.map.events.un({zoomend:this.onMapZoom,scope:this})}delete this.layer;delete this.rules;GeoExt.VectorLegend.superclass.beforeDestroy.apply(this,arguments)}});GeoExt.VectorLegend.supports=function(a){return a.getLayer()instanceof OpenLayers.Layer.Vector};GeoExt.LayerLegend.types.gx_vectorlegend=GeoExt.VectorLegend;
Ext.reg("gx_vectorlegend",GeoExt.VectorLegend);Ext.namespace("GeoExt.tree");
GeoExt.tree.LayerContainer=Ext.extend(Ext.tree.AsyncTreeNode,{text:"Layers",constructor:function(a){a=Ext.applyIf(a||{},{text:this.text});this.loader=a.loader instanceof GeoExt.tree.LayerLoader?a.loader:new GeoExt.tree.LayerLoader(Ext.applyIf(a.loader||{},{store:a.layerStore}));GeoExt.tree.LayerContainer.superclass.constructor.call(this,a)},recordIndexToNodeIndex:function(a){for(var b=this.loader.store,c=this.childNodes.length,d=-1,e=b.getCount()-1;e>=0;--e)if(this.loader.filter(b.getAt(e))===true){++d;
if(a===e||d>c-1)break}return d},destroy:function(){delete this.layerStore;GeoExt.tree.LayerContainer.superclass.destroy.apply(this,arguments)}});Ext.tree.TreePanel.nodeTypes.gx_layercontainer=GeoExt.tree.LayerContainer;Ext.namespace("GeoExt.tree");
GeoExt.tree.BaseLayerContainer=Ext.extend(GeoExt.tree.LayerContainer,{text:"Base Layer",constructor:function(a){a=Ext.applyIf(a||{},{text:this.text,loader:{}});a.loader=Ext.applyIf(a.loader,{baseAttrs:Ext.applyIf(a.loader.baseAttrs||{},{iconCls:"gx-tree-baselayer-icon",checkedGroup:"baselayer"}),filter:function(b){b=b.getLayer();return b.displayInLayerSwitcher===true&&b.isBaseLayer===true}});GeoExt.tree.BaseLayerContainer.superclass.constructor.call(this,a)}});
Ext.tree.TreePanel.nodeTypes.gx_baselayercontainer=GeoExt.tree.BaseLayerContainer;Ext.namespace("GeoExt.plugins");
GeoExt.plugins.PrintExtent=Ext.extend(Ext.util.Observable,{initialConfig:null,printProvider:null,map:null,layer:null,control:null,pages:null,page:null,constructor:function(a){a=a||{};Ext.apply(this,a);this.initialConfig=a;if(!this.printProvider)this.printProvider=this.pages[0].printProvider;if(!this.pages)this.pages=[];this.addEvents("selectpage");GeoExt.plugins.PrintExtent.superclass.constructor.apply(this,arguments)},print:function(a){this.printProvider.print(this.map,this.pages,a)},init:function(a){this.map=
a.map;a.on("destroy",this.onMapPanelDestroy,this);if(!this.layer)this.layer=new OpenLayers.Layer.Vector(null,{displayInLayerSwitcher:false});this.createControl();a=0;for(var b=this.pages.length;a<b;++a)this.addPage(this.pages[a]);this.show()},addPage:function(a){a=a||new GeoExt.data.PrintPage({printProvider:this.printProvider});this.pages.indexOf(a)===-1&&this.pages.push(a);this.layer.addFeatures([a.feature]);a.on("change",this.onPageChange,this);this.page=a;var b=this.map;b.getCenter()?this.fitPage():
b.events.register("moveend",this,function(){b.events.unregister("moveend",this,arguments.callee);this.fitPage()});return a},removePage:function(a){this.pages.remove(a);a.feature.layer&&this.layer.removeFeatures([a.feature]);a.un("change",this.onPageChange,this)},selectPage:function(a){this.control.active&&this.control.setFeature(a.feature)},show:function(){this.map.addLayer(this.layer);this.map.addControl(this.control);this.control.activate();this.page&&this.map.getCenter()&&this.updateBox()},hide:function(){var a=
this.map,b=this.control;if(b&&b.events){b.deactivate();a&&a.events&&b.map&&a.removeControl(b)}b=this.layer;!this.initialConfig.layer&&a&&a.events&&b&&b.map&&a.removeLayer(b)},onMapPanelDestroy:function(){for(var a=this.map,b=this.pages.length-1;b>=0;b--)this.removePage(this.pages[b]);this.hide();b=this.control;a&&a.events&&b&&b.events&&b.destroy();b=this.layer;!this.initialConfig.layer&&a&&a.events&&b&&b.events&&b.destroy();delete this.layer;delete this.control;delete this.page;this.map=null},createControl:function(){this.control=
new OpenLayers.Control.TransformFeature(this.layer,{preserveAspectRatio:true,eventListeners:{beforesetfeature:function(a){for(var b=0,c=this.pages.length;b<c;++b)if(this.pages[b].feature===a.feature){this.page=this.pages[b];a.object.rotation=-this.pages[b].rotation;break}},setfeature:function(a){for(var b=0,c=this.pages.length;b<c;++b)if(this.pages[b].feature===a.feature){this.fireEvent("selectpage",this.pages[b]);break}},beforetransform:function(a){this._updating=true;var b=this.page;if(a.rotation)this.printProvider.layout.get("rotation")?
b.setRotation(-a.object.rotation):a.object.setFeature(b.feature);else if(a.center)b.setCenter(OpenLayers.LonLat.fromString(a.center.toShortString()));else{b.fit(a.object.box,{mode:"closest"});var c=this.printProvider.scales.getAt(0),d=this.printProvider.scales.getAt(this.printProvider.scales.getCount()-1);a=a.object.box.geometry.getBounds();var e=b.feature.geometry.getBounds();c=b.scale===c&&a.containsBounds(e);b=b.scale===d&&e.containsBounds(a);if(c===true||b===true)this.updateBox()}delete this._updating;
return false},transformcomplete:this.updateBox,scope:this}})},fitPage:function(){this.page&&this.page.fit(this.map,{mode:"screen"})},updateBox:function(){var a=this.page;this.control.active&&this.control.setFeature(a.feature,{rotation:-a.rotation})},onPageChange:function(a){this._updating||this.control.active&&this.control.setFeature(a.feature,{rotation:-a.rotation})}});Ext.preg("gx_printextent",GeoExt.plugins.PrintExtent);Ext.namespace("GeoExt");
GeoExt.SliderTip=Ext.extend(Ext.slider.Tip,{hover:true,minWidth:10,offsets:[0,-10],dragging:false,init:function(a){GeoExt.SliderTip.superclass.init.apply(this,arguments);if(this.hover)a.on("render",this.registerThumbListeners,this);this.slider=a},registerThumbListeners:function(){for(var a,b,c=0,d=this.slider.thumbs.length;c<d;++c){a=this.slider.thumbs[c];b=a.tracker.el;(function(e,f){f.on({mouseover:function(g){this.onSlide(this.slider,g,e);this.dragging=false},mouseout:function(){this.dragging||
this.hide.apply(this,arguments)},scope:this})}).apply(this,[a,b])}},onSlide:function(){this.dragging=true;return GeoExt.SliderTip.superclass.onSlide.apply(this,arguments)}});Ext.namespace("GeoExt");
GeoExt.ZoomSlider=Ext.extend(Ext.slider.SingleSlider,{map:null,baseCls:"gx-zoomslider",aggressive:false,updating:false,initComponent:function(){GeoExt.ZoomSlider.superclass.initComponent.call(this);if(this.map){if(this.map instanceof GeoExt.MapPanel)this.map=this.map.map;this.bind(this.map)}if(this.aggressive===true)this.on("change",this.changeHandler,this);else this.on("changecomplete",this.changeHandler,this);this.on("beforedestroy",this.unbind,this)},onRender:function(){GeoExt.ZoomSlider.superclass.onRender.apply(this,
arguments);this.el.addClass(this.baseCls)},afterRender:function(){Ext.slider.SingleSlider.superclass.afterRender.apply(this,arguments);this.update()},addToMapPanel:function(a){this.on({render:function(){var b=this.getEl();b.setStyle({position:"absolute",zIndex:a.map.Z_INDEX_BASE.Control});b.on({mousedown:this.stopMouseEvents,click:this.stopMouseEvents})},afterrender:function(){this.bind(a.map)},scope:this})},stopMouseEvents:function(a){a.stopEvent()},removeFromMapPanel:function(){var a=this.getEl();
a.un("mousedown",this.stopMouseEvents,this);a.un("click",this.stopMouseEvents,this);this.unbind()},bind:function(a){this.map=a;this.map.events.on({zoomend:this.update,changebaselayer:this.initZoomValues,scope:this});if(this.map.baseLayer){this.initZoomValues();this.update()}},unbind:function(){this.map&&this.map.events&&this.map.events.un({zoomend:this.update,changebaselayer:this.initZoomValues,scope:this})},initZoomValues:function(){var a=this.map.baseLayer;if(this.initialConfig.minValue===undefined)this.minValue=
a.minZoomLevel||0;if(this.initialConfig.maxValue===undefined)this.maxValue=a.minZoomLevel==null?a.numZoomLevels-1:a.maxZoomLevel},getZoom:function(){return this.getValue()},getScale:function(){return OpenLayers.Util.getScaleFromResolution(this.map.getResolutionForZoom(this.getValue()),this.map.getUnits())},getResolution:function(){return this.map.getResolutionForZoom(this.getValue())},changeHandler:function(){this.map&&!this.updating&&this.map.zoomTo(this.getValue())},update:function(){if(this.rendered&&
this.map){this.updating=true;this.setValue(this.map.getZoom());this.updating=false}}});Ext.reg("gx_zoomslider",GeoExt.ZoomSlider);Ext.namespace("GeoExt");
GeoExt.LayerOpacitySlider=Ext.extend(Ext.slider.SingleSlider,{layer:null,complementaryLayer:null,delay:5,changeVisibilityDelay:5,aggressive:false,changeVisibility:false,value:null,inverse:false,constructor:function(a){if(a.layer){this.layer=this.getLayer(a.layer);this.bind();this.complementaryLayer=this.getLayer(a.complementaryLayer);if(a.inverse!==undefined)this.inverse=a.inverse;a.value=a.value!==undefined?a.value:this.getOpacityValue(this.layer);delete a.layer;delete a.complementaryLayer}GeoExt.LayerOpacitySlider.superclass.constructor.call(this,
a)},bind:function(){if(this.layer&&this.layer.map)this.layer.map.events.on({changelayer:this.update,scope:this})},unbind:function(){this.layer&&this.layer.map&&this.layer.map.events&&this.layer.map.events.un({changelayer:this.update,scope:this})},update:function(a){a.property==="opacity"&&a.layer==this.layer&&!this._settingOpacity&&this.setValue(this.getOpacityValue(this.layer))},setLayer:function(a){this.unbind();this.layer=this.getLayer(a);this.setValue(this.getOpacityValue(a));this.bind()},getOpacityValue:function(a){a=
a&&a.opacity!==null?parseInt(a.opacity*(this.maxValue-this.minValue)):this.maxValue;if(this.inverse===true)a=this.maxValue-this.minValue-a;return a},getLayer:function(a){if(a instanceof OpenLayers.Layer)return a;else if(a instanceof GeoExt.data.LayerRecord)return a.getLayer()},initComponent:function(){GeoExt.LayerOpacitySlider.superclass.initComponent.call(this);if(this.changeVisibility&&this.layer&&(this.layer.opacity==0||this.inverse===false&&this.value==this.minValue||this.inverse===true&&this.value==
this.maxValue))this.layer.setVisibility(false);if(this.complementaryLayer&&(this.layer&&this.layer.opacity==1||this.inverse===false&&this.value==this.maxValue||this.inverse===true&&this.value==this.minValue))this.complementaryLayer.setVisibility(false);if(this.aggressive===true)this.on("change",this.changeLayerOpacity,this,{buffer:this.delay});else this.on("changecomplete",this.changeLayerOpacity,this);if(this.changeVisibility===true)this.on("change",this.changeLayerVisibility,this,{buffer:this.changeVisibilityDelay});
if(this.complementaryLayer)this.on("change",this.changeComplementaryLayerVisibility,this,{buffer:this.changeVisibilityDelay});this.on("beforedestroy",this.unbind,this)},changeLayerOpacity:function(a,b){if(this.layer){b/=this.maxValue-this.minValue;if(this.inverse===true)b=1-b;this._settingOpacity=true;this.layer.setOpacity(b);delete this._settingOpacity}},changeLayerVisibility:function(a,b){var c=this.layer.getVisibility();if(this.inverse===false&&b==this.minValue||this.inverse===true&&b==this.maxValue&&
c===true)this.layer.setVisibility(false);else if(this.inverse===false&&b>this.minValue||this.inverse===true&&b<this.maxValue&&c==false)this.layer.setVisibility(true)},changeComplementaryLayerVisibility:function(a,b){var c=this.complementaryLayer.getVisibility();if(this.inverse===false&&b==this.maxValue||this.inverse===true&&b==this.minValue&&c===true)this.complementaryLayer.setVisibility(false);else if(this.inverse===false&&b<this.maxValue||this.inverse===true&&b>this.minValue&&c==false)this.complementaryLayer.setVisibility(true)},
addToMapPanel:function(a){this.on({render:function(){var b=this.getEl();b.setStyle({position:"absolute",zIndex:a.map.Z_INDEX_BASE.Control});b.on({mousedown:this.stopMouseEvents,click:this.stopMouseEvents})},scope:this})},removeFromMapPanel:function(){this.getEl().un({mousedown:this.stopMouseEvents,click:this.stopMouseEvents,scope:this});this.unbind()},stopMouseEvents:function(a){a.stopEvent()}});Ext.reg("gx_opacityslider",GeoExt.LayerOpacitySlider);Ext.namespace("GeoExt.data");
GeoExt.data.WMSCapabilitiesReader=function(a,b){a=a||{};if(!a.format)a.format=new OpenLayers.Format.WMSCapabilities;if(typeof b!=="function")b=GeoExt.data.LayerRecord.create(b||a.fields||[{name:"name",type:"string"},{name:"title",type:"string"},{name:"abstract",type:"string"},{name:"queryable",type:"boolean"},{name:"opaque",type:"boolean"},{name:"noSubsets",type:"boolean"},{name:"cascaded",type:"int"},{name:"fixedWidth",type:"int"},{name:"fixedHeight",type:"int"},{name:"minScale",type:"float"},{name:"maxScale",
type:"float"},{name:"prefix",type:"string"},{name:"formats"},{name:"styles"},{name:"srs"},{name:"dimensions"},{name:"bbox"},{name:"llbbox"},{name:"attribution"},{name:"keywords"},{name:"identifiers"},{name:"authorityURLs"},{name:"metadataURLs"}]);GeoExt.data.WMSCapabilitiesReader.superclass.constructor.call(this,a,b)};
Ext.extend(GeoExt.data.WMSCapabilitiesReader,Ext.data.DataReader,{attributionCls:"gx-attribution",read:function(a){var b=a.responseXML;if(!b||!b.documentElement)b=a.responseText;return this.readRecords(b)},serviceExceptionFormat:function(a){if(OpenLayers.Util.indexOf(a,"application/vnd.ogc.se_inimage")>-1)return"application/vnd.ogc.se_inimage";if(OpenLayers.Util.indexOf(a,"application/vnd.ogc.se_xml")>-1)return"application/vnd.ogc.se_xml";return a[0]},imageFormat:function(a){var b=a.formats;if(a.opaque&&
OpenLayers.Util.indexOf(b,"image/jpeg")>-1)return"image/jpeg";if(OpenLayers.Util.indexOf(b,"image/png")>-1)return"image/png";if(OpenLayers.Util.indexOf(b,"image/png; mode=24bit")>-1)return"image/png; mode=24bit";if(OpenLayers.Util.indexOf(b,"image/gif")>-1)return"image/gif";return b[0]},imageTransparent:function(a){return a.opaque==undefined||!a.opaque},readRecords:function(a){if(typeof a==="string"||a.nodeType)a=this.meta.format.read(a);var b=a.version,c=a.capability||{};a=c.request&&c.request.getmap&&
c.request.getmap.href;var d=c.layers;c=this.serviceExceptionFormat(c.exception?c.exception.formats:[]);var e=[];if(a&&d)for(var f=this.recordType.prototype.fields,g,h,i,k,j=0,l=d.length;j<l;j++){g=d[j];if(g.name){h={};for(var m=0,n=f.length;m<n;m++){i=f.items[m];k=g[i.mapping||i.name]||i.defaultValue;k=i.convert(k);h[i.name]=k}i={attribution:g.attribution?this.attributionMarkup(g.attribution):undefined,minScale:g.minScale,maxScale:g.maxScale};this.meta.layerOptions&&Ext.apply(i,this.meta.layerOptions);
k={layers:g.name,exceptions:c,format:this.imageFormat(g),transparent:this.imageTransparent(g),version:b};this.meta.layerParams&&Ext.apply(k,this.meta.layerParams);h.layer=new OpenLayers.Layer.WMS(g.title||g.name,a,k,i);e.push(new this.recordType(h,h.layer.id))}}return{totalRecords:e.length,success:true,records:e}},attributionMarkup:function(a){var b=[];a.logo&&b.push("<img class='"+this.attributionCls+"-image' src='"+a.logo.href+"' />");a.title&&b.push("<span class='"+this.attributionCls+"-title'>"+
a.title+"</span>");if(a.href)for(var c=0;c<b.length;c++)b[c]="<a class='"+this.attributionCls+"-link' href="+a.href+">"+b[c]+"</a>";return b.join(" ")}});Ext.namespace("GeoExt.data");
GeoExt.data.LayerStoreMixin=function(){return{map:null,reader:null,constructor:function(a){a=a||{};a.reader=a.reader||new GeoExt.data.LayerReader({},a.fields);delete a.fields;var b=a.map instanceof GeoExt.MapPanel?a.map.map:a.map;delete a.map;if(a.layers)a.data=a.layers;delete a.layers;var c={initDir:a.initDir};delete a.initDir;arguments.callee.superclass.constructor.call(this,a);this.addEvents("bind");b&&this.bind(b,c)},bind:function(a,b){if(!this.map){this.map=a;b=b||{};var c=b.initDir;if(b.initDir==
undefined)c=GeoExt.data.LayerStore.MAP_TO_STORE|GeoExt.data.LayerStore.STORE_TO_MAP;var d=a.layers.slice(0);c&GeoExt.data.LayerStore.STORE_TO_MAP&&this.each(function(e){this.map.addLayer(e.getLayer())},this);c&GeoExt.data.LayerStore.MAP_TO_STORE&&this.loadData(d,true);a.events.on({changelayer:this.onChangeLayer,addlayer:this.onAddLayer,removelayer:this.onRemoveLayer,scope:this});this.on({load:this.onLoad,clear:this.onClear,add:this.onAdd,remove:this.onRemove,update:this.onUpdate,scope:this});this.data.on({replace:this.onReplace,
scope:this});this.fireEvent("bind",this,a)}},unbind:function(){if(this.map){this.map.events.un({changelayer:this.onChangeLayer,addlayer:this.onAddLayer,removelayer:this.onRemoveLayer,scope:this});this.un("load",this.onLoad,this);this.un("clear",this.onClear,this);this.un("add",this.onAdd,this);this.un("remove",this.onRemove,this);this.data.un("replace",this.onReplace,this);this.map=null}},onChangeLayer:function(a){var b=a.layer,c=this.findBy(function(e){return e.getLayer()===b});if(c>-1){var d=this.getAt(c);
if(a.property==="order"){if(!this._adding&&!this._removing){a=this.map.getLayerIndex(b);if(a!==c){this._removing=true;this.remove(d);delete this._removing;this._adding=true;this.insert(a,[d]);delete this._adding}}}else a.property==="name"?d.set("title",b.name):this.fireEvent("update",this,d,Ext.data.Record.EDIT)}},onAddLayer:function(a){if(!this._adding){a=a.layer;this._adding=true;this.loadData([a],true);delete this._adding}},onRemoveLayer:function(a){if(this.map.unloadDestroy){if(!this._removing){a=
a.layer;this._removing=true;this.remove(this.getById(a.id));delete this._removing}}else this.unbind()},onLoad:function(a,b,c){Ext.isArray(b)||(b=[b]);if(c&&!c.add){this._removing=true;for(a=this.map.layers.length-1;a>=0;a--)this.map.removeLayer(this.map.layers[a]);delete this._removing;a=b.length;if(a>0){c=Array(a);for(var d=0;d<a;d++)c[d]=b[d].getLayer();this._adding=true;this.map.addLayers(c);delete this._adding}}},onClear:function(){this._removing=true;for(var a=this.map.layers.length-1;a>=0;a--)this.map.removeLayer(this.map.layers[a]);
delete this._removing},onAdd:function(a,b,c){if(!this._adding){this._adding=true;for(var d=b.length-1;d>=0;--d){a=b[d].getLayer();this.map.addLayer(a);c!==this.map.layers.length-1&&this.map.setLayerIndex(a,c)}delete this._adding}},onRemove:function(a,b){if(!this._removing)if(this.map.getLayer(b.getLayer().id)!=null){this._removing=true;this.removeMapLayer(b);delete this._removing}},onUpdate:function(a,b,c){if(c===Ext.data.Record.EDIT)if(b.modified&&b.modified.title){a=b.getLayer();b=b.get("title");
b!==a.name&&a.setName(b)}},removeMapLayer:function(a){this.map.removeLayer(a.getLayer())},onReplace:function(a,b){this.removeMapLayer(b)},getByLayer:function(a){var b=this.findBy(function(c){return c.getLayer()===a});if(b>-1)return this.getAt(b)},destroy:function(){this.unbind();GeoExt.data.LayerStore.superclass.destroy.call(this)}}};GeoExt.data.LayerStore=Ext.extend(Ext.data.Store,new GeoExt.data.LayerStoreMixin);GeoExt.data.LayerStore.MAP_TO_STORE=1;GeoExt.data.LayerStore.STORE_TO_MAP=2;Ext.namespace("GeoExt.tree");
GeoExt.tree.LayerLoader=function(a){Ext.apply(this,a);this.addEvents("beforeload","load");GeoExt.tree.LayerLoader.superclass.constructor.call(this)};
Ext.extend(GeoExt.tree.LayerLoader,Ext.util.Observable,{store:null,filter:function(a){return a.getLayer().displayInLayerSwitcher==true},baseAttrs:null,uiProviders:null,load:function(a,b){if(this.fireEvent("beforeload",this,a)){for(this.removeStoreHandlers();a.firstChild;)a.removeChild(a.firstChild);if(!this.uiProviders)this.uiProviders=a.getOwnerTree().getLoader().uiProviders;if(!this.store)this.store=GeoExt.MapPanel.guess().layers;this.store.each(function(c){this.addLayerNode(a,c)},this);this.addStoreHandlers(a);
typeof b=="function"&&b();this.fireEvent("load",this,a)}},onStoreAdd:function(a,b,c,d){if(!this._reordering){a=d.recordIndexToNodeIndex(c+b.length-1);for(c=0;c<b.length;++c)this.addLayerNode(d,b[c],a)}},onStoreRemove:function(a,b,c,d){this._reordering||this.removeLayerNode(d,b)},addLayerNode:function(a,b,c){c=c||0;if(this.filter(b)===true){b=this.createNode({nodeType:"gx_layer",layer:b.getLayer(),layerStore:this.store});(c=a.item(c))?a.insertBefore(b,c):a.appendChild(b);b.on("move",this.onChildMove,
this)}},removeLayerNode:function(a,b){if(this.filter(b)===true){var c=a.findChildBy(function(d){return d.layer==b.getLayer()});if(c){c.un("move",this.onChildMove,this);c.remove();a.reload()}}},onChildMove:function(a,b,c,d,e){this._reordering=true;a=this.store.getByLayer(b.layer);if(d instanceof GeoExt.tree.LayerContainer&&this.store===d.loader.store){d.loader._reordering=true;this.store.remove(a);var f;if(d.childNodes.length>1){var g=e===0?e+1:e-1;f=this.store.findBy(function(k){return d.childNodes[g].layer===
k.getLayer()});e===0&&f++}else if(c.parentNode===d.parentNode){var h=d;do h=h.previousSibling;while(h&&!(h instanceof GeoExt.tree.LayerContainer&&h.lastChild));if(h)f=this.store.findBy(function(k){return h.lastChild.layer===k.getLayer()});else{var i=d;do i=i.nextSibling;while(i&&!(i instanceof GeoExt.tree.LayerContainer&&i.firstChild));if(i)f=this.store.findBy(function(k){return i.firstChild.layer===k.getLayer()});f++}}if(f!==undefined){this.store.insert(f,[a]);window.setTimeout(function(){d.reload();
c.reload()})}else this.store.insert(oldRecordIndex,[a]);delete d.loader._reordering}delete this._reordering},addStoreHandlers:function(a){if(!this._storeHandlers){this._storeHandlers={add:this.onStoreAdd.createDelegate(this,[a],true),remove:this.onStoreRemove.createDelegate(this,[a],true)};for(var b in this._storeHandlers)this.store.on(b,this._storeHandlers[b],this)}},removeStoreHandlers:function(){if(this._storeHandlers){for(var a in this._storeHandlers)this.store.un(a,this._storeHandlers[a],this);
delete this._storeHandlers}},createNode:function(a){this.baseAttrs&&Ext.apply(a,this.baseAttrs);if(typeof a.uiProvider=="string")a.uiProvider=this.uiProviders[a.uiProvider]||eval(a.uiProvider);a.nodeType=a.nodeType||"gx_layer";return new Ext.tree.TreePanel.nodeTypes[a.nodeType](a)},destroy:function(){this.removeStoreHandlers()}});Ext.namespace("GeoExt.plugins");
GeoExt.plugins.PrintProviderField=Ext.extend(Ext.util.Observable,{target:null,constructor:function(a){this.initialConfig=a;Ext.apply(this,a);GeoExt.plugins.PrintProviderField.superclass.constructor.apply(this,arguments)},init:function(a){this.target=a;var b={scope:this,render:this.onRender,beforedestroy:this.onBeforeDestroy};b[a instanceof Ext.form.ComboBox?"select":"valid"]=this.onFieldChange;a.on(b)},onRender:function(a){var b=this.printProvider||a.ownerCt.printProvider;if(a.store===b.layouts){a.setValue(b.layout.get(a.displayField));
b.on({layoutchange:this.onProviderChange,scope:this})}else if(a.store===b.dpis){a.setValue(b.dpi.get(a.displayField));b.on({dpichange:this.onProviderChange,scope:this})}else a.initialConfig.value===undefined&&a.setValue(b.customParams[a.name])},onFieldChange:function(a,b){var c=this.printProvider||a.ownerCt.printProvider,d=a.getValue();this._updating=true;if(b)switch(a.store){case c.layouts:c.setLayout(b);break;case c.dpis:c.setDpi(b)}else c.customParams[a.name]=d;delete this._updating},onProviderChange:function(a,
b){this._updating||this.target.setValue(b.get(this.target.displayField))},onBeforeDestroy:function(){var a=this.target;a.un("beforedestroy",this.onBeforeDestroy,this);a.un("render",this.onRender,this);a.un("select",this.onFieldChange,this);a.un("valid",this.onFieldChange,this);a=this.printProvider||a.ownerCt.printProvider;a.un("layoutchange",this.onProviderChange,this);a.un("dpichange",this.onProviderChange,this)}});Ext.preg("gx_printproviderfield",GeoExt.plugins.PrintProviderField);
Ext.namespace("GeoExt","GeoExt.data");GeoExt.data.LayerReader=function(a,b){a=a||{};b instanceof Function||(b=GeoExt.data.LayerRecord.create(b||a.fields||{}));GeoExt.data.LayerReader.superclass.constructor.call(this,a,b)};
Ext.extend(GeoExt.data.LayerReader,Ext.data.DataReader,{totalRecords:null,readRecords:function(a){var b=[];if(a){var c=this.recordType,d=c.prototype.fields,e,f,g,h,i,k,j,l;e=0;for(f=a.length;e<f;e++){i=a[e];k={};g=0;for(h=d.length;g<h;g++){j=d.items[g];l=i[j.mapping||j.name]||j.defaultValue;l=j.convert(l);k[j.name]=l}k.layer=i;b[b.length]=new c(k,i.id)}}return{records:b,totalRecords:this.totalRecords!=null?this.totalRecords:b.length}}});Ext.namespace("GeoExt.data");
GeoExt.data.WMSDescribeLayerStore=function(a){a=a||{};GeoExt.data.WMSDescribeLayerStore.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(!a.data?new Ext.data.HttpProxy({url:a.url,disableCaching:false,method:"GET"}):undefined),reader:new GeoExt.data.WMSDescribeLayerReader(a,a.fields)}))};Ext.extend(GeoExt.data.WMSDescribeLayerStore,Ext.data.Store);Ext.namespace("GeoExt.form");
GeoExt.form.BasicForm=Ext.extend(Ext.form.BasicForm,{protocol:null,prevResponse:null,autoAbort:true,doAction:function(a,b){if(a=="search"){b=Ext.applyIf(b||{},{protocol:this.protocol,abortPrevious:this.autoAbort});a=new GeoExt.form.SearchAction(this,b)}return GeoExt.form.BasicForm.superclass.doAction.call(this,a,b)},search:function(a){return this.doAction("search",a)}});Ext.namespace("GeoExt.tree");GeoExt.tree.LayerParamLoader=function(a){Ext.apply(this,a);this.addEvents("beforeload","load");GeoExt.tree.LayerParamLoader.superclass.constructor.call(this)};
Ext.extend(GeoExt.tree.LayerParamLoader,Ext.util.Observable,{param:null,delimiter:",",load:function(a,b){if(this.fireEvent("beforeload",this,a)){for(;a.firstChild;)a.removeChild(a.firstChild);var c=a.layer instanceof OpenLayers.Layer.HTTPRequest&&a.layer.params[this.param];if(c){c=c instanceof Array?c.slice():c.split(this.delimiter);Ext.each(c,function(d,e,f){this.addParamNode(d,f,a)},this)}typeof b=="function"&&b();this.fireEvent("load",this,a)}},addParamNode:function(a,b,c){a=this.createNode({layer:c.layer,
param:this.param,item:a,allItems:b,delimiter:this.delimiter});(b=c.item(0))?c.insertBefore(a,b):c.appendChild(a)},createNode:function(a){this.baseAttrs&&Ext.apply(a,this.baseAttrs);if(typeof a.uiProvider=="string")a.uiProvider=this.uiProviders[a.uiProvider]||eval(a.uiProvider);a.nodeType=a.nodeType||"gx_layerparam";return new Ext.tree.TreePanel.nodeTypes[a.nodeType](a)}});Ext.namespace("GeoExt","GeoExt.data");
GeoExt.data.FeatureReader=function(a,b){a=a||{};b instanceof Function||(b=GeoExt.data.FeatureRecord.create(b||a.fields||{}));GeoExt.data.FeatureReader.superclass.constructor.call(this,a,b)};
Ext.extend(GeoExt.data.FeatureReader,Ext.data.DataReader,{totalRecords:null,read:function(a){return this.readRecords(a.features)},readRecords:function(a){var b=[];if(a){var c=this.recordType,d=c.prototype.fields,e,f,g,h,i,k,j,l;e=0;for(f=a.length;e<f;e++){i=a[e];k={};if(i.attributes){g=0;for(h=d.length;g<h;g++){j=d.items[g];if(/[\[\.]/.test(j.mapping))try{l=(new Function("obj","return obj."+j.mapping))(i.attributes)}catch(m){l=j.defaultValue}else l=i.attributes[j.mapping||j.name]||j.defaultValue;
if(j.convert)l=j.convert(l);k[j.name]=l}}k.feature=i;k.state=i.state;k.fid=i.fid;b[b.length]=new c(k,i.state===OpenLayers.State.INSERT?undefined:i.id)}}return{records:b,totalRecords:this.totalRecords!=null?this.totalRecords:b.length}}});Ext.namespace("GeoExt");
GeoExt.WMSLegend=Ext.extend(GeoExt.LayerLegend,{defaultStyleIsFirst:true,useScaleParameter:true,baseParams:null,initComponent:function(){GeoExt.WMSLegend.superclass.initComponent.call(this);var a=this.layerRecord.getLayer();this._noMap=!a.map;a.events.register("moveend",this,this.onLayerMoveend);this.update()},onLayerMoveend:function(a){if(a.zoomChanged===true&&this.useScaleParameter===true||this._noMap){delete this._noMap;this.update()}},getLegendUrl:function(a,b){var c=this.layerRecord,d,e=c&&c.get("styles");
c=c.getLayer();b=b||(""+c.params.LAYERS).split(",");var f=c.params.STYLES&&(""+c.params.STYLES).split(","),g=b.indexOf(a),h=f&&f[g];if(e&&e.length>0)if(h)Ext.each(e,function(i){d=i.name==h&&i.legend&&i.legend.href;return!d});else if(this.defaultStyleIsFirst===true&&!f&&!c.params.SLD&&!c.params.SLD_BODY)d=e[0].legend&&e[0].legend.href;d||(d=c.getFullRequestString({REQUEST:"GetLegendGraphic",WIDTH:null,HEIGHT:null,EXCEPTIONS:"application/vnd.ogc.se_xml",LAYER:a,LAYERS:null,STYLE:h!==""?h:null,STYLES:null,
SRS:null,FORMAT:null}));if(this.useScaleParameter===true&&d.toLowerCase().indexOf("request=getlegendgraphic")!=-1){e=c.map.getScale();d=Ext.urlAppend(d,"SCALE="+e)}e=this.baseParams||{};Ext.applyIf(e,{FORMAT:"image/gif"});if(c.params._OLSALT)e._OLSALT=c.params._OLSALT;if(d.indexOf("?")>0)d=Ext.urlEncode(e,d);return d},update:function(){var a=this.layerRecord.getLayer();if(a&&a.map){GeoExt.WMSLegend.superclass.update.apply(this,arguments);var b,c,d;b=(""+a.params.LAYERS).split(",");var e=[],f=this.items.get(0);
this.items.each(function(h){d=b.indexOf(h.itemId);if(d<0&&h!=f)e.push(h);else if(h!==f){c=b[d];var i=this.getLegendUrl(c,b);OpenLayers.Util.isEquivalentUrl(i,h.url)||h.setUrl(i)}},this);d=0;for(a=e.length;d<a;d++){var g=e[d];this.remove(g);g.destroy()}d=0;for(a=b.length;d<a;d++){c=b[d];if(!this.items||!this.getComponent(c))this.add({xtype:"gx_legendimage",url:this.getLegendUrl(c,b),itemId:c})}this.doLayout()}},beforeDestroy:function(){if(this.useScaleParameter===true){var a=this.layerRecord.getLayer();
a&&a.events&&a.events.unregister("moveend",this,this.onLayerMoveend)}GeoExt.WMSLegend.superclass.beforeDestroy.apply(this,arguments)}});GeoExt.WMSLegend.supports=function(a){return a.getLayer()instanceof OpenLayers.Layer.WMS};GeoExt.LayerLegend.types.gx_wmslegend=GeoExt.WMSLegend;Ext.reg("gx_wmslegend",GeoExt.WMSLegend);Ext.namespace("GeoExt.data");
GeoExt.data.WMSDescribeLayerReader=function(a,b){a=a||{};if(!a.format)a.format=new OpenLayers.Format.WMSDescribeLayer;if(typeof b!=="function")b=Ext.data.Record.create(b||a.fields||[{name:"owsType",type:"string"},{name:"owsURL",type:"string"},{name:"typeName",type:"string"}]);GeoExt.data.WMSDescribeLayerReader.superclass.constructor.call(this,a,b)};
Ext.extend(GeoExt.data.WMSDescribeLayerReader,Ext.data.DataReader,{read:function(a){var b=a.responseXML;if(!b||!b.documentElement)b=a.responseText;return this.readRecords(b)},readRecords:function(a){if(typeof a==="string"||a.nodeType)a=this.meta.format.read(a);for(var b=[],c,d=0,e=a.length;d<e;d++)(c=a[d])&&b.push(new this.recordType(c));return{totalRecords:b.length,success:true,records:b}}});Ext.namespace("GeoExt.form");
GeoExt.form.SearchAction=Ext.extend(Ext.form.Action,{type:"search",response:null,constructor:function(a,b){GeoExt.form.SearchAction.superclass.constructor.call(this,a,b)},run:function(){var a=this.options,b=GeoExt.form.toFilter(this.form,a.logicalOp,a.wildcard);if(a.clientValidation===false||this.form.isValid()){a.abortPrevious&&this.form.prevResponse&&a.protocol.abort(this.form.prevResponse);this.form.prevResponse=a.protocol.read(Ext.applyIf({filter:b,callback:this.handleResponse,scope:this},a))}else if(a.clientValidation!==
false){this.failureType=Ext.form.Action.CLIENT_INVALID;this.form.afterAction(this,false)}},handleResponse:function(a){this.form.prevResponse=null;this.response=a;a.success()?this.form.afterAction(this,true):this.form.afterAction(this,false);var b=this.options;b.callback&&b.callback.call(b.scope,a)}});Ext.namespace("GeoExt.data");GeoExt.data.FeatureRecord=Ext.data.Record.create([{name:"feature"},{name:"state"},{name:"fid"}]);GeoExt.data.FeatureRecord.prototype.getFeature=function(){return this.get("feature")};
GeoExt.data.FeatureRecord.prototype.setFeature=function(a){if(a!==this.data.feature){this.dirty=true;if(!this.modified)this.modified={};if(this.modified.feature===undefined)this.modified.feature=this.data.feature;this.data.feature=a;this.editing||this.afterEdit()}};
GeoExt.data.FeatureRecord.create=function(a){var b=Ext.extend(GeoExt.data.FeatureRecord,{}),c=b.prototype;c.fields=new Ext.util.MixedCollection(false,function(f){return f.name});GeoExt.data.FeatureRecord.prototype.fields.each(function(f){c.fields.add(f)});if(a)for(var d=0,e=a.length;d<e;d++)c.fields.add(new Ext.data.Field(a[d]));b.getField=function(f){return c.fields.get(f)};return b};Ext.namespace("GeoExt.data");
GeoExt.data.PrintPage=Ext.extend(Ext.util.Observable,{printProvider:null,feature:null,center:null,scale:null,rotation:0,customParams:null,constructor:function(a){this.initialConfig=a;Ext.apply(this,a);if(!this.customParams)this.customParams={};this.addEvents("change");GeoExt.data.PrintPage.superclass.constructor.apply(this,arguments);this.feature=new OpenLayers.Feature.Vector(OpenLayers.Geometry.fromWKT("POLYGON((-1 -1,1 -1,1 1,-1 1,-1 -1))"));if(this.printProvider.capabilities)this.setScale(this.printProvider.scales.getAt(0));
else this.printProvider.on({loadcapabilities:function(){this.setScale(this.printProvider.scales.getAt(0))},scope:this,single:true});this.printProvider.on({layoutchange:this.onLayoutChange,scope:this})},getPrintExtent:function(a){a=a instanceof GeoExt.MapPanel?a.map:a;return this.calculatePageBounds(this.scale,a.getUnits())},setScale:function(a,b){var c=this.calculatePageBounds(a,b).toGeometry(),d=this.rotation;d!=0&&c.rotate(-d,c.getCentroid());this.updateFeature(c,{scale:a})},setCenter:function(a){var b=
this.feature.geometry,c=b.getBounds().getCenterLonLat();b.move(a.lon-c.lon,a.lat-c.lat);this.updateFeature(b,{center:a})},setRotation:function(a,b){if(b||this.printProvider.layout.get("rotation")===true){var c=this.feature.geometry;c.rotate(this.rotation-a,c.getCentroid());this.updateFeature(c,{rotation:a})}},fit:function(a,b){b=b||{};var c=a,d;if(a instanceof GeoExt.MapPanel)c=a.map;else if(a instanceof OpenLayers.Feature.Vector){c=a.layer.map;d=a.geometry.getBounds()}if(!d){d=c.getExtent();if(!d)return}this._updating=
true;var e=d.getCenterLonLat();this.setCenter(e);var f=c.getUnits(),g=this.printProvider.scales.getAt(0),h=Number.POSITIVE_INFINITY,i=d.getWidth(),k=d.getHeight();this.printProvider.scales.each(function(j){var l=this.calculatePageBounds(j,f);if(b.mode=="closest"){l=Math.abs(l.getWidth()-i)+Math.abs(l.getHeight()-k);if(l<h){h=l;g=j}}else{if((l=b.mode=="screen"?!d.containsBounds(l):l.containsBounds(d))||b.mode=="screen"&&!l)g=j;return l}},this);this.setScale(g,f);delete this._updating;this.updateFeature(this.feature.geometry,
{center:e,scale:g})},updateFeature:function(a,b){var c=this.feature,d=c.geometry!==a;a.id=c.geometry.id;c.geometry=a;if(!this._updating){for(var e in b)if(b[e]===this[e])delete b[e];else{this[e]=b[e];d=true}Ext.apply(this,b);c.layer&&c.layer.drawFeature(c);d&&this.fireEvent("change",this,b)}},calculatePageBounds:function(a,b){var c=a.get("value"),d=this.feature,e=this.feature.geometry.getBounds().getCenterLonLat(),f=this.printProvider.layout.get("size");b=b||d.layer&&d.layer.map&&d.layer.map.getUnits()||
"dd";var g=OpenLayers.INCHES_PER_UNIT[b];d=f.width/72/g*c/2;c=f.height/72/g*c/2;return new OpenLayers.Bounds(e.lon-d,e.lat-c,e.lon+d,e.lat+c)},onLayoutChange:function(){this.printProvider.layout.get("rotation")===false&&this.setRotation(0,true);this.scale&&this.setScale(this.scale)},destroy:function(){this.printProvider.un("layoutchange",this.onLayoutChange,this)}});Ext.namespace("GeoExt.data");GeoExt.data.LayerRecord=Ext.data.Record.create([{name:"layer"},{name:"title",type:"string",mapping:"name"}]);
GeoExt.data.LayerRecord.prototype.getLayer=function(){return this.get("layer")};GeoExt.data.LayerRecord.prototype.setLayer=function(a){if(a!==this.data.layer){this.dirty=true;if(!this.modified)this.modified={};if(this.modified.layer===undefined)this.modified.layer=this.data.layer;this.data.layer=a;this.editing||this.afterEdit()}};GeoExt.data.LayerRecord.prototype.clone=function(a){var b=this.getLayer()&&this.getLayer().clone();return new this.constructor(Ext.applyIf({layer:b},this.data),a||b.id)};
GeoExt.data.LayerRecord.create=function(a){var b=Ext.extend(GeoExt.data.LayerRecord,{}),c=b.prototype;c.fields=new Ext.util.MixedCollection(false,function(f){return f.name});GeoExt.data.LayerRecord.prototype.fields.each(function(f){c.fields.add(f)});if(a)for(var d=0,e=a.length;d<e;d++)c.fields.add(new Ext.data.Field(a[d]));b.getField=function(f){return c.fields.get(f)};return b};Ext.namespace("GeoExt");
GeoExt.FeatureRenderer=Ext.extend(Ext.BoxComponent,{feature:undefined,symbolizers:[OpenLayers.Feature.Vector.style["default"]],symbolType:"Polygon",resolution:1,minWidth:20,minHeight:20,renderers:["SVG","VML","Canvas"],rendererOptions:null,pointFeature:undefined,lineFeature:undefined,polygonFeature:undefined,renderer:null,initComponent:function(){GeoExt.FeatureRenderer.superclass.initComponent.apply(this,arguments);Ext.applyIf(this,{pointFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(0,
0)),lineFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.LineString([new OpenLayers.Geometry.Point(-8,-3),new OpenLayers.Geometry.Point(-3,3),new OpenLayers.Geometry.Point(3,-3),new OpenLayers.Geometry.Point(8,3)])),polygonFeature:new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Polygon([new OpenLayers.Geometry.LinearRing([new OpenLayers.Geometry.Point(-8,-4),new OpenLayers.Geometry.Point(-6,-6),new OpenLayers.Geometry.Point(6,-6),new OpenLayers.Geometry.Point(8,-4),new OpenLayers.Geometry.Point(8,
4),new OpenLayers.Geometry.Point(6,6),new OpenLayers.Geometry.Point(-6,6),new OpenLayers.Geometry.Point(-8,4)])]))});this.feature||this.setFeature(null,{draw:false});this.addEvents("click")},initCustomEvents:function(){this.clearCustomEvents();this.el.on("click",this.onClick,this)},clearCustomEvents:function(){this.el&&this.el.removeAllListeners&&this.el.removeAllListeners()},onClick:function(){this.fireEvent("click",this)},onRender:function(){if(!this.el){this.el=document.createElement("div");this.el.id=
this.getId()}if(!this.renderer||!this.renderer.supported())this.assignRenderer();this.renderer.map={getResolution:function(){return this.resolution}.createDelegate(this)};GeoExt.FeatureRenderer.superclass.onRender.apply(this,arguments);this.drawFeature()},afterRender:function(){GeoExt.FeatureRenderer.superclass.afterRender.apply(this,arguments);this.initCustomEvents()},onResize:function(){this.setRendererDimensions();GeoExt.FeatureRenderer.superclass.onResize.apply(this,arguments)},setRendererDimensions:function(){var a=
this.feature.geometry.getBounds(),b=a.getWidth(),c=a.getHeight(),d=this.initialConfig.resolution;d||(d=Math.max(b/this.width||0,c/this.height||0)||1);this.resolution=d;b=Math.max(this.width||this.minWidth,b/d);c=Math.max(this.height||this.minHeight,c/d);a=a.getCenterPixel();var e=b*d/2;d=c*d/2;d=new OpenLayers.Bounds(a.x-e,a.y-d,a.x+e,a.y+d);this.renderer.setSize(new OpenLayers.Size(Math.round(b),Math.round(c)));this.renderer.setExtent(d,true)},assignRenderer:function(){for(var a=0,b=this.renderers.length;a<
b;++a){var c=OpenLayers.Renderer[this.renderers[a]];if(c&&c.prototype.supported()){this.renderer=new c(this.el,this.rendererOptions);break}}},setSymbolizers:function(a,b){this.symbolizers=a;if(!b||b.draw)this.drawFeature()},setSymbolType:function(a,b){this.symbolType=a;this.setFeature(null,b)},setFeature:function(a,b){this.feature=a||this[this.symbolType.toLowerCase()+"Feature"];if(!b||b.draw)this.drawFeature()},drawFeature:function(){this.renderer.clear();this.setRendererDimensions();for(var a=OpenLayers.Symbolizer,
b=a&&a.Text,c,d,e=0,f=this.symbolizers.length;e<f;++e){c=this.symbolizers[e];d=this.feature;if(!b||!(c instanceof b)){if(a&&c instanceof a){c=c.clone();if(!this.initialConfig.feature){d=c.CLASS_NAME.split(".").pop().toLowerCase();d=this[d+"Feature"]}}else c=Ext.apply({},c);this.renderer.drawFeature(d.clone(),c)}}},update:function(a){a=a||{};if(a.feature)this.setFeature(a.feature,{draw:false});else a.symbolType&&this.setSymbolType(a.symbolType,{draw:false});a.symbolizers&&this.setSymbolizers(a.symbolizers,
{draw:false});this.drawFeature()},beforeDestroy:function(){this.clearCustomEvents();this.renderer&&this.renderer.destroy()}});Ext.reg("gx_renderer",GeoExt.FeatureRenderer);Ext.namespace("GeoExt");
GeoExt.Popup=Ext.extend(Ext.Window,{anchored:true,map:null,panIn:true,unpinnable:true,location:null,animCollapse:false,draggable:false,shadow:false,popupCls:"gx-popup",ancCls:null,initComponent:function(){if(this.map instanceof GeoExt.MapPanel)this.map=this.map.map;if(!this.map&&this.location instanceof OpenLayers.Feature.Vector&&this.location.layer)this.map=this.location.layer.map;if(this.location instanceof OpenLayers.Feature.Vector)this.location=this.location.geometry;if(this.location instanceof
OpenLayers.Geometry){if(typeof this.location.getCentroid=="function")this.location=this.location.getCentroid();this.location=this.location.getBounds().getCenterLonLat()}else if(this.location instanceof OpenLayers.Pixel)this.location=this.map.getLonLatFromViewPortPx(this.location);this.anchored&&this.addAnchorEvents();this.baseCls=this.popupCls+" "+this.baseCls;this.elements+=",anc";GeoExt.Popup.superclass.initComponent.call(this)},onRender:function(a,b){GeoExt.Popup.superclass.onRender.call(this,
a,b);this.ancCls=this.popupCls+"-anc";this.createElement("anc",this.el.dom)},initTools:function(){this.unpinnable&&this.addTool({id:"unpin",handler:this.unanchorPopup.createDelegate(this,[])});GeoExt.Popup.superclass.initTools.call(this)},show:function(){GeoExt.Popup.superclass.show.apply(this,arguments);if(this.anchored){this.position();this.panIn&&!this._mapMove&&this.panIntoView()}},maximize:function(){!this.maximized&&this.anc&&this.unanchorPopup();GeoExt.Popup.superclass.maximize.apply(this,
arguments)},setSize:function(a,b){if(this.anc){var c=this.anc.getSize();if(typeof a=="object"){b=a.height-c.height;a=a.width}else isNaN(b)||(b-=c.height)}GeoExt.Popup.superclass.setSize.call(this,a,b)},position:function(){if(this._mapMove===true){var a=this.map.getExtent().containsLonLat(this.location);a!==this.isVisible()&&this.setVisible(a)}if(this.isVisible()){a=this.map.getViewPortPxFromLonLat(this.location);var b=Ext.fly(this.map.div).getBox(),c=this.anc;c=c.getLeft(true)+c.getWidth()/2;var d=
this.el.getHeight();this.setPosition(a.x+b.x-c,a.y+b.y-d)}},unanchorPopup:function(){this.removeAnchorEvents();this.draggable=true;this.header.addClass("x-window-draggable");this.dd=new Ext.Window.DD(this);this.anc.remove();this.anc=null;this.tools.unpin.hide()},panIntoView:function(){var a=Ext.fly(this.map.div).getBox(),b=this.getPosition(true);b[0]-=a.x;b[1]-=a.y;a=[a.width,a.height];var c=this.getSize(),d=[b[0],b[1]],e=this.map.paddingForPopups;if(b[0]<e.left)d[0]=e.left;else if(b[0]+c.width>a[0]-
e.right)d[0]=a[0]-e.right-c.width;if(b[1]<e.top)d[1]=e.top;else if(b[1]+c.height>a[1]-e.bottom)d[1]=a[1]-e.bottom-c.height;this.map.pan(b[0]-d[0],b[1]-d[1])},onMapMove:function(){this._mapMove=true;this.position();delete this._mapMove},addAnchorEvents:function(){this.map.events.on({move:this.onMapMove,scope:this});this.on({resize:this.position,collapse:this.position,expand:this.position,scope:this})},removeAnchorEvents:function(){this.map.events.un({move:this.onMapMove,scope:this});this.un("resize",
this.position,this);this.un("collapse",this.position,this);this.un("expand",this.position,this)},beforeDestroy:function(){this.anchored&&this.removeAnchorEvents();GeoExt.Popup.superclass.beforeDestroy.call(this)}});Ext.reg("gx_popup",GeoExt.Popup);Ext.namespace("GeoExt.data");
GeoExt.data.AttributeStoreMixin=function(){return{constructor:function(a){a=a||{};arguments.callee.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(!a.data?new Ext.data.HttpProxy({url:a.url,disableCaching:false,method:"GET"}):undefined),reader:new GeoExt.data.AttributeReader(a,a.fields||["name","type","restriction"])}));this.feature&&this.bind()},bind:function(){this.on({update:this.onUpdate,load:this.onLoad,add:this.onAdd,scope:this});var a=[];this.each(function(b){a.push(b)});this.updateFeature(a)},
onUpdate:function(a,b){this.updateFeature([b])},onLoad:function(a,b,c){if(!c||c.add!==true)this.updateFeature(b)},onAdd:function(a,b){this.updateFeature(b)},updateFeature:function(a){var b=this.feature,c=b.layer,d,e,f,g,h;d=0;for(e=a.length;d<e;d++){f=a[d];g=f.get("name");f=f.get("value");g=b.attributes[g];if(g!==f)h=true}if(h&&c&&c.events&&c.events.triggerEvent("beforefeaturemodified",{feature:b})!==false){d=0;for(e=a.length;d<e;d++){f=a[d];g=f.get("name");f=f.get("value");b.attributes[g]=f}c.events.triggerEvent("featuremodified",
{feature:b});c.drawFeature(b)}}}};GeoExt.data.AttributeStore=Ext.extend(Ext.data.Store,GeoExt.data.AttributeStoreMixin());Ext.namespace("GeoExt.form");GeoExt.form.FormPanel=Ext.extend(Ext.form.FormPanel,{protocol:null,createForm:function(){delete this.initialConfig.listeners;return new GeoExt.form.BasicForm(null,this.initialConfig)},search:function(a){this.getForm().search(a)}});Ext.reg("gx_formpanel",GeoExt.form.FormPanel);Ext.namespace("GeoExt.data");
GeoExt.data.PrintProvider=Ext.extend(Ext.util.Observable,{url:null,capabilities:null,method:"POST",timeout:3E4,customParams:null,scales:null,dpis:null,layouts:null,dpi:null,layout:null,constructor:function(a){this.initialConfig=a;Ext.apply(this,a);if(!this.customParams)this.customParams={};this.addEvents("loadcapabilities","layoutchange","dpichange","beforeprint","print","printexception","beforeencodelayer","encodelayer","beforedownload");GeoExt.data.PrintProvider.superclass.constructor.apply(this,
arguments);this.scales=new Ext.data.JsonStore({root:"scales",sortInfo:{field:"value",direction:"DESC"},fields:["name",{name:"value",type:"float"}]});this.dpis=new Ext.data.JsonStore({root:"dpis",fields:["name",{name:"value",type:"float"}]});this.layouts=new Ext.data.JsonStore({root:"layouts",fields:["name",{name:"size",mapping:"map"},{name:"rotation",type:"boolean"}]});if(a.capabilities)this.loadStores();else{if(this.url.split("/").pop())this.url+="/";this.initialConfig.autoLoad&&this.loadCapabilities()}},
setLayout:function(a){this.layout=a;this.fireEvent("layoutchange",this,a)},setDpi:function(a){this.dpi=a;this.fireEvent("dpichange",this,a)},print:function(a,b,c){if(a instanceof GeoExt.MapPanel)a=a.map;b=b instanceof Array?b:[b];c=c||{};if(this.fireEvent("beforeprint",this,a,b,c)!==false){var d=Ext.apply({units:a.getUnits(),srs:a.baseLayer.projection.getCode(),layout:this.layout.get("name"),dpi:this.dpi.get("value")},this.customParams),e=b[0].feature.layer,f=[],g=a.layers.concat();g.remove(a.baseLayer);
g.unshift(a.baseLayer);Ext.each(g,function(j){if(j!==e&&j.getVisibility()===true)(j=this.encodeLayer(j))&&f.push(j)},this);d.layers=f;var h=[];Ext.each(b,function(j){h.push(Ext.apply({center:[j.center.lon,j.center.lat],scale:j.scale.get("value"),rotation:j.rotation},j.customParams))},this);d.pages=h;if(c.overview){var i=[];Ext.each(c.overview.layers,function(j){(j=this.encodeLayer(j))&&i.push(j)},this);d.overviewLayers=i}if(c.legend){a=c.legend;(b=a.rendered)||(a=a.cloneConfig({renderTo:document.body,
hidden:true}));var k=[];a.items&&a.items.each(function(j){if(!j.hidden){var l=this.encoders.legends[j.getXType()];k=k.concat(l.call(this,j))}},this);b||a.destroy();d.legends=k}this.method==="GET"?this.download(Ext.urlAppend(this.capabilities.printURL,"spec="+encodeURIComponent(Ext.encode(d)))):Ext.Ajax.request({url:this.capabilities.createURL,timeout:this.timeout,jsonData:d,success:function(j){this.download(Ext.decode(j.responseText).getURL+(Ext.isIE?"?inline=true":""))},failure:function(j){this.fireEvent("printexception",
this,j)},params:this.initialConfig.baseParams,scope:this})}},download:function(a){if(this.fireEvent("beforedownload",this,a)!==false)if(Ext.isOpera)window.open(a);else window.location.href=a;this.fireEvent("print",this,a)},loadCapabilities:function(){this.url&&Ext.Ajax.request({url:this.url+"info.json",method:"GET",disableCaching:false,success:function(a){this.capabilities=Ext.decode(a.responseText);this.loadStores()},params:this.initialConfig.baseParams,scope:this})},loadStores:function(){this.scales.loadData(this.capabilities);
this.dpis.loadData(this.capabilities);this.layouts.loadData(this.capabilities);this.setLayout(this.layouts.getAt(0));this.setDpi(this.dpis.getAt(0));this.fireEvent("loadcapabilities",this,this.capabilities)},encodeLayer:function(a){var b,c;for(c in this.encoders.layers)if(OpenLayers.Layer[c]&&a instanceof OpenLayers.Layer[c]){if(this.fireEvent("beforeencodelayer",this,a)===false)return;b=this.encoders.layers[c].call(this,a);this.fireEvent("encodelayer",this,a,b);break}return b&&b.type?b:null},getAbsoluteUrl:function(a){var b;
if(Ext.isIE){b=document.createElement("<a href='"+a+"'/>");b.style.display="none";document.body.appendChild(b);b.href=b.href;document.body.removeChild(b)}else{b=document.createElement("a");b.href=a}return b.href},encoders:{layers:{WMS:function(a){var b=this.encoders.layers.HTTPRequest.call(this,a);Ext.apply(b,{type:"WMS",layers:(""+a.params.LAYERS).split(","),format:a.params.FORMAT,styles:(""+a.params.STYLES).split(",")});var c,d;for(d in a.params){c=d.toLowerCase();if(!a.DEFAULT_PARAMS[c]&&"layers,styles,width,height,srs".indexOf(c)==
-1){if(!b.customParams)b.customParams={};b.customParams[d]=a.params[d]}}return b},OSM:function(a){a=this.encoders.layers.TileCache.call(this,a);return Ext.apply(a,{type:"OSM",baseURL:a.baseURL.substr(0,a.baseURL.indexOf("$")),extension:"png"})},TMS:function(a){var b=this.encoders.layers.TileCache.call(this,a);return Ext.apply(b,{type:"TMS",format:a.type})},TileCache:function(a){var b=this.encoders.layers.HTTPRequest.call(this,a);return Ext.apply(b,{type:"TileCache",layer:a.layername,maxExtent:a.maxExtent.toArray(),
tileSize:[a.tileSize.w,a.tileSize.h],extension:a.extension,resolutions:a.serverResolutions||a.resolutions})},KaMapCache:function(a){var b=this.encoders.layers.KaMap.call(this,a);return Ext.apply(b,{type:"KaMapCache",group:a.params.g,metaTileWidth:a.params.metaTileSize.w,metaTileHeight:a.params.metaTileSize.h})},KaMap:function(a){var b=this.encoders.layers.HTTPRequest.call(this,a);return Ext.apply(b,{type:"KaMap",map:a.params.map,extension:a.params.i,group:a.params.g||"",maxExtent:a.maxExtent.toArray(),
tileSize:[a.tileSize.w,a.tileSize.h],resolutions:a.serverResolutions||a.resolutions})},HTTPRequest:function(a){return{baseURL:this.getAbsoluteUrl(a.url instanceof Array?a.url[0]:a.url),opacity:a.opacity!=null?a.opacity:1,singleTile:a.singleTile}},Image:function(a){return{type:"Image",baseURL:this.getAbsoluteUrl(a.getURL(a.extent)),opacity:a.opacity!=null?a.opacity:1,extent:a.extent.toArray(),pixelSize:[a.size.w,a.size.h],name:a.name}},Vector:function(a){if(a.features.length){for(var b=[],c={},d=a.features,
e=new OpenLayers.Format.GeoJSON,f=new OpenLayers.Format.JSON,g=1,h={},i,k,j,l,m=0,n=d.length;m<n;++m){i=d[m];k=i.style||a.style||a.styleMap.createSymbolizer(i,i.renderIntent);j=f.write(k);if(l=h[j])j=l;else{h[j]=j=g++;c[j]=k.externalGraphic?Ext.applyIf({externalGraphic:this.getAbsoluteUrl(k.externalGraphic)},k):k}i=e.extract.feature.call(e,i);i.properties=OpenLayers.Util.extend({_gx_style:j},i.properties);b.push(i)}return{type:"Vector",styles:c,styleProperty:"_gx_style",geoJson:{type:"FeatureCollection",
features:b},name:a.name,opacity:a.opacity!=null?a.opacity:1}}}},legends:{gx_wmslegend:function(a){for(var b=this.encoders.legends.base.call(this,a),c=[],d=1,e=a.items.getCount();d<e;++d)c.push(this.getAbsoluteUrl(a.items.get(d).url));b[0].classes[0]={name:"",icons:c};return b},gx_urllegend:function(a){var b=this.encoders.legends.base.call(this,a);b[0].classes.push({name:"",icon:this.getAbsoluteUrl(a.items.get(1).url)});return b},base:function(a){return[{name:a.items.get(0).text,classes:[]}]}}}});
Ext.namespace("GeoExt.tree");GeoExt.tree.OverlayLayerContainer=Ext.extend(GeoExt.tree.LayerContainer,{text:"Overlays",constructor:function(a){a=Ext.applyIf(a||{},{text:this.text});a.loader=Ext.applyIf(a.loader||{},{filter:function(b){b=b.getLayer();return b.displayInLayerSwitcher===true&&b.isBaseLayer===false}});GeoExt.tree.OverlayLayerContainer.superclass.constructor.call(this,a)}});Ext.tree.TreePanel.nodeTypes.gx_overlaylayercontainer=GeoExt.tree.OverlayLayerContainer;Ext.namespace("GeoExt.plugins");
GeoExt.plugins.PrintPageField=Ext.extend(Ext.util.Observable,{printPage:null,target:null,constructor:function(a){this.initialConfig=a;Ext.apply(this,a);GeoExt.plugins.PrintPageField.superclass.constructor.apply(this,arguments)},init:function(a){this.target=a;var b={beforedestroy:this.onBeforeDestroy,scope:this};b[a instanceof Ext.form.ComboBox?"select":a instanceof Ext.form.Checkbox?"check":"valid"]=this.onFieldChange;a.on(b);this.printPage.on({change:this.onPageChange,scope:this});this.printPage.printProvider.on({layoutchange:this.onLayoutChange,
scope:this});this.setValue(this.printPage)},onFieldChange:function(a,b){var c=this.printPage.printProvider,d=a.getValue();this._updating=true;if(a.store===c.scales||a.name==="scale")this.printPage.setScale(b);else if(a.name=="rotation")!isNaN(d)&&this.printPage.setRotation(d);else this.printPage.customParams[a.name]=d;delete this._updating},onPageChange:function(a){this._updating||this.setValue(a)},onLayoutChange:function(a,b){var c=this.target;c.name=="rotation"&&c.setDisabled(!b.get("rotation"))},
setValue:function(a){var b=this.target;b.suspendEvents();if(b.store===a.printProvider.scales||b.name==="scale")a.scale&&b.setValue(a.scale.get(b.displayField));else b.name=="rotation"&&b.setValue(a.rotation);b.resumeEvents()},onBeforeDestroy:function(){this.target.un("beforedestroy",this.onBeforeDestroy,this);this.target.un("select",this.onFieldChange,this);this.target.un("valid",this.onFieldChange,this);this.printPage.un("change",this.onPageChange,this);this.printPage.printProvider.un("layoutchange",
this.onLayoutChange,this)}});Ext.preg("gx_printpagefield",GeoExt.plugins.PrintPageField);Ext.namespace("GeoExt");
GeoExt.Action=Ext.extend(Ext.Action,{control:null,activateOnEnable:false,deactivateOnDisable:false,map:null,uScope:null,uHandler:null,uToggleHandler:null,uCheckHandler:null,constructor:function(a){this.uScope=a.scope;this.uHandler=a.handler;this.uToggleHandler=a.toggleHandler;this.uCheckHandler=a.checkHandler;a.scope=this;a.handler=this.pHandler;a.toggleHandler=this.pToggleHandler;a.checkHandler=this.pCheckHandler;var b=this.control=a.control;delete a.control;this.activateOnEnable=!!a.activateOnEnable;
delete a.activateOnEnable;this.deactivateOnDisable=!!a.deactivateOnDisable;delete a.deactivateOnDisable;if(b){if(a.map){a.map.addControl(b);delete a.map}if((a.pressed||a.checked)&&b.map)b.activate();b.events.on({activate:this.onCtrlActivate,deactivate:this.onCtrlDeactivate,scope:this})}arguments.callee.superclass.constructor.call(this,a)},pHandler:function(){var a=this.control;a&&a.type==OpenLayers.Control.TYPE_BUTTON&&a.trigger();this.uHandler&&this.uHandler.apply(this.uScope,arguments)},pToggleHandler:function(a,
b){this.changeControlState(b);this.uToggleHandler&&this.uToggleHandler.apply(this.uScope,arguments)},pCheckHandler:function(a,b){this.changeControlState(b);this.uCheckHandler&&this.uCheckHandler.apply(this.uScope,arguments)},changeControlState:function(a){if(a){if(!this._activating){this._activating=true;this.control.activate();this._activating=false}}else if(!this._deactivating){this._deactivating=true;this.control.deactivate();this._deactivating=false}},onCtrlActivate:function(){if(this.control.type==
OpenLayers.Control.TYPE_BUTTON)this.enable();else{this.safeCallEach("toggle",[true]);this.safeCallEach("setChecked",[true])}},onCtrlDeactivate:function(){if(this.control.type==OpenLayers.Control.TYPE_BUTTON)this.disable();else{this.safeCallEach("toggle",[false]);this.safeCallEach("setChecked",[false])}},safeCallEach:function(a,b){for(var c=this.items,d=0,e=c.length;d<e;d++)if(c[d][a])c[d].rendered?c[d][a].apply(c[d],b):c[d].on({render:c[d][a].createDelegate(c[d],b),single:true})},setDisabled:function(a){!a&&
this.activateOnEnable&&this.control&&!this.control.active&&this.control.activate();a&&this.deactivateOnDisable&&this.control&&this.control.active&&this.control.deactivate();return GeoExt.Action.superclass.setDisabled.apply(this,arguments)}});Ext.namespace("GeoExt.form");
GeoExt.form.toFilter=function(a,b,c){if(a instanceof Ext.form.FormPanel)a=a.getForm();var d=[];a=a.getValues(false);for(var e in a){var f=e.split("__"),g=a[e],h;if(f.length>1&&(h=GeoExt.form.toFilter.FILTER_MAP[f[1]])!==undefined)e=f[0];else h=OpenLayers.Filter.Comparison.EQUAL_TO;if(h===OpenLayers.Filter.Comparison.LIKE)switch(c){case GeoExt.form.ENDS_WITH:g=".*"+g;break;case GeoExt.form.STARTS_WITH:g+=".*";break;case GeoExt.form.CONTAINS:g=".*"+g+".*"}d.push(new OpenLayers.Filter.Comparison({type:h,
value:g,property:e}))}return d.length==1&&b!=OpenLayers.Filter.Logical.NOT?d[0]:new OpenLayers.Filter.Logical({type:b||OpenLayers.Filter.Logical.AND,filters:d})};GeoExt.form.toFilter.FILTER_MAP={eq:OpenLayers.Filter.Comparison.EQUAL_TO,ne:OpenLayers.Filter.Comparison.NOT_EQUAL_TO,lt:OpenLayers.Filter.Comparison.LESS_THAN,le:OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,gt:OpenLayers.Filter.Comparison.GREATER_THAN,ge:OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,like:OpenLayers.Filter.Comparison.LIKE};
GeoExt.form.ENDS_WITH=1;GeoExt.form.STARTS_WITH=2;GeoExt.form.CONTAINS=3;
GeoExt.form.recordToField=function(a){var b=a.get("type");if(typeof b==="object"&&b.xtype)return b;var c,d=a.get("name"),e=a.get("label");a=a.get("restriction")||{};if(e==null)e=d;b=b.split(":").pop();var f=GeoExt.form.recordToField.REGEXES;if(b.match(f.text)){b=a.maxLength!==undefined?parseFloat(a.maxLength):undefined;a=a.minLength!==undefined?parseFloat(a.minLength):undefined;c={xtype:"textfield",name:d,fieldLabel:e,maxLength:b,minLength:a}}else if(b.match(f.number)){b=a.maxInclusive!==undefined?
parseFloat(a.maxInclusive):undefined;a=a.minInclusive!==undefined?parseFloat(a.minInclusive):undefined;c={xtype:"numberfield",name:d,fieldLabel:e,maxValue:b,minValue:a}}else if(b.match(f["boolean"]))c={xtype:"checkbox",name:d,boxLabel:e};else if(b.match(f.date))c={xtype:"datefield",fieldLabel:e,name:d,format:"c"};return c};GeoExt.form.recordToField.REGEXES={text:/^(text|string)$/i,number:/^(number|float|decimal|double|int|long|integer|short)$/i,"boolean":/^(boolean)$/i,date:/^(date|dateTime)$/i};
Ext.namespace("GeoExt.plugins");GeoExt.plugins.AttributeForm=function(a){Ext.apply(this,a)};
GeoExt.plugins.AttributeForm.prototype={attributeStore:null,formPanel:null,init:function(a){this.formPanel=a;if(this.attributeStore instanceof Ext.data.Store){this.fillForm();this.bind(this.attributeStore)}a.on("destroy",this.onFormDestroy,this)},bind:function(a){this.unbind();a.on({load:this.onLoad,scope:this});this.attributeStore=a},unbind:function(){this.attributeStore&&this.attributeStore.un("load",this.onLoad,this)},onLoad:function(){this.formPanel.items&&this.formPanel.removeAll();this.fillForm()},
fillForm:function(){this.attributeStore.each(function(a){(a=GeoExt.form.recordToField(a))&&this.formPanel.add(a)},this);this.formPanel.doLayout()},onFormDestroy:function(){this.unbind()}};Ext.preg("gx_attributeform",GeoExt.plugins.AttributeForm);Ext.namespace("GeoExt");
GeoExt.ZoomSliderTip=Ext.extend(GeoExt.SliderTip,{template:"<div>Zoom Level: {zoom}</div><div>Resolution: {resolution}</div><div>Scale: 1 : {scale}</div>",compiledTemplate:null,init:function(a){this.compiledTemplate=new Ext.Template(this.template);GeoExt.ZoomSliderTip.superclass.init.call(this,a)},getText:function(a){return this.compiledTemplate.apply({zoom:a.value,resolution:this.slider.getResolution(),scale:Math.round(this.slider.getScale())})}});Ext.namespace("GeoExt.tree");
GeoExt.tree.LayerParamNode=Ext.extend(Ext.tree.TreeNode,{layer:null,param:null,item:null,delimiter:null,allItems:null,constructor:function(a){var b=a||{};b.iconCls=b.iconCls||"gx-tree-layerparam-icon";b.text=b.text||b.item;this.param=b.param;this.item=b.item;this.delimiter=b.delimiter||",";this.allItems=b.allItems;GeoExt.tree.LayerParamNode.superclass.constructor.apply(this,arguments);this.getLayer();if(this.layer){if(!this.allItems)this.allItems=this.getItemsFromLayer();if(this.attributes.checked==
null)this.attributes.checked=this.layer.getVisibility()&&this.getItemsFromLayer().indexOf(this.item)>=0;else this.onCheckChange(this,this.attributes.checked);this.layer.events.on({visibilitychanged:this.onLayerVisibilityChanged,scope:this});this.on({checkchange:this.onCheckChange,scope:this})}},getLayer:function(){if(!this.layer){var a=this.attributes.layer;if(typeof a=="string"){var b=this.attributes.layerStore||GeoExt.MapPanel.guess().layers,c=b.findBy(function(d){return d.get("title")==a});a=c!=
-1?b.getAt(c).getLayer():null}this.layer=a}return this.layer},getItemsFromLayer:function(){var a=this.layer.params[this.param];return a instanceof Array?a:a?a.split(this.delimiter):[]},createParams:function(a){var b={};b[this.param]=this.layer.params[this.param]instanceof Array?a:a.join(this.delimiter);return b},onLayerVisibilityChanged:function(){this.getItemsFromLayer().length===0&&this.layer.mergeNewParams(this.createParams(this.allItems));var a=this.layer.getVisibility();a&&this.getItemsFromLayer().indexOf(this.item)!==
-1&&this.getUI().toggleCheck(true);if(!a){this.layer.mergeNewParams(this.createParams([]));this.getUI().toggleCheck(false)}},onCheckChange:function(a,b){var c=this.layer,d=[],e=this.getItemsFromLayer();if(b===true&&c.getVisibility()===false&&e.length===this.allItems.length)e=[];Ext.each(this.allItems,function(g){if(g!==this.item&&e.indexOf(g)!==-1||b===true&&g===this.item)d.push(g)},this);var f=d.length>0;f&&c.mergeNewParams(this.createParams(d));f!==c.getVisibility()&&c.setVisibility(f);!f&&c.mergeNewParams(this.createParams([]))},
destroy:function(){var a=this.layer;a instanceof OpenLayers.Layer&&a.events.un({visibilitychanged:this.onLayerVisibilityChanged,scope:this});delete this.layer;this.un("checkchange",this.onCheckChange,this);GeoExt.tree.LayerParamNode.superclass.destroy.apply(this,arguments)}});Ext.tree.TreePanel.nodeTypes.gx_layerparam=GeoExt.tree.LayerParamNode;Ext.namespace("GeoExt");
GeoExt.UrlLegend=Ext.extend(GeoExt.LayerLegend,{initComponent:function(){GeoExt.UrlLegend.superclass.initComponent.call(this);this.add(new GeoExt.LegendImage({url:this.layerRecord.get("legendURL")}))},update:function(){GeoExt.UrlLegend.superclass.update.apply(this,arguments);this.items.get(1).setUrl(this.layerRecord.get("legendURL"))}});GeoExt.UrlLegend.supports=function(a){return a.get("legendURL")!=null};GeoExt.LayerLegend.types.gx_urllegend=GeoExt.UrlLegend;Ext.reg("gx_urllegend",GeoExt.UrlLegend);
Ext.namespace("GeoExt.state");GeoExt.state.PermalinkProvider=function(a){GeoExt.state.PermalinkProvider.superclass.constructor.apply(this,arguments);a=a||{};var b=a.url;delete a.url;Ext.apply(this,a);this.state=this.readURL(b)};
Ext.extend(GeoExt.state.PermalinkProvider,Ext.state.Provider,{encodeType:true,readURL:function(a){var b={};a=OpenLayers.Util.getParameters(a);var c,d,e;for(c in a)if(a.hasOwnProperty(c)){d=c.split("_");if(d.length>1){e=d[0];b[e]=b[e]||{};b[e][d.slice(1).join("_")]=this.encodeType?this.decodeValue(a[c]):a[c]}}return b},getLink:function(a){a=a||document.location.href;var b={},c,d,e=this.state;for(c in e)if(e.hasOwnProperty(c))for(d in e[c])b[c+"_"+d]=this.encodeType?unescape(this.encodeValue(e[c][d])):
e[c][d];OpenLayers.Util.applyDefaults(b,OpenLayers.Util.getParameters(a));b=OpenLayers.Util.getParameterString(b);c=a.indexOf("?");if(c>0)a=a.substring(0,c);return Ext.urlAppend(a,b)}});Ext.namespace("GeoExt");
GeoExt.LegendImage=Ext.extend(Ext.BoxComponent,{url:null,defaultImgSrc:null,imgCls:null,initComponent:function(){GeoExt.LegendImage.superclass.initComponent.call(this);if(this.defaultImgSrc===null)this.defaultImgSrc=Ext.BLANK_IMAGE_URL;this.autoEl={tag:"img","class":this.imgCls?this.imgCls:"",src:this.defaultImgSrc}},setUrl:function(a){this.url=a;var b=this.getEl();if(b){b.un("error",this.onImageLoadError,this);b.on("error",this.onImageLoadError,this,{single:true});b.dom.src=a}},onRender:function(a,
b){GeoExt.LegendImage.superclass.onRender.call(this,a,b);this.url&&this.setUrl(this.url)},onDestroy:function(){var a=this.getEl();a&&a.un("error",this.onImageLoadError,this);GeoExt.LegendImage.superclass.onDestroy.apply(this,arguments)},onImageLoadError:function(){this.getEl().dom.src=this.defaultImgSrc}});Ext.reg("gx_legendimage",GeoExt.LegendImage);Ext.namespace("GeoExt.tree");GeoExt.tree.WMSCapabilitiesLoader=function(a){Ext.apply(this,a);GeoExt.tree.WMSCapabilitiesLoader.superclass.constructor.call(this)};
Ext.extend(GeoExt.tree.WMSCapabilitiesLoader,Ext.tree.TreeLoader,{url:null,layerOptions:null,layerParams:null,requestMethod:"GET",getParams:function(){return{service:"WMS",request:"GetCapabilities"}},processResponse:function(a,b,c,d){a=(new OpenLayers.Format.WMSCapabilities).read(a.responseXML||a.responseText);this.processLayer(a.capability,a.capability.request.getmap.href,b);if(typeof c=="function")c.apply(d||b,[b])},createWMSLayer:function(a,b){return a.name?new OpenLayers.Layer.WMS(a.title,b,OpenLayers.Util.extend({formats:a.formats[0],
layers:a.name},this.layerParams),OpenLayers.Util.extend({minScale:a.minScale,queryable:a.queryable,maxScale:a.maxScale,metadata:a},this.layerOptions)):null},processLayer:function(a,b,c){Ext.each(a.nestedLayers,function(d){var e=this.createNode({text:d.title||d.name,nodeType:"node",layer:this.createWMSLayer(d,b),leaf:d.nestedLayers.length===0});e&&c.appendChild(e);d.nestedLayers&&this.processLayer(d,b,e)},this)}});Ext.namespace("GeoExt.data");
GeoExt.data.AttributeReader=function(a,b){a=a||{};if(!a.format)a.format=new OpenLayers.Format.WFSDescribeFeatureType;GeoExt.data.AttributeReader.superclass.constructor.call(this,a,b||a.fields);a.feature&&this.recordType.prototype.fields.add(new Ext.data.Field("value"))};
Ext.extend(GeoExt.data.AttributeReader,Ext.data.DataReader,{read:function(a){var b=a.responseXML;if(!b||!b.documentElement)b=a.responseText;return this.readRecords(b)},readRecords:function(a){a=a instanceof Array?a:this.meta.format.read(a).featureTypes[0].properties;for(var b=this.meta.feature,c=this.recordType,d=c.prototype.fields,e=d.length,f,g,h,i,k,j=[],l=0,m=a.length;l<m;++l){i=false;f=a[l];g={};for(var n=0;n<e;++n){h=d.items[n].name;k=f[h];if(this.ignoreAttribute(h,k)){i=true;break}g[h]=k}if(b){k=
b.attributes[g.name];if(k!==undefined)if(this.ignoreAttribute("value",k))i=true;else g.value=k}i||(j[j.length]=new c(g))}return{success:true,records:j,totalRecords:j.length}},ignoreAttribute:function(a,b){var c=false;if(this.meta.ignore&&this.meta.ignore[a]){var d=this.meta.ignore[a];if(typeof d=="string")c=d===b;else if(d instanceof Array)c=d.indexOf(b)>-1;else if(d instanceof RegExp)c=d.test(b)}return c}});Ext.namespace("GeoExt.tree");
GeoExt.tree.LayerNodeUI=Ext.extend(Ext.tree.TreeNodeUI,{constructor:function(){GeoExt.tree.LayerNodeUI.superclass.constructor.apply(this,arguments)},render:function(){var a=this.node.attributes;if(a.checked===undefined)a.checked=this.node.layer.getVisibility();GeoExt.tree.LayerNodeUI.superclass.render.apply(this,arguments);var b=this.checkbox;if(a.checkedGroup){a=Ext.DomHelper.insertAfter(b,['<input type="radio" name="',a.checkedGroup,'_checkbox" class="',b.className,b.checked?'" checked="checked"':
"",'"></input>'].join(""));a.defaultChecked=b.defaultChecked;Ext.get(b).remove();this.checkbox=a}this.enforceOneVisible()},onClick:function(a){a.getTarget(".x-tree-node-cb",1)?this.toggleCheck(this.isChecked()):GeoExt.tree.LayerNodeUI.superclass.onClick.apply(this,arguments)},toggleCheck:function(a){a=a===undefined?!this.isChecked():a;GeoExt.tree.LayerNodeUI.superclass.toggleCheck.call(this,a);this.enforceOneVisible()},enforceOneVisible:function(){var a=this.node.attributes,b=a.checkedGroup;if(b&&
b!=="gx_baselayer"){var c=this.node.layer,d=this.node.getOwnerTree().getChecked(),e=0;Ext.each(d,function(f){var g=f.layer;if(!f.hidden&&f.attributes.checkedGroup===b){e++;g!=c&&a.checked&&g.setVisibility(false)}});e===0&&a.checked==false&&c.setVisibility(true)}},appendDDGhost:function(a){var b=this.elNode.cloneNode(true),c=Ext.DomQuery.select("input[type='radio']",b);Ext.each(c,function(d){d.name+="_clone"});a.appendChild(b)}});
GeoExt.tree.LayerNode=Ext.extend(Ext.tree.AsyncTreeNode,{layer:null,layerStore:null,constructor:function(a){a.leaf=a.leaf||!(a.children||a.loader);if(!a.iconCls&&!a.children)a.iconCls="gx-tree-layer-icon";if(a.loader&&!(a.loader instanceof Ext.tree.TreeLoader))a.loader=new GeoExt.tree.LayerParamLoader(a.loader);this.defaultUI=this.defaultUI||GeoExt.tree.LayerNodeUI;Ext.apply(this,{layer:a.layer,layerStore:a.layerStore});if(a.text)this.fixedText=true;GeoExt.tree.LayerNode.superclass.constructor.apply(this,
arguments)},render:function(){var a=this.layer instanceof OpenLayers.Layer&&this.layer;if(!a){if(!this.layerStore||this.layerStore=="auto")this.layerStore=GeoExt.MapPanel.guess().layers;var b=this.layerStore.findBy(function(c){return c.get("title")==this.layer},this);if(b!=-1)a=this.layerStore.getAt(b).getLayer()}if(!this.rendered||!a){b=this.getUI();if(a){this.layer=a;if(a.isBaseLayer){this.draggable=false;Ext.applyIf(this.attributes,{checkedGroup:"gx_baselayer"})}if(!this.text)this.text=a.name;
b.show();this.addVisibilityEventHandlers()}else b.hide();this.layerStore instanceof GeoExt.data.LayerStore&&this.addStoreEventHandlers(a)}GeoExt.tree.LayerNode.superclass.render.apply(this,arguments)},addVisibilityEventHandlers:function(){this.layer.events.on({visibilitychanged:this.onLayerVisibilityChanged,scope:this});this.on({checkchange:this.onCheckChange,scope:this})},onLayerVisibilityChanged:function(){this._visibilityChanging||this.getUI().toggleCheck(this.layer.getVisibility())},onCheckChange:function(a,
b){if(b!=this.layer.getVisibility()){this._visibilityChanging=true;var c=this.layer;b&&c.isBaseLayer&&c.map?c.map.setBaseLayer(c):c.setVisibility(b);delete this._visibilityChanging}},addStoreEventHandlers:function(){this.layerStore.on({add:this.onStoreAdd,remove:this.onStoreRemove,update:this.onStoreUpdate,scope:this})},onStoreAdd:function(a,b){for(var c,d=0;d<b.length;++d){c=b[d].getLayer();if(this.layer==c){this.getUI().show();break}else if(this.layer==c.name){this.render();break}}},onStoreRemove:function(a,
b){this.layer==b.getLayer()&&this.getUI().hide()},onStoreUpdate:function(a,b){var c=b.getLayer();!this.fixedText&&this.layer==c&&this.text!==c.name&&this.setText(c.name)},destroy:function(){var a=this.layer;a instanceof OpenLayers.Layer&&a.events.un({visibilitychanged:this.onLayerVisibilityChanged,scope:this});delete this.layer;if(a=this.layerStore){a.un("add",this.onStoreAdd,this);a.un("remove",this.onStoreRemove,this);a.un("update",this.onStoreUpdate,this)}delete this.layerStore;this.un("checkchange",
this.onCheckChange,this);GeoExt.tree.LayerNode.superclass.destroy.apply(this,arguments)}});Ext.tree.TreePanel.nodeTypes.gx_layer=GeoExt.tree.LayerNode;Ext.namespace("GeoExt");
GeoExt.MapPanel=Ext.extend(Ext.Panel,{map:null,layers:null,center:null,zoom:null,prettyStateKeys:false,extent:null,stateEvents:["aftermapmove","afterlayervisibilitychange","afterlayeropacitychange","afterlayerorderchange","afterlayernamechange","afterlayeradd","afterlayerremove"],initComponent:function(){if(!(this.map instanceof OpenLayers.Map))this.map=new OpenLayers.Map(Ext.applyIf(this.map||{},{allOverlays:true}));var a=this.layers;if(!a||a instanceof Array)this.layers=new GeoExt.data.LayerStore({layers:a,
map:this.map.layers.length>0?this.map:null});if(typeof this.center=="string")this.center=OpenLayers.LonLat.fromString(this.center);else if(this.center instanceof Array)this.center=new OpenLayers.LonLat(this.center[0],this.center[1]);if(typeof this.extent=="string")this.extent=OpenLayers.Bounds.fromString(this.extent);else if(this.extent instanceof Array)this.extent=OpenLayers.Bounds.fromArray(this.extent);GeoExt.MapPanel.superclass.initComponent.call(this);this.addEvents("aftermapmove","afterlayervisibilitychange",
"afterlayeropacitychange","afterlayerorderchange","afterlayernamechange","afterlayeradd","afterlayerremove");this.map.events.on({moveend:this.onMoveend,changelayer:this.onChangelayer,addlayer:this.onAddlayer,removelayer:this.onRemovelayer,scope:this})},onMoveend:function(){this.fireEvent("aftermapmove")},onChangelayer:function(a){if(a.property)if(a.property==="visibility")this.fireEvent("afterlayervisibilitychange");else if(a.property==="order")this.fireEvent("afterlayerorderchange");else if(a.property===
"name")this.fireEvent("afterlayernamechange");else a.property==="opacity"&&this.fireEvent("afterlayeropacitychange")},onAddlayer:function(){this.fireEvent("afterlayeradd")},onRemovelayer:function(){this.fireEvent("afterlayerremove")},applyState:function(a){this.center=new OpenLayers.LonLat(a.x,a.y);this.zoom=a.zoom;var b,c,d,e,f,g=this.map.layers;b=0;for(c=g.length;b<c;b++){d=g[b];e=this.prettyStateKeys?d.name:d.id;f=a["visibility_"+e];if(f!==undefined){f=/^true$/i.test(f);if(d.isBaseLayer)f&&this.map.setBaseLayer(d);
else d.setVisibility(f)}e=a["opacity_"+e];e!==undefined&&d.setOpacity(e)}},getState:function(){var a;if(this.map){a=this.map.getCenter();a={x:a.lon,y:a.lat,zoom:this.map.getZoom()};var b,c,d,e,f=this.map.layers;b=0;for(c=f.length;b<c;b++){d=f[b];e=this.prettyStateKeys?d.name:d.id;a["visibility_"+e]=d.getVisibility();a["opacity_"+e]=d.opacity==null?1:d.opacity}return a}},updateMapSize:function(){this.map&&this.map.updateSize()},renderMap:function(){var a=this.map;a.render(this.body.dom);this.layers.bind(a);
if(a.layers.length>0)if(this.center||this.zoom!=null)a.setCenter(this.center,this.zoom);else this.extent?a.zoomToExtent(this.extent):a.zoomToMaxExtent()},afterRender:function(){GeoExt.MapPanel.superclass.afterRender.apply(this,arguments);if(this.ownerCt){this.ownerCt.on("move",this.updateMapSize,this);this.ownerCt.on({afterlayout:{fn:this.renderMap,scope:this,single:true}})}else this.renderMap()},onResize:function(){GeoExt.MapPanel.superclass.onResize.apply(this,arguments);this.updateMapSize()},onBeforeAdd:function(a){typeof a.addToMapPanel===
"function"&&a.addToMapPanel(this);GeoExt.MapPanel.superclass.onBeforeAdd.apply(this,arguments)},remove:function(a){typeof a.removeFromMapPanel==="function"&&a.removeFromMapPanel(this);GeoExt.MapPanel.superclass.remove.apply(this,arguments)},beforeDestroy:function(){this.ownerCt&&this.ownerCt.un("move",this.updateMapSize,this);this.map&&this.map.events&&this.map.events.un({moveend:this.onMoveend,changelayer:this.onChangelayer,addlayer:this.onAddlayer,removelayer:this.onRemovelayer,scope:this});if(!this.initialConfig.map||
!(this.initialConfig.map instanceof OpenLayers.Map))this.map&&this.map.destroy&&this.map.destroy();delete this.map;GeoExt.MapPanel.superclass.beforeDestroy.apply(this,arguments)}});GeoExt.MapPanel.guess=function(){return Ext.ComponentMgr.all.find(function(a){return a instanceof GeoExt.MapPanel})};Ext.reg("gx_mappanel",GeoExt.MapPanel);Ext.namespace("GeoExt");
GeoExt.PrintMapPanel=Ext.extend(GeoExt.MapPanel,{sourceMap:null,printProvider:null,printPage:null,previewScales:null,center:null,zoom:null,extent:null,currentZoom:null,initComponent:function(){if(this.sourceMap instanceof GeoExt.MapPanel)this.sourceMap=this.sourceMap.map;if(!this.map)this.map={};Ext.applyIf(this.map,{projection:this.sourceMap.getProjection(),maxExtent:this.sourceMap.getMaxExtent(),maxResolution:this.sourceMap.getMaxResolution(),units:this.sourceMap.getUnits()});if(!(this.printProvider instanceof
GeoExt.data.PrintProvider))this.printProvider=new GeoExt.data.PrintProvider(this.printProvider);this.printPage=new GeoExt.data.PrintPage({printProvider:this.printProvider});this.previewScales=new Ext.data.Store;this.previewScales.add(this.printProvider.scales.getRange());this.layers=[];Ext.each(this.sourceMap.layers,function(a){var b=a.clone();a.getVisibility()===true&&this.layers.push(b)},this);this.extent=this.sourceMap.getExtent();GeoExt.PrintMapPanel.superclass.initComponent.call(this)},bind:function(){this.printPage.on("change",
this.fitZoom,this);this.printProvider.on("layoutchange",this.syncSize,this);this.map.events.register("moveend",this,this.updatePage);this.printPage.fit(this.sourceMap);if(this.initialConfig.limitScales===true){this.on("resize",this.calculatePreviewScales,this);this.calculatePreviewScales()}},afterRender:function(){GeoExt.PrintMapPanel.superclass.afterRender.apply(this,arguments);this.syncSize();if(this.ownerCt)this.ownerCt.on({afterlayout:{fn:this.bind,scope:this,single:true}});else this.bind()},
adjustSize:function(a,b){var c=this.printProvider.layout.get("size");c=c.width/c.height;var d=this.ownerCt,e=d&&d.autoWidth?0:a||this.initialConfig.width;d=d&&d.autoHeight?0:b||this.initialConfig.height;if(e){b=e/c;if(d&&b>d){b=d;a=b*c}else a=e}else if(d){a=d*c;b=d}return{width:a,height:b}},fitZoom:function(){if(!this._updating&&this.printPage.scale){this._updating=true;var a=this.printPage.getPrintExtent(this.map);this.currentZoom=this.map.getZoomForExtent(a);this.map.zoomToExtent(a);delete this._updating}},
updatePage:function(){if(!this._updating){var a=this.map.getZoom();this._updating=true;a===this.currentZoom?this.printPage.setCenter(this.map.getCenter()):this.printPage.fit(this.map);delete this._updating;this.currentZoom=a}},calculatePreviewScales:function(){this.previewScales.removeAll();this.printPage.suspendEvents();var a=this.printPage.scale,b=this.map.getSize(),c={},d=[];this.printProvider.scales.each(function(g){this.printPage.setScale(g);var h=this.printPage.getPrintExtent(this.map),i=this.map.getZoomForExtent(h);
h=Math.max(h.getWidth()/b.w,h.getHeight()/b.h);var k=this.map.getResolutionForZoom(i);h=Math.abs(h-k);if(!(i in c)||c[i].diff>h){c[i]={rec:g,diff:h};d.indexOf(i)==-1&&d.push(i)}},this);for(var e=0,f=d.length;e<f;++e)this.previewScales.add(c[d[e]].rec);a&&this.printPage.setScale(a);this.printPage.resumeEvents();if(a&&this.previewScales.getCount()>0){e=this.previewScales.getAt(0);f=this.previewScales.getAt(this.previewScales.getCount()-1);if(a.get("value")<f.get("value"))this.printPage.setScale(f);
else a.get("value")>e.get("value")&&this.printPage.setScale(e)}this.fitZoom()},print:function(a){this.printProvider.print(this.map,[this.printPage],a)},beforeDestroy:function(){this.map.events.unregister("moveend",this,this.updatePage);this.printPage.un("change",this.fitZoom,this);this.printProvider.un("layoutchange",this.syncSize,this);GeoExt.PrintMapPanel.superclass.beforeDestroy.apply(this,arguments)}});Ext.reg("gx_printmappanel",GeoExt.PrintMapPanel);Ext.namespace("GeoExt.data");
GeoExt.data.ScaleStore=Ext.extend(Ext.data.Store,{map:null,constructor:function(a){var b=a.map instanceof GeoExt.MapPanel?a.map.map:a.map;delete a.map;a=Ext.applyIf(a,{reader:new Ext.data.JsonReader({},["level","resolution","scale"])});GeoExt.data.ScaleStore.superclass.constructor.call(this,a);b&&this.bind(b)},bind:function(a){this.map=a instanceof GeoExt.MapPanel?a.map:a;this.map.events.register("changebaselayer",this,this.populateFromMap);this.map.baseLayer?this.populateFromMap():this.map.events.register("addlayer",
this,this.populateOnAdd)},unbind:function(){if(this.map){this.map.events.unregister("addlayer",this,this.populateOnAdd);this.map.events.unregister("changebaselayer",this,this.populateFromMap);delete this.map}},populateOnAdd:function(a){if(a.layer.isBaseLayer){this.populateFromMap();this.map.events.unregister("addlayer",this,this.populateOnAdd)}},populateFromMap:function(){for(var a=[],b=this.map.baseLayer.resolutions,c=this.map.baseLayer.units,d=b.length-1;d>=0;d--){var e=b[d];a.push({level:d,resolution:e,
scale:OpenLayers.Util.getScaleFromResolution(e,c)})}this.loadData(a)},destroy:function(){this.unbind();GeoExt.data.ScaleStore.superclass.destroy.apply(this,arguments)}});Ext.namespace("GeoExt.data");
GeoExt.data.FeatureStoreMixin=function(){return{layer:null,reader:null,featureFilter:null,constructor:function(a){a=a||{};a.reader=a.reader||new GeoExt.data.FeatureReader({},a.fields);var b=a.layer;delete a.layer;if(a.features)a.data=a.features;delete a.features;var c={initDir:a.initDir};delete a.initDir;arguments.callee.superclass.constructor.call(this,a);b&&this.bind(b,c)},bind:function(a,b){if(!this.layer){this.layer=a;b=b||{};var c=b.initDir;if(b.initDir==undefined)c=GeoExt.data.FeatureStore.LAYER_TO_STORE|
GeoExt.data.FeatureStore.STORE_TO_LAYER;var d=a.features.slice(0);if(c&GeoExt.data.FeatureStore.STORE_TO_LAYER)for(var e=this.getRange(),f=e.length-1;f>=0;f--)this.layer.addFeatures([e[f].getFeature()]);c&GeoExt.data.FeatureStore.LAYER_TO_STORE&&this.loadData(d,true);a.events.on({featuresadded:this.onFeaturesAdded,featuresremoved:this.onFeaturesRemoved,featuremodified:this.onFeatureModified,scope:this});this.on({load:this.onLoad,clear:this.onClear,add:this.onAdd,remove:this.onRemove,update:this.onUpdate,
scope:this})}},unbind:function(){if(this.layer){this.layer.events.un({featuresadded:this.onFeaturesAdded,featuresremoved:this.onFeaturesRemoved,featuremodified:this.onFeatureModified,scope:this});this.un("load",this.onLoad,this);this.un("clear",this.onClear,this);this.un("add",this.onAdd,this);this.un("remove",this.onRemove,this);this.un("update",this.onUpdate,this);this.layer=null}},getRecordFromFeature:function(a){var b=null;if(a.state!==OpenLayers.State.INSERT)b=this.getById(a.id);else{var c=this.findBy(function(d){return d.getFeature()===
a});if(c>-1)b=this.getAt(c)}return b},onFeaturesAdded:function(a){if(!this._adding){var b=a=a.features;if(this.featureFilter){b=[];var c,d,e;c=0;for(d=a.length;c<d;c++){e=a[c];this.featureFilter.evaluate(e)!==false&&b.push(e)}}this._adding=true;this.loadData(b,true);delete this._adding}},onFeaturesRemoved:function(a){if(!this._removing){a=a.features;var b,c;for(c=a.length-1;c>=0;c--){b=a[c];b=this.getRecordFromFeature(b);if(b!==undefined){this._removing=true;this.remove(b);delete this._removing}}}},
onFeatureModified:function(a){if(!this._updating){a=a.feature;var b=this.getRecordFromFeature(a);if(b!==undefined){b.beginEdit();var c=a.attributes;if(c)for(var d=this.recordType.prototype.fields,e=0,f=d.length;e<f;e++){var g=d.items[e],h=g.mapping||g.name;h in c&&b.set(g.name,g.convert(c[h]))}b.set("state",a.state);b.set("fid",a.fid);b.setFeature(a);this._updating=true;b.endEdit();delete this._updating}}},addFeaturesToLayer:function(a){var b,c,d;d=Array(c=a.length);for(b=0;b<c;b++)d[b]=a[b].getFeature();
if(d.length>0){this._adding=true;this.layer.addFeatures(d);delete this._adding}},onLoad:function(a,b,c){if(!c||c.add!==true){this._removing=true;this.layer.removeFeatures(this.layer.features);delete this._removing;this.addFeaturesToLayer(b)}},onClear:function(){this._removing=true;this.layer.removeFeatures(this.layer.features);delete this._removing},onAdd:function(a,b){this._adding||this.addFeaturesToLayer(b)},onRemove:function(a,b){if(!this._removing)if(this.layer.getFeatureById(b.getFeature().id)!=
null){this._removing=true;this.layer.removeFeatures([b.getFeature()]);delete this._removing}},onUpdate:function(a,b){if(!this._updating){var c=(new GeoExt.data.FeatureRecord).fields,d=b.getFeature();if(d.state!==OpenLayers.State.INSERT)d.state=OpenLayers.State.UPDATE;if(b.fields)if(this.layer.events.triggerEvent("beforefeaturemodified",{feature:d})!==false){var e=d.attributes;b.fields.each(function(f){var g=f.mapping||f.name;c.containsKey(g)||(e[g]=b.get(f.name))});this._updating=true;this.layer.events.triggerEvent("featuremodified",
{feature:d});delete this._updating;this.layer.getFeatureById(d.id)!=null&&this.layer.drawFeature(d)}}}}};GeoExt.data.FeatureStore=Ext.extend(Ext.data.Store,new GeoExt.data.FeatureStoreMixin);GeoExt.data.FeatureStore.LAYER_TO_STORE=1;GeoExt.data.FeatureStore.STORE_TO_LAYER=2;Ext.namespace("GeoExt","GeoExt.data");GeoExt.data.ProtocolProxy=function(a){Ext.apply(this,a);GeoExt.data.ProtocolProxy.superclass.constructor.apply(this,arguments)};
Ext.extend(GeoExt.data.ProtocolProxy,Ext.data.DataProxy,{protocol:null,abortPrevious:true,setParamsAsOptions:false,response:null,load:function(a,b,c,d,e){if(this.fireEvent("beforeload",this,a)!==false){b=OpenLayers.Function.bind(this.loadResponse,this,{params:a||{},request:{callback:c,scope:d,arg:e},reader:b});this.abortPrevious&&this.abortRequest();a={params:a,callback:b,scope:this};Ext.applyIf(a,e);if(this.setParamsAsOptions===true){Ext.applyIf(a,a.params);delete a.params}this.response=this.protocol.read(a)}else c.call(d||
this,null,e,false)},abortRequest:function(){if(this.response){this.protocol.abort(this.response);this.response=null}},loadResponse:function(a,b){if(b.success()){var c=a.reader.read(b);this.fireEvent("load",this,a,a.request.arg);a.request.callback.call(a.request.scope,c,a.request.arg,true)}else{this.fireEvent("loadexception",this,a,b);a.request.callback.call(a.request.scope,null,a.request.arg,false)}}});Ext.namespace("GeoExt");
GeoExt.LegendPanel=Ext.extend(Ext.Panel,{dynamic:true,layerStore:null,preferredTypes:null,filter:function(){return true},initComponent:function(){GeoExt.LegendPanel.superclass.initComponent.call(this)},onRender:function(){GeoExt.LegendPanel.superclass.onRender.apply(this,arguments);if(!this.layerStore)this.layerStore=GeoExt.MapPanel.guess().layers;this.layerStore.each(function(a){this.addLegend(a)},this);if(this.dynamic)this.layerStore.on({add:this.onStoreAdd,remove:this.onStoreRemove,clear:this.onStoreClear,
scope:this})},recordIndexToPanelIndex:function(a){for(var b=this.layerStore,c=-1,d=this.items?this.items.length:0,e,f,g=b.getCount()-1;g>=0;--g){e=b.getAt(g);f=e.getLayer();e=GeoExt.LayerLegend.getTypes(e);if(f.displayInLayerSwitcher&&e.length>0&&b.getAt(g).get("hideInLegend")!==true){++c;if(a===g||c>d-1)break}}return c},getIdForLayer:function(a){return this.id+"-"+a.id},onStoreAdd:function(a,b,c){a=this.recordIndexToPanelIndex(c+b.length-1);c=0;for(var d=b.length;c<d;c++)this.addLegend(b[c],a);this.doLayout()},
onStoreRemove:function(a,b){this.removeLegend(b)},removeLegend:function(a){if(this.items)if(a=this.getComponent(this.getIdForLayer(a.getLayer()))){this.remove(a,true);this.doLayout()}},onStoreClear:function(){this.removeAllLegends()},removeAllLegends:function(){this.removeAll(true);this.doLayout()},addLegend:function(a,b){if(this.filter(a)===true){var c=a.getLayer();b=b||0;var d=GeoExt.LayerLegend.getTypes(a,this.preferredTypes);if(c.displayInLayerSwitcher&&!a.get("hideInLegend")&&d.length>0)this.insert(b,
{xtype:d[0],id:this.getIdForLayer(c),layerRecord:a,hidden:!(!c.map&&c.visibility||c.getVisibility()&&c.calculateInRange())})}},onDestroy:function(){if(this.layerStore){this.layerStore.un("add",this.onStoreAdd,this);this.layerStore.un("remove",this.onStoreRemove,this);this.layerStore.un("clear",this.onStoreClear,this)}GeoExt.LegendPanel.superclass.onDestroy.apply(this,arguments)}});Ext.reg("gx_legendpanel",GeoExt.LegendPanel);Ext.namespace("GeoExt.tree");
GeoExt.tree.TreeNodeUIEventMixin=function(){return{constructor:function(a){a.addEvents("rendernode","rawclicknode");this.superclass=arguments.callee.superclass;this.superclass.constructor.apply(this,arguments)},render:function(){if(!this.rendered){this.superclass.render.apply(this,arguments);this.fireEvent("rendernode",this.node)}},onClick:function(a){this.fireEvent("rawclicknode",this.node,a)!==false&&this.superclass.onClick.apply(this,arguments)}}};Ext.namespace("GeoExt.grid");
GeoExt.grid.FeatureSelectionModelMixin=function(){return{autoActivateControl:true,layerFromStore:true,selectControl:null,bound:false,superclass:null,constructor:function(a){a=a||{};if(a.selectControl instanceof OpenLayers.Control.SelectFeature){if(!a.singleSelect){var b=a.selectControl;a.singleSelect=!(b.multiple||b.multipleKey)}}else if(a.layer instanceof OpenLayers.Layer.Vector){this.selectControl=this.createSelectControl(a.layer,a.selectControl);delete a.layer;delete a.selectControl}this.superclass=
arguments.callee.superclass;this.superclass.constructor.call(this,a)},initEvents:function(){this.superclass.initEvents.call(this);if(this.layerFromStore){var a=this.grid.getStore()&&this.grid.getStore().layer;if(a&&!(this.selectControl instanceof OpenLayers.Control.SelectFeature))this.selectControl=this.createSelectControl(a,this.selectControl)}this.selectControl&&this.bind(this.selectControl)},createSelectControl:function(a,b){b=b||{};b=OpenLayers.Util.extend({toggle:true,multipleKey:(b.singleSelect!==
undefined?b.singleSelect:this.singleSelect)?null:Ext.isMac?"metaKey":"ctrlKey"},b);var c=new OpenLayers.Control.SelectFeature(a,b);a.map.addControl(c);return c},bind:function(a,b){if(!this.bound){b=b||{};this.selectControl=a;if(a instanceof OpenLayers.Layer.Vector)this.selectControl=this.createSelectControl(a,b.controlConfig);this.autoActivateControl&&this.selectControl.activate();for(var c=this.getLayers(),d=0,e=c.length;d<e;d++)c[d].events.on({featureselected:this.featureSelected,featureunselected:this.featureUnselected,
scope:this});this.on("rowselect",this.rowSelected,this);this.on("rowdeselect",this.rowDeselected,this);this.bound=true}return this.selectControl},unbind:function(){var a=this.selectControl;if(this.bound){for(var b=this.getLayers(),c=0,d=b.length;c<d;c++)b[c].events.un({featureselected:this.featureSelected,featureunselected:this.featureUnselected,scope:this});this.un("rowselect",this.rowSelected,this);this.un("rowdeselect",this.rowDeselected,this);this.autoActivateControl&&a.deactivate();this.selectControl=
null;this.bound=false}return a},featureSelected:function(a){if(!this._selecting){var b=this.grid.store.findBy(function(c){return c.getFeature()==a.feature});if(b!=-1&&!this.isSelected(b)){this._selecting=true;this.selectRow(b,!this.singleSelect);this._selecting=false;this.grid.getView().focusRow(b)}}},featureUnselected:function(a){if(!this._selecting){var b=this.grid.store.findBy(function(c){return c.getFeature()==a.feature});if(b!=-1&&this.isSelected(b)){this._selecting=true;this.deselectRow(b);
this._selecting=false;this.grid.getView().focusRow(b)}}},rowSelected:function(a,b,c){a=c.getFeature();if(!this._selecting&&a){b=this.getLayers();c=0;for(var d=b.length;c<d;c++)if(b[c].selectedFeatures.indexOf(a)==-1){this._selecting=true;this.selectControl.select(a);this._selecting=false;break}}},rowDeselected:function(a,b,c){a=c.getFeature();if(!this._selecting&&a){b=this.getLayers();c=0;for(var d=b.length;c<d;c++)if(b[c].selectedFeatures.indexOf(a)!=-1){this._selecting=true;this.selectControl.unselect(a);
this._selecting=false;break}}},getLayers:function(){return this.selectControl.layers||[this.selectControl.layer]}}};GeoExt.grid.FeatureSelectionModel=Ext.extend(Ext.grid.RowSelectionModel,new GeoExt.grid.FeatureSelectionModelMixin);Ext.namespace("GeoExt.data");
GeoExt.data.WMSCapabilitiesStore=function(a){a=a||{};GeoExt.data.WMSCapabilitiesStore.superclass.constructor.call(this,Ext.apply(a,{proxy:a.proxy||(!a.data?new Ext.data.HttpProxy({url:a.url,disableCaching:false,method:"GET"}):undefined),reader:new GeoExt.data.WMSCapabilitiesReader(a,a.fields)}))};Ext.extend(GeoExt.data.WMSCapabilitiesStore,Ext.data.Store);Ext.namespace("GeoExt");
GeoExt.LayerOpacitySliderTip=Ext.extend(GeoExt.SliderTip,{template:"<div>{opacity}%</div>",compiledTemplate:null,init:function(a){this.compiledTemplate=new Ext.Template(this.template);GeoExt.LayerOpacitySliderTip.superclass.init.call(this,a)},getText:function(a){return this.compiledTemplate.apply({opacity:a.value})}});Ext.namespace("GeoExt.ux");
GeoExt.ux.PrintPreview=Ext.extend(Ext.Container,{paperSizeText:"Paper size:",resolutionText:"Resolution:",printText:"Print",emptyTitleText:"Enter map title here.",includeLegendText:"Include legend?",emptyCommentText:"Enter comments here.",creatingPdfText:"Creating PDF...",printProvider:null,sourceMap:null,printMapPanel:null,mapTitleField:"mapTitle",commentField:"comment",legend:null,includeLegend:false,mapTitle:null,comment:null,addMapOverlay:true,busyMask:null,form:null,autoEl:"center",cls:"x-panel-body x-panel-body-noheader",
initComponent:function(){var a={sourceMap:this.sourceMap,printProvider:this.printProvider};if(this.printMapPanel){if(!(this.printMapPanel instanceof GeoExt.PrintMapPanel)){a.xtype="gx_printmappanel";this.printMapPanel=new GeoExt.PrintMapPanel(Ext.applyIf(this.printMapPanel,a))}}else this.printMapPanel=new GeoExt.PrintMapPanel(a);this.sourceMap=this.printMapPanel.sourceMap;this.printProvider=this.printMapPanel.printProvider;this.form=this.createForm();if(!this.items)this.items=[];this.items.push(this.createToolbar(),
{xtype:"container",cls:"gx-printpreview",autoHeight:this.autoHeight,autoWidth:this.autoWidth,items:[this.form,this.printMapPanel]});GeoExt.ux.PrintPreview.superclass.initComponent.call(this);this.addMapOverlay&&this.printMapPanel.add(this.createMapOverlay());this.printMapPanel.on({resize:this.updateSize,scope:this});this.on({render:function(){if(!this.busyMask)this.busyMask=new Ext.LoadMask(this.getEl(),{msg:this.creatingPdfText});this.printProvider.on({beforeprint:this.busyMask.show,print:this.busyMask.hide,
printexception:this.busyMask.hide,scope:this.busyMask})},scope:this})},createToolbar:function(){var a=[];this.printProvider.layouts.getCount()>1&&a.push(this.paperSizeText,{xtype:"combo",width:98,plugins:new GeoExt.plugins.PrintProviderField({printProvider:this.printProvider}),store:this.printProvider.layouts,displayField:"name",typeAhead:true,mode:"local",forceSelection:true,triggerAction:"all",selectOnFocus:true},"&nbsp;");this.printProvider.dpis.getCount()>1&&a.push(this.resolutionText,{xtype:"combo",
width:62,plugins:new GeoExt.plugins.PrintProviderField({printProvider:this.printProvider}),store:this.printProvider.dpis,displayField:"name",tpl:'<tpl for="."><div class="x-combo-list-item">{name} dpi</div></tpl>',typeAhead:true,mode:"local",forceSelection:true,triggerAction:"all",selectOnFocus:true,setValue:function(b){b=parseInt(b)+" dpi";Ext.form.ComboBox.prototype.setValue.apply(this,arguments)}},"&nbsp;");a.push("->",{text:this.printText,iconCls:"icon-print",handler:function(){this.printMapPanel.print(this.includeLegend&&
{legend:this.legend})},scope:this});return{xtype:"toolbar",items:a}},createForm:function(){var a={xtype:"textfield",name:this.mapTitleField,value:this.mapTitle,emptyText:this.emptyTitleText,margins:"0 5 0 0",flex:1,anchor:"100%",hideLabel:true,plugins:new GeoExt.plugins.PrintProviderField({printProvider:this.printProvider})};if(this.legend)var b=new Ext.form.Checkbox({name:"legend",checked:this.includeLegend,boxLabel:this.includeLegendText,hideLabel:true,ctCls:"gx-item-nowrap",handler:function(c,
d){this.includeLegend=d},scope:this});return new Ext.form.FormPanel({autoHeight:true,border:false,defaults:{anchor:"100%"},items:[this.legend?{xtype:"container",layout:"hbox",cls:"x-form-item",items:[a,b]}:a,{xtype:"textarea",name:this.commentField,value:this.comment,emptyText:this.emptyCommentText,hideLabel:true,plugins:new GeoExt.plugins.PrintProviderField({printProvider:this.printProvider})}]})},createMapOverlay:function(){var a=new OpenLayers.Control.ScaleLine;this.printMapPanel.map.addControl(a);
a.activate();return new Ext.Panel({cls:"gx-map-overlay",layout:"column",width:235,bodyStyle:"padding:5px",items:[{xtype:"box",el:a.div,width:a.maxWidth},{xtype:"container",layout:"form",style:"padding: .2em 5px 0 0;",columnWidth:1,cls:"x-small-editor x-form-item",items:{xtype:"combo",name:"scale",anchor:"100%",hideLabel:true,store:this.printMapPanel.previewScales,displayField:"name",typeAhead:true,mode:"local",forceSelection:true,triggerAction:"all",selectOnFocus:true,getListParent:function(){return this.el.up(".x-window")||
document.body},plugins:new GeoExt.plugins.PrintPageField({printPage:this.printMapPanel.printPage})}},{xtype:"box",autoEl:{tag:"div",cls:"gx-northarrow"}}],listeners:{render:function(){function b(c){c.stopPropagation()}this.getEl().on({click:b,dblclick:b,mousedown:b})}}})},updateSize:function(){this.suspendEvents();var a=this.printMapPanel.getWidth();this.form.setWidth(a);this.form.items.get(0).setWidth(a);var b=this.initialConfig.minWidth||0;this.items.get(0).setWidth(this.form.ownerCt.el.getPadding("lr")+
Math.max(a,b));(a=this.ownerCt)&&a instanceof Ext.Window&&this.ownerCt.syncShadow();this.resumeEvents()},beforeDestroy:function(){if(this.busyMask){this.printProvider.un("beforeprint",this.busyMask.show,this.busyMask);this.printProvider.un("print",this.busyMask.hide,this.busyMask)}this.printMapPanel.un("resize",this.updateSize,this);GeoExt.ux.PrintPreview.superclass.beforeDestroy.apply(this,arguments)}});Ext.reg("gxux_printpreview",GeoExt.ux.PrintPreview);Ext.namespace("GeoExt.ux");
GeoExt.ux.GeoNamesSearchCombo=Ext.extend(Ext.form.ComboBox,{map:null,width:350,listWidth:350,loadingText:"Search in Geonames...",emptyText:"Search location in Geonames",zoom:8,minChars:1,queryDelay:50,maxRows:"20",tpl:'<tpl for="."><div class="x-combo-list-item"><h1>{name}<br></h1>{fcodeName} - {countryName}</div></tpl>',lang:"en",countryString:"",continentCode:"",adminCode1:"",adminCode2:"",adminCode3:"",featureClassString:"",featureCodeString:"",tag:"",charset:"UTF8",hideTrigger:true,displayField:"name",
forceSelection:true,queryParam:"name_startsWith",url:"http://ws.geonames.org/searchJSON?",initComponent:function(){GeoExt.ux.GeoNamesSearchCombo.superclass.initComponent.apply(this,arguments);var a="";if(this.countryString.length>0)a+=this.countryString;if(this.featureClassString.length>0)a+=this.featureClassString;if(this.featureCodeString.length>0)a+=this.featureCodeString;this.store=new Ext.data.Store({proxy:new Ext.data.ScriptTagProxy({url:this.url+a,method:"GET"}),baseParams:{maxRows:this.maxRows,
lang:this.lang,continentCode:this.continentCode,adminCode1:this.adminCode1,adminCode2:this.adminCode2,adminCode3:this.adminCode3,tag:this.tag,charset:this.charset},reader:new Ext.data.JsonReader({idProperty:"geonameId",root:"geonames",totalProperty:"totalResultsCount",fields:[{name:"geonameId"},{name:"countryName"},{name:"lng"},{name:"lat"},{name:"name"},{name:"fcodeName"},{name:"adminCode1"},{name:"fclName"},{name:"countryCode"},{name:"fcl"},{name:"fcode"},{name:"population"},{name:"adminName1"}]})});
if(this.zoom>0)this.on("select",function(b,c){var d=new OpenLayers.LonLat(c.data.lng,c.data.lat);d.transform(new OpenLayers.Projection("EPSG:4326"),this.map.getProjectionObject());this.map.setCenter(d,this.zoom)},this)}});Ext.reg("gxux_geonamessearchcombo",GeoExt.ux.GeoNamesSearchCombo);Ext.namespace("GeoExt.Toolbar");
GeoExt.Toolbar.ControlDisplay=Ext.extend(Ext.Toolbar.TextItem,{control:null,map:null,onRender:function(a,b){this.text=this.text?this.text:"&nbsp;";GeoExt.Toolbar.ControlDisplay.superclass.onRender.call(this,a,b);this.control.div=this.el.dom;!this.control.map&&this.map&&this.map.addControl(this.control)}});
