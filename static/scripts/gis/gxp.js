Ext.namespace("gxp");
gxp.util={_uniqueNames:{},dispatch:function(a,b,c){function d(){++f;f===g&&b.call(c,h)}function e(k){window.setTimeout(function(){a[k].apply(c,[d,h])})}b=b||Ext.emptyFn;c=c||this;for(var g=a.length,f=0,h={},j=0;j<g;++j)e(j)},uniqueName:function(a,b){b=b||" ";var c=RegExp(b+"[0-9]*$"),d=a.replace(c,"");c=c.exec(a);c=this._uniqueNames[d]!==undefined?this._uniqueNames[d]:c instanceof Array?Number(c[0]):undefined;var e=d;if(c!==undefined){c++;e+=b+c}this._uniqueNames[d]=c||0;return e},getAbsoluteUrl:function(a){var b;
if(Ext.isIE){b=document.createElement("<a href='"+a+"'/>");b.style.display="none";document.body.appendChild(b);b.href=b.href;document.body.removeChild(b)}else{b=document.createElement("a");b.href=a}return b.href},md5:function(){function a(e){return String.fromCharCode(e&255)+String.fromCharCode(e>>>8&255)+String.fromCharCode(e>>>16&255)+String.fromCharCode(e>>>24&255)}function b(e){for(;e<0;)e+=4294967296;for(;e>4294967295;)e-=4294967296;return e}var c=[0,3614090360,3905402710,606105819,3250441966,
4118548399,1200080426,2821735955,4249261313,1770035416,2336552879,4294925233,2304563134,1804603682,4254626195,2792965006,1236535329,4129170786,3225465664,643717713,3921069994,3593408605,38016083,3634488961,3889429448,568446438,3275163606,4107603335,1163531501,2850285829,4243563512,1735328473,2368359562,4294588738,2272392833,1839030562,4259657740,2763975236,1272893353,4139469664,3200236656,681279174,3936430074,3572445317,76029189,3654602809,3873151461,530742520,3299628645,4096336452,1126891415,2878612391,
4237533241,1700485571,2399980690,4293915773,2240044497,1873313359,4264355552,2734768916,1309151649,4149444226,3174756917,718787259,3951481745],d=[[function(e,g,f){return e&g|~e&f},[[0,7,1],[1,12,2],[2,17,3],[3,22,4],[4,7,5],[5,12,6],[6,17,7],[7,22,8],[8,7,9],[9,12,10],[10,17,11],[11,22,12],[12,7,13],[13,12,14],[14,17,15],[15,22,16]]],[function(e,g,f){return e&f|g&~f},[[1,5,17],[6,9,18],[11,14,19],[0,20,20],[5,5,21],[10,9,22],[15,14,23],[4,20,24],[9,5,25],[14,9,26],[3,14,27],[8,20,28],[13,5,29],[2,
9,30],[7,14,31],[12,20,32]]],[function(e,g,f){return e^g^f},[[5,4,33],[8,11,34],[11,16,35],[14,23,36],[1,4,37],[4,11,38],[7,16,39],[10,23,40],[13,4,41],[0,11,42],[3,16,43],[6,23,44],[9,4,45],[12,11,46],[15,16,47],[2,23,48]]],[function(e,g,f){return g^(e|~f)},[[0,6,49],[7,10,50],[14,15,51],[5,21,52],[12,6,53],[3,10,54],[10,15,55],[1,21,56],[8,6,57],[15,10,58],[6,15,59],[13,21,60],[4,6,61],[11,10,62],[2,15,63],[9,21,64]]]];return function(e){var g,f,h,j,k,l,m,o,n,p,q;g=[1732584193,4023233417,2562383102,
271733878];f=e.length;h=f&63;j=h<56?56-h:120-h;if(j>0){e+="\u0080";for(h=0;h<j-1;h++)e+="\u0000"}e+=a(f*8);e+=a(0);f+=j+8;j=[0,1,2,3];k=[16];l=[4];for(p=0;p<f;p+=64){h=0;for(n=p;h<16;h++,n+=4)k[h]=e.charCodeAt(n)|e.charCodeAt(n+1)<<8|e.charCodeAt(n+2)<<16|e.charCodeAt(n+3)<<24;for(h=0;h<4;h++)l[h]=g[h];for(h=0;h<4;h++){m=d[h][0];o=d[h][1];for(n=0;n<16;n++){q=k;var r=l,t=o[n],u=void 0,w=void 0,v=void 0,y=void 0,s=void 0,x=void 0,z=void 0;s=void 0;v=void 0;u=j[0];w=j[1];v=j[2];y=j[3];s=t[0];x=t[1];
z=t[2];v=m(r[w],r[v],r[y]);s=r[u]+v+q[s]+c[z];s=b(s);s=s<<x|s>>>32-x;s+=r[w];r[u]=b(s);q=j[0];j[0]=j[3];j[3]=j[2];j[2]=j[1];j[1]=q}}for(h=0;h<4;h++){g[h]+=l[h];g[h]=b(g[h])}}h=a(g[0])+a(g[1])+a(g[2])+a(g[3]);g="";for(e=0;e<16;e++){f=h.charCodeAt(e);g+="0123456789abcdef".charAt(f>>4&15);g+="0123456789abcdef".charAt(f&15)}return g}}()};Ext.namespace("gxp.plugins");
gxp.plugins.LayerSource=Ext.extend(Ext.util.Observable,{store:null,title:"",constructor:function(a){this.initialConfig=a;Ext.apply(this,a);this.addEvents("ready","failure");gxp.plugins.LayerSource.superclass.constructor.apply(this,arguments)},init:function(a){this.target=a;this.createStore()},getMapProjection:function(){var a=this.target.mapPanel.map.projection;return this.target.mapPanel.map.getProjectionObject()||a&&new OpenLayers.Projection(a)||new OpenLayers.Projection("EPSG:4326")},getProjection:function(a){a=
a.getLayer();var b=this.getMapProjection();return(a.projection?a.projection instanceof OpenLayers.Projection?a.projection:new OpenLayers.Projection(a.projection):b).equals(b)?b:null},createStore:function(){this.fireEvent("ready",this)},createLayerRecord:function(){},getConfigForRecord:function(a){var b=a.getLayer();return{source:a.get("source"),name:a.get("name"),title:a.get("title"),visibility:b.getVisibility(),opacity:b.opacity||undefined,group:a.get("group"),fixed:a.get("fixed"),selected:a.get("selected")}}});
Ext.namespace("gxp.plugins");
gxp.plugins.Tool=Ext.extend(Ext.util.Observable,{ptype:"gxp_tool",autoActivate:true,actionTarget:"map.tbar",output:null,constructor:function(a){this.initialConfig=a;this.active=false;Ext.apply(this,a);if(!this.id)this.id=Ext.id();this.output=[];this.addEvents("activate","deactivate");gxp.plugins.Tool.superclass.constructor.apply(this,arguments)},init:function(a){a.tools[this.id]=this;this.target=a;this.autoActivate&&this.activate();this.target.on("portalready",this.addActions,this)},activate:function(){if(this.active===
false){this.active=true;this.fireEvent("activate",this);return true}},deactivate:function(){if(this.active===true){this.active=false;this.fireEvent("deactivate",this);return true}},addActions:function(a){a=a||this.actions;if(!a||this.actionTarget===null)this.addOutput();else{var b=this.actionTarget instanceof Array?this.actionTarget:[this.actionTarget];a=a instanceof Array?a:[a];var c,d,e,g,f,h=null;for(d=b.length-1;d>=0;--d){if(c=b[d]){if(c instanceof Object){h=c.index;c=c.target}c=c.split(".");
f=c[0];c=c.length>1&&c[1];f=f?f=="map"?this.target.mapPanel:Ext.getCmp(f)||this.target.portal[f]:this.target.portal;if(c)f=(e={tbar:"getTopToolbar",bbar:"getBottomToolbar",fbar:"getFooterToolbar"}[c])?f[e]():f[c]}e=0;for(g=a.length;e<g;++e){if(!(a[e]instanceof Ext.Action||a[e]instanceof Ext.Component))if(typeof a[e]!="string"){if(e==this.defaultAction)a[e].pressed=true;a[e]=new Ext.Action(a[e])}c=a[e];if(e==this.defaultAction&&c instanceof GeoExt.Action)c.isDisabled()?c.activateOnEnable=true:c.control.activate();
if(f){if(f instanceof Ext.menu.Menu)c=Ext.apply(new Ext.menu.Item(c),{text:c.initialConfig.menuText});c=h===null?f.add(c):f.insert(h,c);if(h!==null)h+=1;if(this.outputAction!=null&&e==this.outputAction){var j;c.on("click",function(){if(j)this.outputTarget?j.show():j.ownerCt.ownerCt.show();else j=this.addOutput()},this)}}}if(f)f.isVisible()?f.doLayout():f instanceof Ext.menu.Menu||f.show()}return this.actions=a}},addOutput:function(a){if(a||this.outputConfig){a=a||{};var b=this.outputTarget;if(b){b=
b==="map"?this.target.mapPanel:Ext.getCmp(b)||this.target.portal[b];Ext.apply(a,this.outputConfig)}else{b=this.outputConfig||{};b=(new Ext.Window(Ext.apply({hideBorders:true,shadow:false,closeAction:"hide",autoHeight:!b.height,layout:b.height?"fit":undefined,items:[{defaults:{autoHeight:!b.height}}]},b))).show().items.get(0)}a=b.add(a);a instanceof Ext.Window?a.show():b.doLayout();this.output.push(a);return a}},removeOutput:function(){for(var a,b=this.output.length-1;b>=0;--b){a=this.output[b];if(this.outputTarget){a.ownerCt.remove(a);
if(a.ownerCt instanceof Ext.Window)a.ownerCt[a.ownerCt.closeAction]()}else a.findParentBy(function(c){return c instanceof Ext.Window}).close()}this.output=[]}});Ext.preg(gxp.plugins.Tool.prototype.ptype,gxp.plugins.Tool);Ext.namespace("gxp.plugins");
gxp.plugins.ZoomToExtent=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_zoomtoextent",menuText:"Zoom To Max Extent",tooltip:"Zoom To Max Extent",extent:null,closest:true,iconCls:"gxp-icon-zoomtoextent",closest:true,constructor:function(){gxp.plugins.ZoomToExtent.superclass.constructor.apply(this,arguments);if(this.extent instanceof Array)this.extent=OpenLayers.Bounds.fromArray(this.extent)},addActions:function(){return gxp.plugins.ZoomToExtent.superclass.addActions.apply(this,[{text:this.buttonText,menuText:this.menuText,
iconCls:this.iconCls,tooltip:this.tooltip,handler:function(){var a=this.target.mapPanel.map,b=typeof this.extent=="function"?this.extent():this.extent;if(!b)for(var c,d=0,e=a.layers.length;d<e;++d){c=a.layers[d];if(c.getVisibility()){c=c.restrictedExtent||c.maxExtent;if(b)b.extend(c);else if(c)b=c.clone()}}if(b){if(d=a.restrictedExtent||a.maxExtent)b=new OpenLayers.Bounds(Math.max(b.left,d.left),Math.max(b.bottom,d.bottom),Math.min(b.right,d.right),Math.min(b.top,d.top));a.zoomToExtent(b,this.closest)}},
scope:this}])}});Ext.preg(gxp.plugins.ZoomToExtent.prototype.ptype,gxp.plugins.ZoomToExtent);Ext.namespace("gxp.plugins");
gxp.plugins.ClickableFeatures=Ext.extend(gxp.plugins.Tool,{featureManager:null,toleranceParameters:["BUFFER","RADIUS"],noFeatureClick:function(a){if(!this.selectControl)this.selectControl=new OpenLayers.Control.SelectFeature(this.target.tools[this.featureManager].featureLayer);var b=this.target.mapPanel.map.getLonLatFromPixel(a.xy),c=this.target.tools[this.featureManager],d=c.page;if(!(c.visible()=="all"&&c.paging&&d&&d.extent.containsLonLat(b)))if(b=c.layerRecord&&c.layerRecord.getLayer()){d=this.target.mapPanel.map;
var e=d.getSize();e=Ext.applyIf({REQUEST:"GetFeatureInfo",BBOX:d.getExtent().toBBOX(),WIDTH:e.w,HEIGHT:e.h,X:a.xy.x,Y:a.xy.y,QUERY_LAYERS:b.params.LAYERS,INFO_FORMAT:"application/vnd.ogc.gml",EXCEPTIONS:"application/vnd.ogc.se_xml",FEATURE_COUNT:1},b.params);if(typeof this.tolerance==="number")for(var g=0,f=this.toleranceParameters.length;g<f;++g)e[this.toleranceParameters[g]]=this.tolerance;d=d.getProjection();if(parseFloat(b.params.VERSION)>=1.3)e.CRS=d;else e.SRS=d;new GeoExt.data.FeatureStore({fields:{},
proxy:new GeoExt.data.ProtocolProxy({protocol:new OpenLayers.Protocol.HTTP({url:typeof b.url==="string"?b.url:b.url[0],params:e,format:new OpenLayers.Format.WMSGetFeatureInfo})}),autoLoad:true,listeners:{load:function(h,j){if(j.length>0){var k=j[0].get("fid"),l=new OpenLayers.Filter.FeatureId({fids:[k]}),m=function(){c.loadFeatures(l,function(n){this.autoLoadedFeature=n[0];this.select(n[0])},this)}.createDelegate(this),o=c.featureLayer.getFeatureByFid(k);if(o)this.select(o);else if(c.paging){o=this.target.mapPanel.map.getLonLatFromPixel(a.xy);
c.setPage({lonLat:o},function(){var n=c.featureLayer.getFeatureByFid(k);if(n)this.select(n);else this.autoLoadFeatures===true&&m()},this)}else m()}},scope:this}})}},select:function(a){this.selectControl.unselectAll(this.popup&&this.popup.editing&&{except:this.popup.feature});this.selectControl.select(a)}});Ext.namespace("gxp.plugins");
gxp.plugins.RemoveLayer=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_removelayer",removeMenuText:"Remove layer",removeActionTip:"Remove layer",addActions:function(){var a,b=gxp.plugins.RemoveLayer.superclass.addActions.apply(this,[{menuText:this.removeMenuText,iconCls:"gxp-icon-removelayers",disabled:true,tooltip:this.removeActionTip,handler:function(){var e=a;e&&this.target.mapPanel.layers.remove(e)},scope:this}]),c=b[0];this.target.on("layerselectionchange",function(e){a=e;c.setDisabled(this.target.mapPanel.layers.getCount()<=
1||!e)},this);var d=function(e){c.setDisabled(!a||e.getCount()<=1)};this.target.mapPanel.layers.on({add:d,remove:d});return b}});Ext.preg(gxp.plugins.RemoveLayer.prototype.ptype,gxp.plugins.RemoveLayer);Ext.namespace("gxp");
gxp.Viewer=Ext.extend(Ext.util.Observable,{defaultToolType:"gxp_tool",tools:null,selectedLayer:null,constructor:function(a){this.addEvents("ready","portalready","beforelayerselectionchange","layerselectionchange");Ext.apply(this,{layerSources:{},portalItems:[]});this.createLayerRecordQueue=[];this.loadConfig(a,this.applyConfig);gxp.Viewer.superclass.constructor.apply(this,arguments)},selectLayer:function(a){a=a||null;var b=false;if(this.fireEvent("beforelayerselectionchange",a)!==false){b=true;this.selectedLayer=
a;this.fireEvent("layerselectionchange",a)}return b},loadConfig:function(a){this.applyConfig(a)},applyConfig:function(a){this.initialConfig=Ext.apply({},a);Ext.apply(this,this.initialConfig);this.load()},load:function(){if(this.proxy)OpenLayers.ProxyHost=this.proxy;this.initMapPanel();this.initTools();var a=[],b;for(b in this.sources)a.push(this.createSourceLoader(b));a.push(function(c){Ext.onReady(function(){this.initPortal();c()},this)});gxp.util.dispatch(a,this.activate,this)},createSourceLoader:function(a){return function(b){var c=
this.sources[a];c.projection=this.initialConfig.map.projection;this.addLayerSource({id:a,config:c,callback:b,fallback:function(){b()},scope:this})}},addLayerSource:function(a){var b=a.id||Ext.id(null,"gxp-source-"),c;try{c=Ext.ComponentMgr.createPlugin(a.config,this.defaultSourceType)}catch(d){throw Error("Could not create new source plugin with ptype: "+a.config.ptype);}c.on({ready:function(){(a.callback||Ext.emptyFn).call(a.scope||this,b)},failure:function(){var e=a.fallback||Ext.emptyFn;delete this.layerSources[b];
e.apply(a.scope||this,arguments)},scope:this});this.layerSources[b]=c;c.init(this);return c},initMapPanel:function(){var a=Ext.apply({},this.initialConfig.map),b={};if(this.initialConfig.map)for(var c="theme,controls,resolutions,projection,units,maxExtent,restrictedExtent,maxResolution,numZoomLevels".split(","),d,e=c.length-1;e>=0;--e){d=c[e];if(d in a){b[d]=a[d];delete a[d]}}this.mapPanel=new GeoExt.MapPanel(Ext.applyIf({map:Ext.applyIf({theme:b.theme||null,controls:b.controls||[new OpenLayers.Control.Navigation({zoomWheelOptions:{interval:250}}),
new OpenLayers.Control.PanPanel,new OpenLayers.Control.ZoomPanel,new OpenLayers.Control.Attribution],maxExtent:b.maxExtent&&OpenLayers.Bounds.fromArray(b.maxExtent),restrictedExtent:b.restrictedExtent&&OpenLayers.Bounds.fromArray(b.restrictedExtent),numZoomLevels:b.numZoomLevels||20},b),center:a.center&&new OpenLayers.LonLat(a.center[0],a.center[1]),resolutions:a.resolutions,layers:null,items:this.mapItems,tbar:a.tbar||{hidden:true}},a));this.mapPanel.layers.on({add:function(g,f){for(var h,j=f.length-
1;j>=0;j--){h=f[j];h.get("selected")===true&&this.selectLayer(h)}},remove:function(g,f){f.get("selected")===true&&this.selectLayer()},scope:this})},initTools:function(){this.tools={};if(this.initialConfig.tools&&this.initialConfig.tools.length>0)for(var a,b=0,c=this.initialConfig.tools.length;b<c;b++){try{a=Ext.ComponentMgr.createPlugin(this.initialConfig.tools[b],this.defaultToolType)}catch(d){throw Error("Could not create tool plugin with ptype: "+this.initialConfig.tools[b].ptype);}a.init(this)}},
initPortal:function(){var a=(this.portalConfig||{}).renderTo?Ext.Panel:Ext.Viewport;if(this.portalItems.length===0){this.mapPanel.region="center";this.portalItems.push(this.mapPanel)}this.portal=new a(Ext.applyIf(this.portalConfig||{},{layout:"fit",hideBorders:true,items:{layout:"border",deferredRender:false,items:this.portalItems}}));this.fireEvent("portalready")},activate:function(){Ext.QuickTips.init();this.addLayers();this.checkLayerRecordQueue();this.fireEvent("ready")},addLayers:function(){var a=
this.initialConfig.map;if(a&&a.layers){for(var b,c,d=[],e=[],g=0;g<a.layers.length;++g){b=a.layers[g];if(c=this.layerSources[b.source])if(b=c.createLayerRecord(b))b.get("group")==="background"?d.push(b):e.push(b)}d.sort(function(f,h){return f.getLayer().visibility<h.getLayer().visibility});a=this.mapPanel;g=a.map;d=d.concat(e);if(d.length){a.layers.add(d);if(a.center)g.setCenter(a.center,a.zoom);else a.extent?g.zoomToExtent(a.extent):g.zoomToMaxExtent()}}},getLayerRecordFromMap:function(a){var b=
null;this.mapPanel&&this.mapPanel.layers.each(function(c){if(c.get("source")==a.source&&c.get("name")==a.name){b=c;return false}});return b},createLayerRecord:function(a,b,c){this.createLayerRecordQueue.push({config:a,callback:b,scope:c});this.checkLayerRecordQueue()},checkLayerRecordQueue:function(){for(var a,b,c,d=[],e=0,g=this.createLayerRecordQueue.length;e<g;++e){c=false;a=this.createLayerRecordQueue[e];b=a.config.source;if(b in this.layerSources)if(b=this.layerSources[b].createLayerRecord(a.config)){(function(f,
h){window.setTimeout(function(){f.callback.call(f.scope,h)},0)})(a,b);c=true}c||d.push(a)}this.createLayerRecordQueue=d},getSource:function(a){return a&&this.layerSources[a.get("source")]},getState:function(){var a=Ext.apply({},this.initialConfig),b=this.mapPanel.map.getCenter();Ext.apply(a.map,{center:[b.lon,b.lat],zoom:this.mapPanel.map.zoom,layers:[]});this.mapPanel.layers.each(function(c){if(c.getLayer().displayInLayerSwitcher){var d=c.get("source"),e=this.layerSources[d];if(!e)throw Error("Could not find source for layer '"+
c.get("name")+"'");a.map.layers.push(e.getConfigForRecord(c));a.sources[d]||(a.sources[d]=Ext.apply({},e.initialConfig))}},this);return a},destroy:function(){this.mapPanel.destroy();this.portal&&this.portal.destroy()}});(function(){OpenLayers.DOTS_PER_INCH=25.4/0.28})();Ext.namespace("gxp.plugins");
gxp.plugins.OLSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_olsource",createLayerRecord:function(a){var b,c=window;b=a.type.split(".");for(var d=0,e=b.length;d<e;++d){c=c[b[d]];if(!c)break}if(c&&c.prototype&&c.prototype.initialize){b=function(){c.prototype.initialize.apply(this,a.args)};b.prototype=c.prototype;b=new b;if("visibility"in a)b.visibility=a.visibility;b=new (GeoExt.data.LayerRecord.create([{name:"source",type:"string"},{name:"group",type:"string"},{name:"fixed",type:"boolean"},
{name:"selected",type:"boolean"},{name:"type",type:"string"},{name:"args"}]))({layer:b,title:b.name,source:a.source,group:a.group,fixed:"fixed"in a?a.fixed:false,selected:"selected"in a?a.selected:false,type:a.type,args:a.args},b.id)}else throw Error("Cannot construct OpenLayers layer from given type: "+a.type);return b},getConfigForRecord:function(a){var b=gxp.plugins.OLSource.superclass.getConfigForRecord.apply(this,arguments);a.getLayer();return Ext.apply(b,{type:a.get("type"),args:a.get("args")})}});
Ext.preg(gxp.plugins.OLSource.prototype.ptype,gxp.plugins.OLSource);(function(){function a(b){if(typeof b==="string"||b.nodeType)b=this.meta.format.read(b);this.raw=b}Ext.intercept(GeoExt.data.WMSCapabilitiesReader.prototype,"readRecords",a);GeoExt.data.AttributeReader&&Ext.intercept(GeoExt.data.AttributeReader.prototype,"readRecords",a)})();Ext.namespace("gxp.plugins");
gxp.plugins.WMSSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_wmssource",baseParams:null,format:null,describeLayerStore:null,describedLayers:null,schemaCache:null,createStore:function(){var a=this.baseParams||{SERVICE:"WMS",REQUEST:"GetCapabilities"};if(this.version)a.VERSION=this.version;this.store=new GeoExt.data.WMSCapabilitiesStore({url:this.trimUrl(this.url,a),baseParams:a,format:this.format,autoLoad:true,listeners:{load:function(){if(!this.store.reader.raw||!this.store.reader.raw.service)this.fireEvent("failure",
this,"Invalid capabilities document.");else{if(!this.title)this.title=this.store.reader.raw.service.title;this.fireEvent("ready",this)}},exception:function(b,c,d,e,g,f){delete this.store;this.fireEvent("failure",this,c==="response"?f||"Invalid response from server.":"Trouble creating layer store from response.",Array.prototype.slice.call(arguments))},scope:this}})},trimUrl:function(a,b){var c=OpenLayers.Util.getParameters(a);b=OpenLayers.Util.upperCaseObject(b);var d=0,e;for(e in c){++d;if(e.toUpperCase()in
b){--d;delete c[e]}}return a.split("?").shift()+(d?"?"+OpenLayers.Util.getParameterString(c):"")},createLayerRecord:function(a){var b,c=this.store.findExact("name",a.name);if(c>-1){b=this.store.getAt(c);c=b.getLayer();var d=this.getMapProjection(),e=this.getProjection(b),g=b.get("bbox")[d.getCode()],f=OpenLayers.Layer.WMS.prototype.reverseAxisOrder.call(Ext.applyIf({map:this.target.mapPanel.map},c));d=g&&OpenLayers.Bounds.fromArray(g.bbox,f)||OpenLayers.Bounds.fromArray(b.get("llbbox")).transform(new OpenLayers.Projection("EPSG:4326"),
d);if(!(1/d.getHeight()>0)||!(1/d.getWidth()>0))d=undefined;g=Ext.applyIf({STYLES:a.styles,FORMAT:a.format,TRANSPARENT:a.transparent},c.params);c=new OpenLayers.Layer.WMS(a.title||c.name,c.url,g,{attribution:c.attribution,maxExtent:d,restrictedExtent:d,singleTile:"tiled"in a?!a.tiled:false,ratio:a.ratio||1,visibility:"visibility"in a?a.visibility:true,opacity:"opacity"in a?a.opacity:1,buffer:"buffer"in a?a.buffer:1,projection:e});a=Ext.applyIf({title:c.name,group:a.group,source:a.source,properties:"gxp_wmslayerpanel",
fixed:a.fixed,selected:"selected"in a?a.selected:false,layer:c},b.data);var h=[{name:"source",type:"string"},{name:"group",type:"string"},{name:"properties",type:"string"},{name:"fixed",type:"boolean"},{name:"selected",type:"boolean"}];b.fields.each(function(j){h.push(j)});b=new (GeoExt.data.LayerRecord.create(h))(a,c.id)}return b},getProjection:function(a){var b=this.getMapProjection(),c=b;a=a.get("srs");if(!a[b.getCode()]){c=null;var d,e;for(e in a)if((d=new OpenLayers.Projection(e)).equals(b)){c=
d;break}}return c},initDescribeLayerStore:function(){var a=this.store.reader.raw.capability.request.describelayer;if(a)this.describeLayerStore=new GeoExt.data.WMSDescribeLayerStore({url:a.href,baseParams:{VERSION:this.store.reader.raw.version,REQUEST:"DescribeLayer"}})},describeLayer:function(a,b,c){!this.describeLayerStore&&this.initDescribeLayerStore();if(this.describeLayerStore){if(!this.describedLayers)this.describedLayers={};var d=a.getLayer().params.LAYERS;a=function(){for(var f=Ext.isArray(arguments[1])?
arguments[1]:arguments[0],h,j,k=f.length-1;k>=0;k--){h=f[k];j=h.get("layerName");if(j==d){this.describeLayerStore.un("load",arguments.callee,this);this.describedLayers[j]=true;b.call(c,h);return}else if(typeof this.describedLayers[j]=="function"){h=this.describedLayers[j];this.describeLayerStore.un("load",h,this);h.apply(this,arguments)}}delete e[d];b.call(c,false)};var e=this.describedLayers,g;if(e[d])if((g=this.describeLayerStore.findExact("layerName",d))==-1)this.describeLayerStore.on("load",a,
this);else b.call(c,this.describeLayerStore.getAt(g));else{e[d]=a;this.describeLayerStore.load({params:{LAYERS:d},add:true,callback:a,scope:this})}}else b.call(c,false)},getSchema:function(a,b,c){if(!this.schemaCache)this.schemaCache={};this.describeLayer(a,function(d){if(d&&d.get("owsType")=="WFS"){var e=d.get("typeName"),g=this.schemaCache[e];if(g)if(g.getCount()==0)g.on("load",function(){b.call(c,g)},this,{single:true});else b.call(c,g);else{g=new GeoExt.data.AttributeStore({url:d.get("owsURL"),
baseParams:{SERVICE:"WFS",VERSION:"1.1.0",REQUEST:"DescribeFeatureType",TYPENAME:e},autoLoad:true,listeners:{load:function(){b.call(c,g)},scope:this}});this.schemaCache[e]=g}}else b.call(c,false)},this)},getConfigForRecord:function(a){var b=gxp.plugins.WMSSource.superclass.getConfigForRecord.apply(this,arguments),c=a.getLayer().params;return Ext.apply(b,{format:c.FORMAT,styles:c.STYLES,transparent:c.TRANSPARENT})}});Ext.preg(gxp.plugins.WMSSource.prototype.ptype,gxp.plugins.WMSSource);Ext.namespace("gxp.plugins");
gxp.plugins.WMSCSource=Ext.extend(gxp.plugins.WMSSource,{ptype:"gxp_wmscsource",version:"1.1.1",constructor:function(a){a.baseParams={SERVICE:"WMS",REQUEST:"GetCapabilities",TILED:true};gxp.plugins.WMSCSource.superclass.constructor.apply(this,arguments);this.format=new OpenLayers.Format.WMSCapabilities({profile:"WMSC"})},createLayerRecord:function(a){var b=gxp.plugins.WMSCSource.superclass.createLayerRecord.apply(this,arguments),c=this.store.reader.raw.capability,d=c&&c.vendorSpecific&&c.vendorSpecific?
c.vendorSpecific.tileSets:null;if(d!==null)for(var e=0,g=d.length;e<g;e++){c=d[e];var f=b.get("layer"),h=null,j;for(j in c.srs)h=j;if(c.layers===f.params.LAYERS&&h===this.getMapProjection().getCode()){j=c.bbox[h].bbox;f.addOptions({resolutions:c.resolutions,tileSize:new OpenLayers.Size(c.width,c.height),tileOrigin:new OpenLayers.LonLat(j[0],j[1])});f.params.TILED=a.tiled||false;break}}return b},getConfigForRecord:function(a){var b=gxp.plugins.WMSCSource.superclass.getConfigForRecord.apply(this,arguments);
return Ext.apply(b,{tiled:!!a.getLayer().params.TILED})}});Ext.preg(gxp.plugins.WMSCSource.prototype.ptype,gxp.plugins.WMSCSource);Ext.namespace("gxp.form");
gxp.form.FilterField=Ext.extend(Ext.form.CompositeField,{filter:null,attributes:null,attributesComboConfig:null,initComponent:function(){if(!this.filter)this.filter=this.createDefaultFilter();var a="remote",b=new GeoExt.data.AttributeStore;if(this.attributes)if(this.attributes.getCount()!=0){a="local";this.attributes.each(function(c){/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/.exec(c.get("type"))||b.add([c])})}else b=this.attributes;a={xtype:"combo",store:b,editable:a=="local",typeAhead:true,
forceSelection:true,mode:a,triggerAction:"all",allowBlank:this.allowBlank,displayField:"name",valueField:"name",value:this.filter.property,listeners:{select:function(c,d){this.items.get(1).enable();this.filter.property=d.get("name");this.fireEvent("change",this.filter)},blur:function(c){var d=c.store.findExact("name",c.getValue());if(d!=-1)c.fireEvent("select",c,c.store.getAt(d));else c.startValue!=null&&c.setValue(c.startValue)},scope:this},width:120};this.attributesComboConfig=this.attributesComboConfig||
{};Ext.applyIf(this.attributesComboConfig,a);this.items=this.createFilterItems();this.addEvents("change");gxp.form.FilterField.superclass.initComponent.call(this)},createDefaultFilter:function(){return new OpenLayers.Filter.Comparison},createFilterItems:function(){return[this.attributesComboConfig,{xtype:"gxp_comparisoncombo",disabled:true,allowBlank:this.allowBlank,value:this.filter.type,listeners:{select:function(a,b){this.items.get(2).enable();this.filter.type=b.get("value");this.fireEvent("change",
this.filter)},scope:this}},{xtype:"textfield",disabled:true,value:this.filter.value,width:50,grow:true,growMin:50,anchor:"100%",allowBlank:this.allowBlank,listeners:{change:function(a,b){this.filter.value=b;this.fireEvent("change",this.filter)},scope:this}}]}});Ext.reg("gxp_filterfield",gxp.form.FilterField);Ext.namespace("gxp.plugins");
gxp.plugins.MapQuestSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_mapquestsource",title:"MapQuest Layers",osmAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",osmTitle:"MapQuest OpenStreetMap",naipAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",
naipTitle:"MapQuest Imagery",createStore:function(){var a={projection:"EPSG:900913",maxExtent:new OpenLayers.Bounds(-2.00375083392E7,-2.00375083392E7,2.00375083392E7,2.00375083392E7),maxResolution:156543.03390625,numZoomLevels:19,units:"m",buffer:1};a=[new OpenLayers.Layer.OSM(this.osmTitle,["http://otile1.mqcdn.com/tiles/1.0.0/osm/${z}/${x}/${y}.png","http://otile2.mqcdn.com/tiles/1.0.0/osm/${z}/${x}/${y}.png","http://otile3.mqcdn.com/tiles/1.0.0/osm/${z}/${x}/${y}.png","http://otile4.mqcdn.com/tiles/1.0.0/osm/${z}/${x}/${y}.png"],
OpenLayers.Util.applyDefaults({attribution:this.osmAttribution,type:"osm"},a)),new OpenLayers.Layer.OSM(this.naipTitle,["http://oatile1.mqcdn.com/naip/${z}/${x}/${y}.png","http://oatile2.mqcdn.com/naip/${z}/${x}/${y}.png","http://oatile3.mqcdn.com/naip/${z}/${x}/${y}.png","http://oatile4.mqcdn.com/naip/${z}/${x}/${y}.png"],OpenLayers.Util.applyDefaults({attribution:this.naipAttribution,type:"naip"},a))];this.store=new GeoExt.data.LayerStore({layers:a,fields:[{name:"source",type:"string"},{name:"name",
type:"string",mapping:"type"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});this.store.each(function(b){b.set("group","background")});this.fireEvent("ready",this)},createLayerRecord:function(a){var b,c=this.store.findExact("name",a.name);if(c>-1){b=this.store.getAt(c).copy(Ext.data.Record.id({}));c=b.getLayer().clone();if(a.title){c.setName(a.title);b.set("title",
a.title)}if("visibility"in a)c.visibility=a.visibility;b.set("selected",a.selected||false);b.set("source",a.source);b.set("name",a.name);"group"in a&&b.set("group",a.group);b.data.layer=c;b.commit()}return b}});Ext.preg(gxp.plugins.MapQuestSource.prototype.ptype,gxp.plugins.MapQuestSource);Ext.namespace("gxp.plugins");
gxp.plugins.SnappingAgent=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_snappingagent",init:function(){gxp.plugins.SnappingAgent.superclass.init.apply(this,arguments);this.snappingTargets=[];this.controls=[];this.setSnappingTargets(this.targets)},setSnappingTargets:function(a){this.snappingTargets.length=0;if(a)for(var b=0,c=a.length;b<c;++b)this.addSnappingTarget(a[b])},addSnappingTarget:function(a){a=Ext.apply({},a);var b=new gxp.plugins.FeatureManager({maxFeatures:null,paging:false,layer:{source:a.source,
name:a.name},listeners:{layerchange:function(){var c=this.target.mapPanel.map,d=new OpenLayers.Layer.Vector(a.name,{protocol:b.featureStore.proxy.protocol,strategies:[new OpenLayers.Strategy.BBOX({ratio:1.5})],displayInLayerSwitcher:false,visibility:false,minResolution:a.minResolution,maxResolution:a.maxResolution});c.addLayer(d);c.events.on({moveend:function(){var f=a.minResolution||Number.NEGATIVE_INFINITY,h=a.maxResolution||Number.POSITIVE_INFINITY,j=c.getResolution();f<=j&&j<h&&d.strategies[0].update()},
scope:this});a.layer=d;this.snappingTargets.push(a);for(var e=0,g=this.controls.length;e<g;++e)this.controls[e].addTarget(a)},scope:this}});delete a.source;delete a.name;b.init(this.target)},addSnappingControl:function(a){a=new OpenLayers.Control.Snapping(Ext.applyIf({layer:a},this.initialConfig.controlOptions||this.initialConfig.options||{}));a.setTargets(this.snappingTargets);a.activate();this.controls.push(a)}});Ext.preg(gxp.plugins.SnappingAgent.prototype.ptype,gxp.plugins.SnappingAgent);Ext.namespace("gxp.plugins");
gxp.plugins.Measure=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_measure",lengthMenuText:"Length",areaMenuText:"Area",lengthTooltip:"Measure length",areaTooltip:"Measure area",measureTooltip:"Measure",constructor:function(){gxp.plugins.Measure.superclass.constructor.apply(this,arguments)},destroy:function(){this.button=null;gxp.plugins.Measure.superclass.destroy.apply(this,arguments)},createMeasureControl:function(a,b){var c=new OpenLayers.StyleMap({"default":new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{Point:{pointRadius:4,
graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:3,strokeOpacity:1,strokeColor:"#666666",strokeDashstyle:"dash"},Polygon:{strokeWidth:2,strokeOpacity:1,strokeColor:"#666666",fillColor:"white",fillOpacity:0.3}}})]})}),d=function(){g&&g.destroy()},e=function(h){var j=h.measure,k=h.units;f.displaySystem="english";var l=h.geometry.CLASS_NAME.indexOf("LineString")>-1?f.getBestLength(h.geometry):f.getBestArea(h.geometry),m=l[0];
l=l[1];f.displaySystem="metric";h=h.order==2?"<sup>2</sup>":"";return j.toFixed(2)+" "+k+h+"<br>"+m.toFixed(2)+" "+l+h},g,f=new OpenLayers.Control.Measure(a,{geodesic:true,persist:true,handlerOptions:{layerOptions:{styleMap:c}},eventListeners:{measurepartial:function(h){d();g=new Ext.ToolTip({html:e(h),title:b,autoHide:false,closable:true,draggable:false,mouseOffset:[0,0],showDelay:1,listeners:{hide:d}});if(h.measure>0){h=f.handler.lastUp;var j=this.target.mapPanel.getPosition();g.targetXY=[j[0]+
h.x,j[1]+h.y];g.show()}},measure:function(h){d();g=new Ext.ToolTip({target:Ext.getBody(),html:e(h),title:b,autoHide:false,closable:true,draggable:false,mouseOffset:[0,0],showDelay:1,listeners:{hide:function(){f.cancel();d()}}})},deactivate:d,scope:this}});return f},addActions:function(){this.activeIndex=0;this.button=new Ext.SplitButton({iconCls:"gxp-icon-measure-length",tooltip:this.measureTooltip,enableToggle:true,toggleGroup:this.toggleGroup,allowDepress:true,handler:function(a){a.pressed&&a.menu.items.itemAt(this.activeIndex).setChecked(true)},
scope:this,listeners:{toggle:function(a,b){b||a.menu.items.each(function(c){c.setChecked(false)})},render:function(a){Ext.ButtonToggleMgr.register(a)}},menu:new Ext.menu.Menu({items:[new Ext.menu.CheckItem(new GeoExt.Action({text:this.lengthMenuText,iconCls:"gxp-icon-measure-length",toggleGroup:this.toggleGroup,group:this.toggleGroup,listeners:{checkchange:function(a,b){this.activeIndex=0;this.button.toggle(b);b&&this.button.setIconClass(a.iconCls)},scope:this},map:this.target.mapPanel.map,control:this.createMeasureControl(OpenLayers.Handler.Path,
this.lengthTooltip)})),new Ext.menu.CheckItem(new GeoExt.Action({text:this.areaMenuText,iconCls:"gxp-icon-measure-area",toggleGroup:this.toggleGroup,group:this.toggleGroup,allowDepress:false,listeners:{checkchange:function(a,b){this.activeIndex=1;this.button.toggle(b);b&&this.button.setIconClass(a.iconCls)},scope:this},map:this.target.mapPanel.map,control:this.createMeasureControl(OpenLayers.Handler.Polygon,this.areaTooltip)}))]})});return gxp.plugins.Measure.superclass.addActions.apply(this,[this.button])}});
Ext.preg(gxp.plugins.Measure.prototype.ptype,gxp.plugins.Measure);Ext.namespace("gxp.plugins");
gxp.plugins.Print=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_print",printService:null,menuText:"Print Map",tooltip:"Print Map",notAllNotPrintableText:"Not All Layers Can Be Printed",nonePrintableText:"None of your current map layers can be printed",previewText:"Print Preview",constructor:function(){gxp.plugins.Print.superclass.constructor.apply(this,arguments)},addActions:function(){if(this.printService!==null){var a=new GeoExt.data.PrintProvider({url:this.printService,autoLoad:false,listeners:{beforeprint:function(){c.items.get(0).printMapPanel.layers.each(function(k){k=
k.get("layer").params;for(var l in k)if(k[l]instanceof Array)k[l]=k[l].join(",")})},loadcapabilities:function(){b.initialConfig.disabled=false;b.enable()},print:function(){try{c.close()}catch(k){}}}}),b=this.actions[0].items[0],c,d=function(){if(c){try{c.items.first().printMapPanel.printPage.destroy()}catch(k){}c=null}},e=this.target.mapPanel,g=function(){var k=[];e.layers.each(function(l){l=l.getLayer();f(l)&&k.push(l)});return k},f=function(k){return k instanceof OpenLayers.Layer.WMS||k instanceof
OpenLayers.Layer.OSM},h=function(){c=new Ext.Window({title:this.previewText,modal:true,border:false,resizable:false,width:360,items:[new GeoExt.ux.PrintPreview({autoHeight:true,mapTitle:this.target.about&&this.target.about.title,comment:this.target.about&&this.target.about["abstract"],printMapPanel:{map:Ext.applyIf({controls:[new OpenLayers.Control.Navigation,new OpenLayers.Control.PanPanel,new OpenLayers.Control.ZoomPanel,new OpenLayers.Control.Attribution],eventListeners:{preaddlayer:function(k){return f(k.layer)}}},
e.initialConfig.map),items:[{xtype:"gx_zoomslider",vertical:true,height:100,aggressive:true}]},printProvider:a,includeLegend:false,sourceMap:e})],listeners:{beforedestroy:d}})},j=function(){c.show();c.setWidth(0);var k=0;c.items.get(0).items.get(0).items.each(function(l){if(l.getEl())k+=l.getWidth()});c.setWidth(Math.max(c.items.get(0).printMapPanel.getWidth(),k+20));c.center()};return gxp.plugins.Print.superclass.addActions.call(this,[{menuText:this.menuText,tooltip:this.tooltip,iconCls:"gxp-icon-print",
disabled:true,handler:function(){if(g().length>0){h.call(this);j.call(this)}else Ext.Msg.alert(this.notAllNotPrintableText,this.nonePrintableText)},scope:this,listeners:{render:function(){a.loadCapabilities()}}}])}}});Ext.preg(gxp.plugins.Print.prototype.ptype,gxp.plugins.Print);Ext.namespace("gxp");
gxp.PointSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,graphicCircleText:"circle",graphicSquareText:"square",graphicTriangleText:"triangle",graphicStarText:"star",graphicCrossText:"cross",graphicXText:"x",graphicExternalText:"external",urlText:"URL",opacityText:"opacity",symbolText:"Symbol",sizeText:"Size",rotationText:"Rotation",pointGraphics:null,colorManager:null,external:null,layout:"form",initComponent:function(){if(!this.symbolizer)this.symbolizer={};if(!this.pointGraphics)this.pointGraphics=
[{display:this.graphicCircleText,value:"circle",mark:true},{display:this.graphicSquareText,value:"square",mark:true},{display:this.graphicTriangleText,value:"triangle",mark:true},{display:this.graphicStarText,value:"star",mark:true},{display:this.graphicCrossText,value:"cross",mark:true},{display:this.graphicXText,value:"x",mark:true},{display:this.graphicExternalText}];this.external=!!this.symbolizer.externalGraphic;this.markPanel=new Ext.Panel({border:false,collapsed:this.external,layout:"form",
items:[{xtype:"gxp_fillsymbolizer",symbolizer:this.symbolizer,labelWidth:this.labelWidth,labelAlign:this.labelAlign,colorManager:this.colorManager,listeners:{change:function(){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,labelWidth:this.labelWidth,labelAlign:this.labelAlign,colorManager:this.colorManager,listeners:{change:function(){this.fireEvent("change",this.symbolizer)},scope:this}}]});this.urlField=new Ext.form.TextField({name:"url",
fieldLabel:this.urlText,value:this.symbolizer.externalGraphic,hidden:true,listeners:{change:function(a,b){this.symbolizer.externalGraphic=b;this.fireEvent("change",this.symbolizer)},scope:this},width:100});this.graphicPanel=new Ext.Panel({border:false,collapsed:!this.external,layout:"form",items:[this.urlField,{xtype:"slider",name:"opacity",fieldLabel:this.opacityText,value:[this.symbolizer.graphicOpacity==null?100:this.symbolizer.graphicOpacity*100],isFormField:true,listeners:{changecomplete:function(a,
b){this.symbolizer.graphicOpacity=b/100;this.fireEvent("change",this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(a){return a.value+"%"}})],width:100}]});this.items=[{xtype:"combo",name:"mark",fieldLabel:this.symbolText,store:new Ext.data.JsonStore({data:{root:this.pointGraphics},root:"root",fields:["value","display","preview",{name:"mark",type:"boolean"}]}),value:this.external?0:this.symbolizer.graphicName,displayField:"display",valueField:"value",tpl:new Ext.XTemplate('<tpl for="."><div class="x-combo-list-item gx-pointsymbolizer-mark-item"><tpl if="preview"><img src="{preview}" alt="{display}"/></tpl><span>{display}</span></div></tpl>'),
mode:"local",allowBlank:false,triggerAction:"all",editable:false,listeners:{select:function(a,b){var c=b.get("mark"),d=b.get("value");if(c){if(this.external){this.external=false;delete this.symbolizer.externalGraphic;this.updateGraphicDisplay()}this.symbolizer.graphicName=d}else{if(d){this.urlField.hide();this.urlField.getEl().up(".x-form-item").setDisplayed(false);this.symbolizer.externalGraphic=d}else{this.urlField.show();this.urlField.getEl().up(".x-form-item").setDisplayed(true)}if(!this.external){this.external=
true;this.updateGraphicDisplay()}}this.fireEvent("change",this.symbolizer)},scope:this},width:100},{xtype:"textfield",name:"size",fieldLabel:this.sizeText,value:this.symbolizer.pointRadius&&this.symbolizer.pointRadius*2,listeners:{change:function(a,b){this.symbolizer.pointRadius=b/2;this.fireEvent("change",this.symbolizer)},scope:this},width:100},{xtype:"textfield",name:"rotation",fieldLabel:this.rotationText,value:this.symbolizer.rotation,listeners:{change:function(a,b){this.symbolizer.rotation=
b;this.fireEvent("change",this.symbolizer)},scope:this},width:100},this.markPanel,this.graphicPanel];this.addEvents("change");gxp.PointSymbolizer.superclass.initComponent.call(this)},updateGraphicDisplay:function(){if(this.external){this.markPanel.collapse();this.graphicPanel.expand()}else{this.graphicPanel.collapse();this.markPanel.expand()}}});Ext.reg("gxp_pointsymbolizer",gxp.PointSymbolizer);Ext.namespace("gxp.plugins");
gxp.plugins.Legend=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_legend",menuText:"Legend",tooltip:"Show Legend",actionTarget:null,constructor:function(){gxp.plugins.Legend.superclass.constructor.apply(this,arguments);if(!this.outputConfig)this.outputConfig={width:300,height:400};Ext.applyIf(this.outputConfig,{title:this.menuText})},addActions:function(){return gxp.plugins.Legend.superclass.addActions.apply(this,[[{menuText:this.menuText,iconCls:"gxp-icon-legend",tooltip:this.tooltip,handler:function(){this.addOutput()},
scope:this}]])},addOutput:function(a){return gxp.plugins.Legend.superclass.addOutput.call(this,Ext.apply({xtype:"gx_legendpanel",ascending:false,border:false,layerStore:this.target.mapPanel.layers,defaults:{cls:"gxp-legend-item"}},a))}});Ext.preg(gxp.plugins.Legend.prototype.ptype,gxp.plugins.Legend);Ext.namespace("gxp");
gxp.NewSourceWindow=Ext.extend(Ext.Window,{title:"Add New Server...",cancelText:"Cancel",addServerText:"Add Server",contactingServerText:"Contacting Server...",bodyStyle:"padding: 0px",width:300,closeAction:"hide",error:null,initComponent:function(){this.addEvents("server-added");this.urlTextField=new Ext.form.TextField({fieldLabel:"URL",allowBlank:false,width:240,msgTarget:"under",vtype:"url",validator:OpenLayers.Function.bind(function(){return this.error==null?true:this.error},this)});this.form=
new Ext.form.FormPanel({items:[this.urlTextField],border:false,labelWidth:30,bodyStyle:"padding: 5px",autoWidth:true,autoHeight:true});this.bbar=[new Ext.Button({text:this.cancelText,handler:function(){this.hide()},scope:this}),new Ext.Toolbar.Fill,new Ext.Button({text:this.addServerText,iconCls:"add",handler:function(){this.error=null;this.urlTextField.validate()&&this.fireEvent("server-added",this.urlTextField.getValue())},scope:this})];this.items=this.form;gxp.NewSourceWindow.superclass.initComponent.call(this);
this.form.on("render",function(){this.loadMask=new Ext.LoadMask(this.form.getEl(),{msg:this.contactingServerText})},this);this.on("hide",function(){this.error=null;this.urlTextField.validate();this.urlTextField.setValue("");this.loadMask.hide()},this);this.on("server-added",function(a){this.setLoading();this.addSource(a,function(){this.hide()},function(){this.setError(this.sourceLoadFailureMessage)},this)},this)},setLoading:function(){this.loadMask.show()},setError:function(a){this.loadMask.hide();
this.error=a;this.urlTextField.validate()},addSource:function(){}});Ext.namespace("gxp.plugins");
gxp.plugins.AddLayers=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_addlayers",addMenuText:"Add layers",addActionTip:"Add layers",addServerText:"Add a New Server",addButtonText:"Add layers",untitledText:"Untitled",addLayerSourceErrorText:"Error getting WMS capabilities ({msg}).\nPlease check the url and try again.",availableLayersText:"Available Layers",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>",panelTitleText:"Title",layerSelectionText:"View available data from:",doneText:"Done",uploadText:"Upload Data",
relativeUploadOnly:true,startSourceId:null,selectedSource:null,constructor:function(){this.addEvents("sourceselected");gxp.plugins.AddLayers.superclass.constructor.apply(this,arguments)},addActions:function(){var a=gxp.plugins.AddLayers.superclass.addActions.apply(this,[{tooltip:this.addActionTip,disabled:true,iconCls:"gxp-icon-addlayers",handler:this.showCapabilitiesGrid,scope:this}]);this.target.on("ready",function(){a[0].enable()});return a},showCapabilitiesGrid:function(){this.capGrid||this.initCapGrid();
this.capGrid.show()},initCapGrid:function(){var a,b=[],c;for(c in this.target.layerSources){a=this.target.layerSources[c];if(a.store)b.push([c,a.title||c])}var d=new Ext.data.ArrayStore({fields:["id","title"],data:b});a=new Ext.grid.RowExpander({tpl:new Ext.Template(this.expanderTemplateText)});c=function(){for(var k=f.getValue(),l=this.target.mapPanel.layers,m=this.target.layerSources[k],o=g.getSelectionModel().getSelections(),n,p=0,q=o.length;p<q;++p)if(n=m.createLayerRecord({name:o[p].get("name"),
source:k}))n.get("group")==="background"?l.insert(0,[n]):l.add([n])};var e=0;this.startSourceId!==null&&d.each(function(k){if(k.get("id")===this.startSourceId)e=d.indexOf(k)},this);var g=new Ext.grid.GridPanel({store:this.target.layerSources[b[e][0]].store,layout:"fit",region:"center",autoScroll:true,autoExpandColumn:"title",plugins:[a],colModel:new Ext.grid.ColumnModel([a,{id:"title",header:this.panelTitleText,dataIndex:"title",sortable:true},{header:"Id",dataIndex:"name",width:150,sortable:true}]),
listeners:{rowdblclick:c,scope:this}}),f=new Ext.form.ComboBox({store:d,valueField:"id",displayField:"title",triggerAction:"all",editable:false,allowBlank:false,forceSelection:true,mode:"local",value:b[e][0],listeners:{select:function(k,l){var m=this.target.layerSources[l.get("id")];g.reconfigure(m.store,g.getColumnModel());g.getView().focusRow(0);this.setSelectedSource(m)},scope:this}});a=null;if(this.target.proxy||b.length>1)a=[new Ext.Toolbar.TextItem({text:this.layerSelectionText}),f];this.target.proxy&&
a.push("-",new Ext.Button({text:this.addServerText,iconCls:"gxp-icon-addserver",handler:function(){h.show()}}));var h=new gxp.NewSourceWindow({modal:true,listeners:{"server-added":function(k){h.setLoading();this.target.addLayerSource({config:{url:k},callback:function(l){l=new d.recordType({id:l,title:this.target.layerSources[l].title||this.untitledText});d.insert(0,[l]);f.onSelect(l,0);h.hide()},fallback:function(l,m){h.setError((new Ext.Template(this.addLayerSourceErrorText)).apply({msg:m}))},scope:this})},
scope:this}});c=["->",new Ext.Button({text:this.addButtonText,iconCls:"gxp-icon-addlayers",handler:c,scope:this}),new Ext.Button({text:this.doneText,handler:function(){this.capGrid.hide()},scope:this})];var j=this.createUploadButton();j&&c.unshift(j);this.capGrid=new Ext.Window({title:this.availableLayersText,closeAction:"hide",layout:"border",height:300,width:450,modal:true,items:[g],tbar:a,bbar:c,listeners:{hide:function(){g.getSelectionModel().clearSelections()},show:function(){this.setSelectedSource(this.target.layerSources[b[e][0]])},
scope:this}})},setSelectedSource:function(a){this.selectedSource=a;this.fireEvent("sourceselected",this,a)},createUploadButton:function(){var a,b=this.initialConfig.upload,c;if(b){if(typeof b==="boolean")b={};a=new Ext.Button({xtype:"button",text:this.uploadText,iconCls:"gxp-icon-filebrowse",hidden:true,handler:function(){var g=new gxp.LayerUploadPanel(Ext.apply({url:c,width:350,border:false,bodyStyle:"padding: 10px 10px 0 10px;",frame:true,labelWidth:65,defaults:{anchor:"95%",allowBlank:false,msgTarget:"side"},
listeners:{uploadcomplete:function(h,j){for(var k=j.layers,l={},m=0,o=k.length;m<o;++m)l[k[m].name]=true;this.selectedSource.store.load({callback:function(){var n=this.capGrid.items.get(0),p=n.getSelectionModel();p.clearSelections();var q=[],r=0;this.selectedSource.store.each(function(t,u){if(t.get("name")in l){r=u;q.push(t)}});p.selectRecords(q);window.setTimeout(function(){n.getView().focusRow(r)},1)},scope:this});f.close()},scope:this}},b)),f=new Ext.Window({title:this.uploadText,modal:true,resizable:false,
items:[g]});f.show()},scope:this});var d={},e=function(g,f,h){g in d?window.setTimeout(function(){f.call(h,d[g])},0):Ext.Ajax.request({url:g,disableCaching:false,callback:function(j,k,l){j=l.status;d[g]=j;f.call(h,j)}})};this.on({sourceselected:function(g,f){a.hide();if(this.isEligibleForUpload(f)){var h=f.url.split("/");h.pop();h.push("rest");c=h.join("/");e(c+"/upload",function(j){a.setVisible(j===405)},this)}},scope:this})}return a},isEligibleForUpload:function(a){return a.url&&(this.relativeUploadOnly?
a.url.charAt(0)==="/":true)&&(this.nonUploadSources||[]).indexOf(a.id)===-1}});Ext.preg(gxp.plugins.AddLayers.prototype.ptype,gxp.plugins.AddLayers);Ext.namespace("gxp.plugins");
gxp.plugins.StyleWriter=Ext.extend(Ext.util.Observable,{deletedStyles:null,constructor:function(a){this.initialConfig=a;Ext.apply(this,a);this.deletedStyles=[];gxp.plugins.StyleWriter.superclass.constructor.apply(this,arguments)},init:function(a){this.target=a;a.stylesStore.on({remove:function(b,c){var d=c.get("name");c.get("name")===d&&this.deletedStyles.push(d)},scope:this});a.on({beforesaved:this.write,scope:this})},write:function(a){a.stylesStore.commitChanges();a.fireEvent("saved",a,a.selectedStyle.get("name"))}});
Ext.namespace("gxp.plugins");
gxp.plugins.GeoServerStyleWriter=Ext.extend(gxp.plugins.StyleWriter,{baseUrl:"/geoserver/rest",constructor:function(a){this.initialConfig=a;Ext.apply(this,a);gxp.plugins.GeoServerStyleWriter.superclass.constructor.apply(this,arguments)},write:function(a){a=a||{};var b=[],c=this.target.stylesStore;c.each(function(e){(e.phantom||c.modified.indexOf(e)!==-1)&&this.writeStyle(e,b)},this);var d=function(){this.deleteStyles();for(var e=this.target.stylesStore.getModifiedRecords(),g=e.length-1;g>=0;--g)e[g].phantom=
false;e=this.target;e.stylesStore.commitChanges();a.success&&a.success.call(a.scope);e.fireEvent("saved",e,e.selectedStyle.get("name"))};b.length>0?gxp.util.dispatch(b,function(){this.assignStyles(a.defaultStyle,d)},this):this.assignStyles(a.defaultStyle,d)},writeStyle:function(a,b){var c=a.get("userStyle").name;b.push(function(d){Ext.Ajax.request({method:a.phantom===true?"POST":"PUT",url:this.baseUrl+"/styles"+(a.phantom===true?"":"/"+c+".xml"),headers:{"Content-Type":"application/vnd.ogc.sld+xml; charset=UTF-8"},
xmlData:this.target.createSLD({userStyles:[c]}),success:a.phantom===true?function(){Ext.Ajax.request({method:"POST",url:this.baseUrl+"/layers/"+this.target.layerRecord.get("name")+"/styles.json",jsonData:{style:{name:c}},success:d,scope:this})}:d,scope:this})})},assignStyles:function(a,b){var c=[];this.target.stylesStore.each(function(d){if(!a&&d.get("userStyle").isDefault===true)a=d.get("name");d.get("name")!==a&&this.deletedStyles.indexOf(d.id)===-1&&c.push({name:d.get("name")})},this);Ext.Ajax.request({method:"PUT",
url:this.baseUrl+"/layers/"+this.target.layerRecord.get("name")+".json",jsonData:{layer:{defaultStyle:{name:a},styles:c.length>0?{style:c}:{},enabled:true}},success:b,scope:this})},deleteStyles:function(){for(var a=0,b=this.deletedStyles.length;a<b;++a)Ext.Ajax.request({method:"DELETE",url:this.baseUrl+"/styles/"+this.deletedStyles[a]+"?purge=true"});this.deletedStyles=[]}});Ext.preg("gxp_geoserverstylewriter",gxp.plugins.GeoServerStyleWriter);Ext.namespace("gxp.plugins");
gxp.plugins.WMSGetFeatureInfo=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_wmsgetfeatureinfo",outputTarget:"map",popupCache:null,infoActionTip:"Get Feature Info",popupTitle:"Feature Info",addActions:function(){this.popupCache={};var a=gxp.plugins.WMSGetFeatureInfo.superclass.addActions.call(this,[{tooltip:this.infoActionTip,iconCls:"gxp-icon-getfeatureinfo",toggleGroup:this.toggleGroup,enableToggle:true,allowDepress:true,toggleHandler:function(e,g){for(var f=0,h=c.controls.length;f<h;f++)g?c.controls[f].activate():
c.controls[f].deactivate()}}]),b=this.actions[0].items[0],c={controls:[]},d=function(){for(var e=this.target.mapPanel.layers.queryBy(function(k){return k.get("queryable")}),g=this.target.mapPanel.map,f,h=0,j=c.controls.length;h<j;h++){f=c.controls[h];f.deactivate();f.destroy()}c.controls=[];e.each(function(k){var l=new OpenLayers.Control.WMSGetFeatureInfo({url:k.getLayer().url,queryVisible:true,layers:[k.getLayer()],vendorParams:this.vendorParams,eventListeners:{getfeatureinfo:function(m){var o=m.text.match(/<body[^>]*>([\s\S]*)<\/body>/);
if(o&&!o[1].match(/^\s*$/))this.displayPopup(m,k.get("title")||k.get("name"),o[1])},scope:this}});g.addControl(l);c.controls.push(l);b.pressed&&l.activate()},this)};this.target.mapPanel.layers.on("update",d,this);this.target.mapPanel.layers.on("add",d,this);this.target.mapPanel.layers.on("remove",d,this);return a},displayPopup:function(a,b,c){var d=a.xy.x+"."+a.xy.y;if(d in this.popupCache)a=this.popupCache[d];else{a=this.addOutput({xtype:"gx_popup",title:this.popupTitle,layout:"accordion",location:a.xy,
map:this.target.mapPanel,width:250,height:300,listeners:{close:function(e){return function(){delete this.popupCache[e]}}(d),scope:this}});this.popupCache[d]=a}a.add({title:b,layout:"fit",html:c,autoScroll:true,autoWidth:true,collapsible:true});a.doLayout()}});Ext.preg(gxp.plugins.WMSGetFeatureInfo.prototype.ptype,gxp.plugins.WMSGetFeatureInfo);Ext.namespace("gxp.data");
gxp.data.WFSFeatureStore=Ext.extend(GeoExt.data.FeatureStore,{setOgcFilter:function(a){this.proxy.setFilter(a)},constructor:function(a){if(!(a.proxy&&a.proxy instanceof GeoExt.data.ProtocolProxy))a.proxy=new gxp.data.WFSProtocolProxy(Ext.apply({srsName:a.srsName,url:a.url,featureType:a.featureType,featureNS:a.featureNS,geometryName:a.geometryName,schema:a.schema,filter:a.ogcFilter,maxFeatures:a.maxFeatures},a.proxy));if(!a.writer)a.writer=new Ext.data.DataWriter({write:Ext.emptyFn});gxp.data.WFSFeatureStore.superclass.constructor.apply(this,
arguments);this.reader.extractValues=function(b){return this.readRecords([b.feature]).records[0].data}.createDelegate(this.reader);this.reader.meta.idProperty="id";this.reader.getId=function(b){return b.id}}});Ext.namespace("gxp.plugins");
gxp.plugins.FeatureManager=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_featuremanager",maxFeatures:100,paging:true,autoZoomPage:false,autoSetLayer:true,autoLoadFeatures:false,layerRecord:null,featureStore:null,hitCountProtocol:null,featureLayer:null,schema:null,geometryType:null,toolsShowingLayer:null,style:null,pages:null,page:null,constructor:function(a){this.addEvents("beforequery","query","beforelayerchange","layerchange","beforesetpage","setpage","beforeclearfeatures","clearfeatures");if(a&&a.layer)this.autoSetLayer=
false;gxp.plugins.FeatureManager.superclass.constructor.apply(this,arguments)},init:function(){gxp.plugins.FeatureManager.superclass.init.apply(this,arguments);this.toolsShowingLayer={};this.style={all:new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:this.initialConfig.symbolizer||{Point:{pointRadius:4,graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:4,strokeOpacity:1,strokeColor:"#ff9933"},Polygon:{strokeWidth:2,
strokeOpacity:1,strokeColor:"#ff6633",fillColor:"white",fillOpacity:0.3}}})]}),selected:new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:{display:"none"}})]})};this.featureLayer=new OpenLayers.Layer.Vector(this.id,{displayInLayerSwitcher:false,visibility:false,styleMap:new OpenLayers.StyleMap({select:OpenLayers.Util.extend({display:""},OpenLayers.Feature.Vector.style.select),vertex:this.style.all},{extendDefault:false})});this.target.on({ready:function(){this.target.mapPanel.map.addLayer(this.featureLayer)},
scope:this});this.on({beforedestroy:function(){this.target.mapPanel.map.removeLayer(this.featureLayer)},scope:this})},activate:function(){if(gxp.plugins.FeatureManager.superclass.activate.apply(this,arguments)){if(this.autoSetLayer)this.target.on("beforelayerselectionchange",this.setLayer,this);this.layer&&this.target.createLayerRecord(this.layer,this.setLayer,this);this.on("layerchange",this.setSchema,this);return true}},deactivate:function(){if(gxp.plugins.FeatureManager.superclass.deactivate.apply(this,
arguments)){this.autoSetLayer&&this.target.un("beforelayerselectionchange",this.setLayer,this);this.un("layerchange",this.setSchema,this);this.setLayer();return true}},setLayer:function(a){var b=this.fireEvent("beforelayerchange",this,a);if(b!==false)if(a!==this.layerRecord){this.clearFeatureStore();if(this.layerRecord=a)this.autoLoadFeatures===true?this.loadFeatures():this.setFeatureStore();else this.fireEvent("layerchange",this,null)}return b},setSchema:function(a,b,c){this.schema=c},showLayer:function(a,
b){this.toolsShowingLayer[a]=b||"all";this.setLayerDisplay()},hideLayer:function(a){delete this.toolsShowingLayer[a];this.setLayerDisplay()},setLayerDisplay:function(){var a=this.visible(),b=this.target.mapPanel.map;if(a){a=this.style[a];if(a!==this.featureLayer.styleMap.styles["default"]){this.featureLayer.styleMap.styles["default"]=a;this.featureLayer.redraw()}this.featureLayer.setVisibility(true);b.events.on({addlayer:this.raiseLayer,scope:this})}else if(this.featureLayer.map){this.featureLayer.setVisibility(false);
b.events.un({addlayer:this.raiseLayer,scope:this})}},visible:function(){var a=false,b;for(b in this.toolsShowingLayer)if(a!="all")a=this.toolsShowingLayer[b];return a},raiseLayer:function(){var a=this.featureLayer&&this.featureLayer.map;a&&a.setLayerIndex(this.featureLayer,a.layers.length)},loadFeatures:function(a,b,c){if(this.fireEvent("beforequery",this,a,b,c)!==false){this.filter=a;this.pages=null;if(b){var d=this;d._activeQuery&&d.un("query",d._activeQuery);this.on("query",d._activeQuery=function(e,
g){delete d._activeQuery;this.un("query",arguments.callee,this);g.getCount();g.getCount()==0?b.call(c,[]):this.featureLayer.events.register("featuresadded",this,function(f){this.featureLayer.events.unregister("featuresadded",this,arguments.callee);b.call(c,f.features)})},this,{single:true})}if(this.featureStore){this.featureStore.setOgcFilter(a);this.paging?this.setPage():this.featureStore.load()}else{this.paging&&this.on("layerchange",function(e,g,f){if(f){this.un("layerchange",arguments.callee,
this);this.setPage()}},this);this.setFeatureStore(a,!this.paging)}}},clearFeatures:function(){var a=this.featureStore;if(a)if(this.fireEvent("beforeclearfeatures",this)!==false){a.removeAll();this.fireEvent("clearfeatures",this);a=a.proxy;a.abortRequest();a.protocol.response&&a.protocol.response.abort()}},setFeatureStore:function(a,b){var c=this.layerRecord,d=this.target.getSource(c);if(d&&d instanceof gxp.plugins.WMSSource)d.getSchema(c,function(e){if(e===false)this.clearFeatureStore();else{var g=
[],f,h=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/,j={"xsd:boolean":"boolean","xsd:int":"int","xsd:integer":"int","xsd:short":"int","xsd:long":"int","xsd:date":"date","xsd:string":"string","xsd:float":"float","xsd:double":"float"};e.each(function(l){var m=h.exec(l.get("type"));if(m){f=l.get("name");this.geometryType=m[1]}else{m=j[l.get("type")];l={name:l.get("name"),type:j[m]};if(m=="date")l.dateFormat="Y-m-d\\Z";g.push(l)}},this);var k={srsName:this.target.mapPanel.map.getProjection(),
url:e.url,featureType:e.reader.raw.featureTypes[0].typeName,featureNS:e.reader.raw.targetNamespace,geometryName:f};this.hitCountProtocol=new OpenLayers.Protocol.WFS(Ext.apply({version:"1.1.0",readOptions:{output:"object"},resultType:"hits",filter:a},k));this.featureStore=new gxp.data.WFSFeatureStore(Ext.apply({fields:g,proxy:{protocol:{outputFormat:this.format}},maxFeatures:this.maxFeatures,layer:this.featureLayer,ogcFilter:a,autoLoad:b,autoSave:false,listeners:{write:function(){this.redrawMatchingLayers(c)},
load:function(){this.fireEvent("query",this,this.featureStore,this.filter)},scope:this}},k))}this.fireEvent("layerchange",this,c,e)},this);else{this.clearFeatureStore();this.fireEvent("layerchange",this,c,false)}},redrawMatchingLayers:function(a){var b=a.get("name"),c=a.get("source");this.target.mapPanel.layers.each(function(d){d.get("source")===c&&d.get("name")===b&&d.getLayer().redraw(true)})},clearFeatureStore:function(){if(this.featureStore){this.featureStore.removeAll();this.featureStore.unbind();
this.featureStore.destroy();this.geometryType=this.featureStore=null}},processPage:function(a,b,c,d){b=b||{};var e=b.lonLat?null:b.index,g=b.next,f=this.pages,h=this.pages.indexOf(a);this.setPageFilter(a);var j=g?h==(f.indexOf(g)||f.length)-1:true,k=b.lonLat?a.extent.containsLonLat(b.lonLat):true;if(k&&a.numFeatures&&a.numFeatures<=this.maxFeatures)c.call(this,a);else if(k&&(h==e||j))this.hitCountProtocol.read({callback:function(l){var m=e,o=b.lonLat;if(g)m=(f.indexOf(g)||f.length)-1;if(!m&&o&&a.extent.containsLonLat(o))m=
f.indexOf(a);a.numFeatures=l.numberOfFeatures;if(!this.page)if(a.numFeatures>this.maxFeatures)this.createLeaf(a,Ext.applyIf({index:m,next:g},b),c,d);else if(a.numFeatures==0&&f.length>1){f.remove(a);b.allowEmpty===false&&this.setPage({index:e%this.pages.length,allowEmpty:false,lonLat:new OpenLayers.LonLat(a.extent.right,a.extent.bottom)})}else this.pages.indexOf(a)==m&&c.call(this,a)},scope:this})},createLeaf:function(a,b,c,d){b=b||{};this.layerRecord.getLayer();var e=this.pages.indexOf(a);this.pages.remove(a);
var g=a.extent,f=g.getCenterLonLat();a=[g.left,f.lon,g.left,f.lon];var h=[f.lat,f.lat,g.bottom,g.bottom],j=[f.lon,g.right,f.lon,g.right];g=[g.top,g.top,f.lat,f.lat];var k;for(f=3;f>=0;--f){k={extent:new OpenLayers.Bounds(a[f],h[f],j[f],g[f])};this.pages.splice(e,0,k);this.processPage(k,b,c,d)}},getPagingExtent:function(a){var b=this.layerRecord.getLayer(),c;if(this.filter instanceof OpenLayers.Filter.Spatial&&this.filter.type===OpenLayers.Filter.Spatial.BBOX)c=this.filter;else if(this.filter instanceof
OpenLayers.Filter.Logical&&this.filter.type===OpenLayers.Filter.Logical.AND)for(var d,e=this.filter.filters.length-1;e>=0;--e){d=this.filter.filters[e];if(d instanceof OpenLayers.Filter.Spatial&&d.type===OpenLayers.Filter.Spatial.BBOX){c=d;break}}if((a=c?c.value:this.target.mapPanel.map[a]())&&b.maxExtent)if(a.containsBounds(b.maxExtent))a=b.maxExtent;return a},setPageFilter:function(a){if(a.extent){a=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:this.featureStore.geometryName,
value:a.extent});a=this.filter?new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[this.filter,a]}):a}else a=this.filter;this.featureStore.setOgcFilter(a);this.hitCountProtocol.filter=a;return this.hitCountProtocol.options.filter=a},nextPage:function(a,b){var c=this.page;this.page=null;this.setPage({index:(this.pages.indexOf(c)+1)%this.pages.length,allowEmpty:false},a,b)},previousPage:function(a){var b=this.pages.indexOf(this.page)-1;if(b<0)b=this.pages.length-1;this.setPage({index:b,
allowEmpty:false,next:this.page},a)},setPage:function(a,b,c){if(this.filter instanceof OpenLayers.Filter.FeatureId)this.featureStore.load({callback:function(){b&&b.call(c)}});else if(this.fireEvent("beforesetpage",this,a,b,c)!==false){var d;if(!a){var e=this.getPagingExtent("getExtent");d=this.getPagingExtent("getMaxExtent");a={lonLat:new OpenLayers.LonLat(Math.max(d.left,e.left),Math.min(d.top,e.top)),allowEmpty:false}}a.index=a.index||0;if(a.index=="last"){a.index=this.pages.length-1;a.next=this.pages[0]}this.page=
null;if(this.pages){if(a.lonLat)for(d=this.pages.length-1;d>=0;--d)if(this.pages[d].extent.containsLonLat(a.lonLat)){a.index=d;break}}else{this.layerRecord.getLayer();this.pages=[{extent:d||this.getPagingExtent("getMaxExtent")}];a.index=0}this.processPage(this.pages[a.index],a,function(g){var f=this.target.mapPanel.map;this.page=g;this.setPageFilter(g);this.autoZoomPage&&!f.getExtent().containsLonLat(g.extent.getCenterLonLat())&&f.zoomToExtent(g.extent);this.fireEvent("setpage",this,a,b,c);this.featureStore.load({callback:function(){b&&
b.call(c,g)}})},this)}}});Ext.preg(gxp.plugins.FeatureManager.prototype.ptype,gxp.plugins.FeatureManager);Ext.namespace("gxp.plugins");
gxp.plugins.LayerTree=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_layertree",rootNodeText:"Layers",overlayNodeText:"Overlays",baseNodeText:"Base Layers",addOutput:function(a){var b=this.target,c=this,d=function(f,h){if(h){b.on("layerselectionchange",function(j){!c.selectionChanging&&j===h&&f.select()});if(h===b.selectedLayer)f.on("rendernode",function(){f.select()})}},e=Ext.extend(GeoExt.tree.LayerNodeUI,new GeoExt.tree.TreeNodeUIEventMixin),g=new Ext.tree.TreeNode({text:this.rootNodeText,expanded:true,
isTarget:false,allowDrop:false});g.appendChild(new GeoExt.tree.LayerContainer({text:this.overlayNodeText,iconCls:"gxp-folder",expanded:true,loader:new GeoExt.tree.LayerLoader({store:this.target.mapPanel.layers,filter:function(f){return!f.get("group")&&f.getLayer().displayInLayerSwitcher==true},createNode:function(f){f.uiProvider=e;var h=f.layer,j=f.layerStore;if(h&&j){var k=j.getAt(j.findBy(function(l){return l.getLayer()===h}));if(k&&!k.get("queryable"))f.iconCls="gxp-tree-rasterlayer-icon"}f=GeoExt.tree.LayerLoader.prototype.createNode.apply(this,
[f]);d(f,k);return f}}),singleClickExpand:true,allowDrag:false,listeners:{append:function(f,h){h.expand()}}}));g.appendChild(new GeoExt.tree.LayerContainer({text:this.baseNodeText,iconCls:"gxp-folder",expanded:true,group:"background",loader:new GeoExt.tree.LayerLoader({baseAttrs:{checkedGroup:"background"},store:this.target.mapPanel.layers,filter:function(f){return f.get("group")==="background"&&f.getLayer().displayInLayerSwitcher==true},createNode:function(f){f.uiProvider=e;var h=f.layer,j=f.layerStore;
if(h&&j){var k=j.getAt(j.findBy(function(l){return l.getLayer()===h}));if(k){if(!k.get("queryable"))f.iconCls="gxp-tree-rasterlayer-icon";if(k.get("fixed"))f.allowDrag=false}}j=GeoExt.tree.LayerLoader.prototype.createNode.apply(this,arguments);d(j,k);return j}}),singleClickExpand:true,allowDrag:false,listeners:{append:function(f,h){h.expand()}}}));a=Ext.apply({xtype:"treepanel",root:g,rootVisible:false,border:false,enableDD:true,selModel:new Ext.tree.DefaultSelectionModel({listeners:{beforeselect:function(f,
h){var j=true,k=h&&h.layer;if(k){j=h.layerStore;j=j.getAt(j.findBy(function(l){return l.getLayer()===k}));this.selectionChanging=true;j=this.target.selectLayer(j);this.selectionChanging=false}return j},scope:this}}),listeners:{contextmenu:function(f,h){if(f&&f.layer){f.select();var j=f.getOwnerTree().contextMenu;j.contextNode=f;j.items.getCount()>0&&j.showAt(h.getXY())}},beforemovenode:function(f,h,j,k){if(j!==k){f=k.loader.store;j=f.findBy(function(l){return l.getLayer()===h.layer});f.getAt(j).set("group",
k.attributes.group)}},scope:this},contextMenu:new Ext.menu.Menu({items:[]})},a||{});return gxp.plugins.LayerTree.superclass.addOutput.call(this,a)}});Ext.preg(gxp.plugins.LayerTree.prototype.ptype,gxp.plugins.LayerTree);Ext.namespace("gxp.plugins");
gxp.plugins.BingSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_bingsource",title:"Bing Layers",roadTitle:"Bing Roads",aerialTitle:"Bing Aerial",labeledAerialTitle:"Bing Aerial With Labels",apiKey:"AqTGBsziZHIJYYxgivLBf0hVdrAk9mWO5cQcb8Yux8sW5M8c8opEC2lZqKR1ZZXf",createStore:function(){var a=[new OpenLayers.Layer.Bing({key:this.apiKey,name:this.roadTitle,type:"Road",buffer:1}),new OpenLayers.Layer.Bing({key:this.apiKey,name:this.aerialTitle,type:"Aerial",buffer:1}),new OpenLayers.Layer.Bing({key:this.apiKey,
name:this.labeledAerialTitle,type:"AerialWithLabels",buffer:1})];this.store=new GeoExt.data.LayerStore({layers:a,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"type"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});this.store.each(function(b){b.set("group","background")});this.fireEvent("ready",this)},createLayerRecord:function(a){var b,
c=this.store.findExact("name",a.name);if(c>-1){b=this.store.getAt(c).copy(Ext.data.Record.id({}));c=b.getLayer().clone();if(a.title){c.setName(a.title);b.set("title",a.title)}if("visibility"in a)c.visibility=a.visibility;b.set("selected",a.selected||false);b.set("source",a.source);b.set("name",a.name);"group"in a&&b.set("group",a.group);b.data.layer=c;b.commit()}return b}});Ext.preg(gxp.plugins.BingSource.prototype.ptype,gxp.plugins.BingSource);Ext.namespace("gxp.plugins");
gxp.plugins.WMSRasterStylesDialog={isRaster:null,init:function(a){Ext.apply(a,gxp.plugins.WMSRasterStylesDialog)},createRule:function(){var a=[new OpenLayers.Symbolizer[this.isRaster?"Raster":this.symbolType]];return new OpenLayers.Rule({symbolizers:a})},addRule:function(){var a=this.items.get(2).items.get(0);if(this.isRaster){a.rules.push(this.createPseudoRule());a.rules.length==1&&a.rules.push(this.createPseudoRule());this.savePseudoRules()}else{this.selectedStyle.get("userStyle").rules.push(this.createRule());
a.update();this.selectedStyle.store.afterEdit(this.selectedStyle)}this.updateRuleRemoveButton()},removeRule:function(){if(this.isRaster){var a=this.items.get(2).items.get(0),b=this.selectedRule;a.unselect();a.rules.remove(b);a.rules.length==1&&a.rules.remove(a.rules[0]);this.savePseudoRules()}else gxp.WMSStylesDialog.prototype.removeRule.apply(this,arguments)},duplicateRule:function(){var a=this.items.get(2).items.get(0);if(this.isRaster){a.rules.push(this.createPseudoRule({quantity:this.selectedRule.name,
label:this.selectedRule.title,color:this.selectedRule.symbolizers[0].fillColor,opacity:this.selectedRule.symbolizers[0].fillOpacity}));this.savePseudoRules()}else{var b=this.selectedRule.clone();b.name=gxp.util.uniqueName((b.title||b.name)+" (copy)");delete b.title;this.selectedStyle.get("userStyle").rules.push(b);a.update()}this.updateRuleRemoveButton()},editRule:function(){this.isRaster?this.editPseudoRule():gxp.WMSStylesDialog.prototype.editRule.apply(this,arguments)},editPseudoRule:function(){var a=
this,b=this.selectedRule,c=new Ext.Window({title:"Color Map Entry: "+b.name,width:340,autoHeight:true,modal:true,items:[{bodyStyle:"padding-top: 5px",border:false,defaults:{autoHeight:true,hideMode:"offsets"},items:[{xtype:"form",border:false,labelAlign:"top",defaults:{border:false},style:{padding:"0.3em 0 0 1em"},items:[{layout:"column",defaults:{border:false,style:{"padding-right":"1em"}},items:[{layout:"form",width:70,items:[{xtype:"numberfield",anchor:"95%",value:b.name,allowBlank:false,fieldLabel:"Quantity",
validator:function(e){for(var g=a.items.get(2).items.get(0).rules,f=g.length-1;f>=0;f--)if(b!==g[f]&&g[f].name==e)return"Quantity "+e+" is already defined";return true},listeners:{valid:function(e){this.selectedRule.name=String(e.getValue());this.savePseudoRules()},scope:this}}]},{layout:"form",width:130,items:[{xtype:"textfield",fieldLabel:"Label",anchor:"95%",value:b.title,listeners:{valid:function(e){this.selectedRule.title=e.getValue();this.savePseudoRules()},scope:this}}]},{layout:"form",width:70,
items:[new GeoExt.FeatureRenderer({symbolType:this.symbolType,symbolizers:[b.symbolizers[0]],isFormField:true,fieldLabel:"Appearance"})]}]}]},{xtype:"gxp_polygonsymbolizer",symbolizer:b.symbolizers[0],bodyStyle:{padding:"10px"},border:false,labelWidth:70,defaults:{labelWidth:70},listeners:{change:function(e){var g=c.findByType(GeoExt.FeatureRenderer)[0];g.setSymbolizers([e],{draw:g.rendered});this.selectedRule.symbolizers[0]=e;this.savePseudoRules()},scope:this}}]}]}),d=c.findByType("gxp_strokesymbolizer")[0];
d.ownerCt.remove(d);c.show()},savePseudoRules:function(){var a=this.selectedStyle,b=this.items.get(2).items.get(0);a=a.get("userStyle");b=b.rules;b.sort(function(g,f){var h=parseFloat(g.name),j=parseFloat(f.name);return h===j?0:h<j?-1:1});a=a.rules[0].symbolizers[0];a.colorMap=b.length>0?Array(b.length):undefined;for(var c,d=0,e=b.length;d<e;++d){c=b[d];a.colorMap[d]={quantity:parseFloat(c.name),label:c.title||undefined,color:c.symbolizers[0].fillColor||undefined,opacity:c.symbolizers[0].fill==false?
0:c.symbolizers[0].fillOpacity}}this.afterRuleChange(this.selectedRule)},createLegend:function(a,b){var c=OpenLayers.Symbolizer.Raster;if(c&&a[0]&&a[0].symbolizers[0]instanceof c){this.getComponent("rulesfieldset").setTitle("Color Map Entries");this.isRaster=true;this.addRasterLegend(a,b)}else{this.isRaster=false;this.addVectorLegend(a)}},addRasterLegend:function(a,b){b=b||{};for(var c=a[0].symbolizers[0].colorMap||[],d=[],e=0,g=c.length;e<g;e++)d.push(this.createPseudoRule(c[e]));this.selectedRule=
b.selectedRuleIndex!=null?d[b.selectedRuleIndex]:null;return this.addVectorLegend(d,{symbolType:"Polygon",enableDD:false})},createPseudoRule:function(a){var b=-1;if(!a){var c=this.items.get(2);if(c.items){rules=c.items.get(0).rules;for(c=rules.length-1;c>=0;c--)b=Math.max(b,parseFloat(rules[c].name))}}a=Ext.applyIf(a||{},{quantity:++b,color:"#000000",opacity:1});return new OpenLayers.Rule({title:a.label,name:String(a.quantity),symbolizers:[new OpenLayers.Symbolizer.Polygon({fillColor:a.color,fillOpacity:a.opacity,
stroke:false,fill:a.opacity!==0})]})},updateRuleRemoveButton:function(){this.items.get(3).items.get(1).setDisabled(!this.selectedRule||this.isRaster===false&&this.items.get(2).items.get(0).rules.length<=1)}};Ext.preg("gxp_wmsrasterstylesdialog",gxp.plugins.WMSRasterStylesDialog);Ext.namespace("gxp.data");
gxp.data.WFSProtocolProxy=Ext.extend(GeoExt.data.ProtocolProxy,{setFilter:function(a){this.protocol.filter=a;this.protocol.options.filter=a},constructor:function(a){Ext.applyIf(a,{version:"1.1.0"});if(!(this.protocol&&this.protocol instanceof OpenLayers.Protocol))a.protocol=new OpenLayers.Protocol.WFS(Ext.apply({version:a.version,srsName:a.srsName,url:a.url,featureType:a.featureType,featureNS:a.featureNS,geometryName:a.geometryName,schema:a.schema,filter:a.filter,maxFeatures:a.maxFeatures},a.protocol));
gxp.data.WFSProtocolProxy.superclass.constructor.apply(this,arguments)},doRequest:function(a,b,c,d,e,g,f){delete c.xaction;if(a===Ext.data.Api.actions.read)this.load(c,d,e,g,f);else{b instanceof Array||(b=[b]);var h=Array(b.length);Ext.each(b,function(k,l){h[l]=k.getFeature()},this);var j={action:a,records:b,callback:e,scope:g};this.protocol.commit(h,{callback:function(k){this.onProtocolCommit(k,j)},scope:this})}},onProtocolCommit:function(a,b){if(a.success()){var c=a.reqFeatures,d,e,g=[],f=a.insertIds||
[],h,j,k=0;h=0;for(j=c.length;h<j;++h){e=c[h];if(d=e.state){if(d==OpenLayers.State.DELETE)g.push(e);else if(d==OpenLayers.State.INSERT){e.fid=f[k];++k}e.state=null}}h=0;for(j=g.length;h<j;++h){e=g[h];e.layer&&e.layer.destroyFeatures([e])}j=c.length;d=Array(j);for(h=0;h<j;++h){e=c[h];d[h]={id:e.id,feature:e,state:null};g=b.records[h].fields;for(var l in e.attributes)if(g.containsKey(l))d[h][l]=e.attributes[l]}b.callback.call(b.scope,d,a.priv,true)}else{this.fireEvent("exception",this,"response",b.action,
b,a);b.callback.call(b.scope,[],a.priv,false)}}});Ext.namespace("gxp");
gxp.WMSStylesDialog=Ext.extend(Ext.Container,{addStyleText:"Add",addStyleTip:"Add a new style",chooseStyleText:"Choose style",deleteStyleText:"Remove",deleteStyleTip:"Delete the selected style",editStyleText:"Edit",editStyleTip:"Edit the selected style",duplicateStyleText:"Duplicate",duplicateStyleTip:"Duplicate the selected style",addRuleText:"Add",addRuleTip:"Add a new rule",newRuleText:"New Rule",deleteRuleText:"Remove",deleteRuleTip:"Delete the selected rule",editRuleText:"Edit",editRuleTip:"Edit the selected rule",
duplicateRuleText:"Duplicate",duplicateRuleTip:"Duplicate the selected rule",cancelText:"Cancel",saveText:"Save",styleWindowTitle:"User Style: {0}",ruleWindowTitle:"Style Rule: {0}",stylesFieldsetTitle:"Styles",rulesFieldsetTitle:"Rules",layerRecord:null,layerDescription:null,symbolType:null,stylesStore:null,selectedStyle:null,selectedRule:null,editable:true,modified:false,initComponent:function(){this.addEvents("ready","modified","styleselected","beforesaved","saved");Ext.applyIf(this,{layout:"form",
disabled:true,items:[{xtype:"fieldset",title:this.stylesFieldsetTitle,labelWidth:85,style:"margin-bottom: 0;"},{xtype:"toolbar",style:"border-width: 0 1px 1px 1px; margin-bottom: 10px;",items:[{xtype:"button",iconCls:"add",text:this.addStyleText,tooltip:this.addStyleTip,handler:this.addStyle,scope:this},{xtype:"button",iconCls:"delete",text:this.deleteStyleText,tooltip:this.deleteStyleTip,handler:function(){this.stylesStore.remove(this.selectedStyle)},scope:this},{xtype:"button",iconCls:"edit",text:this.editStyleText,
tooltip:this.editStyleTip,handler:function(){this.editStyle()},scope:this},{xtype:"button",iconCls:"duplicate",text:this.duplicateStyleText,tooltip:this.duplicateStyleTip,handler:function(){var a=this.selectedStyle,b=a.get("userStyle").clone();b.isDefault=false;b.name=this.newStyleName();var c=this.stylesStore;c.add(new c.recordType({name:b.name,title:b.title,"abstract":b.description,userStyle:b}));this.editStyle(a)},scope:this}]}]});this.createStylesStore();this.on({beforesaved:function(){this._saving=
true},saved:function(){delete this._saving},render:function(){gxp.util.dispatch([this.getStyles],function(){this.enable()},this)},scope:this});gxp.WMSStylesDialog.superclass.initComponent.apply(this,arguments)},addStyle:function(){if(this._ready){var a=this.selectedStyle,b=this.stylesStore,c=new OpenLayers.Style(null,{name:this.newStyleName(),rules:[this.createRule()]});b.add(new b.recordType({name:c.name,userStyle:c}));this.editStyle(a)}else this.on("ready",this.addStyle,this)},editStyle:function(a){var b=
this.selectedStyle.get("userStyle"),c=new Ext.Window(Ext.apply({bbar:["->",{text:this.cancelText,iconCls:"cancel",handler:function(){c.propertiesDialog.userStyle=b;c.close();if(a){this._cancelling=true;this.stylesStore.remove(this.selectedStyle);this.changeStyle(a,{updateCombo:true,markModified:true});delete this._cancelling}},scope:this},{text:this.saveText,iconCls:"save",handler:function(){c.close()}}]},{title:String.format(this.styleWindowTitle,b.title||b.name),bodyBorder:false,autoHeight:true,
width:300,modal:true,items:{border:false,items:{xtype:"gxp_stylepropertiesdialog",ref:"../propertiesDialog",userStyle:b.clone(),nameEditable:false,style:"padding: 10px;"}},listeners:{close:function(){this.selectedStyle.set("userStyle",c.propertiesDialog.userStyle)},scope:this}}));c.show()},createSLD:function(a){a=a||{};var b={version:"1.0.0",namedLayers:{}},c=this.layerRecord.get("name");b.namedLayers[c]={name:c,userStyles:[]};this.stylesStore.each(function(d){if(!a.userStyles||a.userStyles.indexOf(d.get("name"))!==
-1)b.namedLayers[c].userStyles.push(d.get("userStyle"))});return(new OpenLayers.Format.SLD({multipleSymbolizers:true})).write(b)},saveStyles:function(a){this.modified===true&&this.fireEvent("beforesaved",this,a)},updateStyleRemoveButton:function(){var a=this.selectedStyle&&this.selectedStyle.get("userStyle");this.items.get(1).items.get(1).setDisabled(!a||this.stylesStore.getCount()<=1||a.isDefault===true)},updateRuleRemoveButton:function(){this.items.get(3).items.get(1).setDisabled(!this.selectedRule)},
createRule:function(){return new OpenLayers.Rule({symbolizers:[new OpenLayers.Symbolizer[this.symbolType]]})},addRulesFieldSet:function(){var a=new Ext.form.FieldSet({itemId:"rulesfieldset",title:this.rulesFieldsetTitle,autoScroll:true,style:"margin-bottom: 0;"}),b=new Ext.Toolbar({style:"border-width: 0 1px 1px 1px;",items:[{xtype:"button",iconCls:"add",text:this.addRuleText,tooltip:this.addRuleTip,handler:this.addRule,scope:this},{xtype:"button",iconCls:"delete",text:this.deleteRuleText,tooltip:this.deleteRuleTip,
handler:this.removeRule,scope:this,disabled:true},{xtype:"button",iconCls:"edit",text:this.editRuleText,toolitp:this.editRuleTip,handler:function(){this.layerDescription?this.editRule():this.describeLayer(this.editRule)},scope:this,disabled:true},{xtype:"button",iconCls:"duplicate",text:this.duplicateRuleText,tip:this.duplicateRuleTip,handler:this.duplicateRule,scope:this,disabled:true}]});this.add(a,b);this.doLayout();return a},addRule:function(){var a=this.items.get(2).items.get(0);this.selectedStyle.get("userStyle").rules.push(this.createRule());
a.update();this.selectedStyle.store.afterEdit(this.selectedStyle);this.updateRuleRemoveButton()},removeRule:function(){this.selectedStyle.get("userStyle").rules.remove(this.selectedRule);this.afterRuleChange()},duplicateRule:function(){var a=this.items.get(2).items.get(0),b=this.selectedRule.clone();this.selectedStyle.get("userStyle").rules.push(b);a.update();this.selectedStyle.store.afterEdit(this.selectedStyle);this.updateRuleRemoveButton()},editRule:function(){var a=this.selectedRule,b=a.clone(),
c=new Ext.Window({title:String.format(this.ruleWindowTitle,a.title||a.name||this.newRuleText),width:340,autoHeight:true,modal:true,items:[{xtype:"gxp_rulepanel",ref:"rulePanel",symbolType:this.symbolType,rule:a,attributes:new GeoExt.data.AttributeStore({url:this.layerDescription.owsURL,baseParams:{SERVICE:this.layerDescription.owsType,REQUEST:"DescribeFeatureType",TYPENAME:this.layerDescription.typeName},method:"GET",disableCaching:false}),border:false,defaults:{autoHeight:true,hideMode:"offsets"},
listeners:{change:this.saveRule,tabchange:function(){c.syncShadow()},scope:this}}],bbar:["->",{text:this.cancelText,iconCls:"cancel",handler:function(){this.saveRule(c.rulePanel,b);c.close()},scope:this},{text:this.saveText,iconCls:"save",handler:function(){c.close()}}]});c.show()},saveRule:function(a,b){var c=this.selectedStyle;this.items.get(2).items.get(0);c=c.get("userStyle");var d=c.rules.indexOf(this.selectedRule);c.rules[d]=b;this.afterRuleChange(b)},afterRuleChange:function(a){this.items.get(2).items.get(0);
this.selectedRule=a;this.selectedStyle.store.afterEdit(this.selectedStyle)},removeRulesFieldSet:function(){this.remove(this.items.get(3));this.remove(this.items.get(2));this.doLayout()},parseSLD:function(a){var b=a.responseXML;if(!b||!b.documentElement)b=(new OpenLayers.Format.XML).read(a.responseText);a=this.layerRecord.getLayer().params;var c=this.initialConfig.styleName||a.STYLES;if(c)this.selectedStyle=this.stylesStore.getAt(this.stylesStore.findExact("name",c));var d=new OpenLayers.Format.SLD({multipleSymbolizers:true});
try{var e=d.read(b).namedLayers[a.LAYERS].userStyles,g;if(a.SLD_BODY){g=d.read(a.SLD_BODY).namedLayers[a.LAYERS].userStyles;Array.prototype.push.apply(e,g)}this.stylesStore.removeAll();this.selectedStyle=null;var f,h,j;b=0;for(var k=e.length;b<k;++b){f=e[b];j=this.stylesStore.findExact("name",f.name);j!==-1&&this.stylesStore.removeAt(j);h=new this.stylesStore.recordType({name:f.name,title:f.title,"abstract":f.description,userStyle:f});h.phantom=false;this.stylesStore.add(h);if(!this.selectedStyle&&
(c===f.name||!c&&f.isDefault===true))this.selectedStyle=h}this.addRulesFieldSet();this.createLegend(this.selectedStyle.get("userStyle").rules);this.stylesStoreReady();a.SLD_BODY&&this.markModified()}catch(l){this.setupNonEditable()}},createLegend:function(a){var b=OpenLayers.Symbolizer.Raster;if(b&&a[0]&&a[0].symbolizers[0]instanceof b)throw"Raster symbolizers are not supported.";else this.addVectorLegend(a)},setupNonEditable:function(){this.editable=false;this.items.get(1).hide();(this.getComponent("rulesfieldset")||
this.addRulesFieldSet()).add(this.createLegendImage());this.doLayout();this.items.get(3).hide();this.stylesStoreReady()},stylesStoreReady:function(){this.stylesStore.commitChanges();this.stylesStore.on({load:function(){this.addStylesCombo();this.updateStyleRemoveButton()},add:function(a,b,c){this.updateStyleRemoveButton();b=this.items.get(0).items.get(0);this.markModified();b.fireEvent("select",b,a.getAt(c),c);b.setValue(this.selectedStyle.get("name"))},remove:function(a,b,c){if(!this._cancelling){this._removing=
true;b=Math.min(c,a.getCount()-1);this.updateStyleRemoveButton();c=this.items.get(0).items.get(0);this.markModified();c.fireEvent("select",c,a.getAt(b),b);c.setValue(this.selectedStyle.get("name"));delete this._removing}},update:function(a,b){var c=b.get("userStyle");Ext.apply(b.data,{name:c.name,title:c.title||c.name,"abstract":c.description});this.changeStyle(b,{updateCombo:true,markModified:true})},scope:this});this.stylesStore.fireEvent("load",this.stylesStore,this.stylesStore.getRange());this._ready=
true;this.fireEvent("ready")},markModified:function(){if(this.modified===false)this.modified=true;this._saving||this.fireEvent("modified",this,this.selectedStyle.get("name"))},createStylesStore:function(){var a=this.layerRecord.get("styles");this.stylesStore=new Ext.data.JsonStore({data:{styles:a},idProperty:"name",root:"styles",fields:["name","title","abstract","legend","userStyle"],listeners:{add:function(b,c){for(var d,e=c.length-1;e>=0;--e){d=c[e];b.suspendEvents();d.get("title")||d.set("title",
d.get("name"));b.resumeEvents()}}}})},getStyles:function(a){var b=this.layerRecord.getLayer();this.editable===true?Ext.Ajax.request({url:b.url,params:{SERVICE:"WMS",VERSION:b.params.VERSION,REQUEST:"GetStyles",LAYERS:""+b.params.LAYERS},method:"GET",disableCaching:false,success:this.parseSLD,failure:this.setupNonEditable,callback:a,scope:this}):this.setupNonEditable()},describeLayer:function(a){if(this.layerDescription)a.call(this);else{var b=this.layerRecord.getLayer();Ext.Ajax.request({url:b.url,
params:{SERVICE:"WMS",VERSION:b.params.VERSION,REQUEST:"DescribeLayer",LAYERS:""+b.params.LAYERS},method:"GET",disableCaching:false,success:function(c){this.layerDescription=(new OpenLayers.Format.WMSDescribeLayer).read(c.responseXML&&c.responseXML.documentElement?c.responseXML:c.responseText)[0]},callback:a,scope:this})}},addStylesCombo:function(){var a=this.stylesStore;a=new Ext.form.ComboBox(Ext.apply({fieldLabel:this.chooseStyleText,store:a,editable:false,displayField:"title",valueField:"name",
value:this.selectedStyle?this.selectedStyle.get("title"):this.layerRecord.getLayer().params.STYLES||"default",disabled:!a.getCount(),mode:"local",typeAhead:true,triggerAction:"all",forceSelection:true,anchor:"100%",listeners:{select:function(b,c){this.changeStyle(c);!c.phantom&&!this._removing&&this.fireEvent("styleselected",this,c.get("name"))},scope:this}},this.initialConfig.stylesComboOptions));this.items.get(0).add(a);this.doLayout()},createLegendImage:function(){return new GeoExt.WMSLegend({showTitle:false,
layerRecord:this.layerRecord,defaults:{listeners:{render:function(){this.getEl().on({load:this.doLayout,error:this.removeRulesFieldSet,scope:this})},scope:this}}})},changeStyle:function(a,b){b=b||{};var c=this.items.get(2).items.get(0);this.selectedStyle=a;this.updateStyleRemoveButton();a.get("name");if(this.editable===true){var d=a.get("userStyle"),e=c.rules.indexOf(this.selectedRule);c.ownerCt.remove(c);this.createLegend(d.rules,{selectedRuleIndex:e})}if(b.updateCombo===true){this.items.get(0).items.get(0).setValue(d.name);
b.markModified===true&&this.markModified()}},addVectorLegend:function(a,b){b=Ext.applyIf(b||{},{enableDD:true});this.symbolType=b.symbolType;if(!this.symbolType){var c=["Point","Line","Polygon"];highest=0;for(var d=a[0].symbolizers,e,g=d.length-1;g>=0;g--){e=d[g].CLASS_NAME.split(".").pop();highest=Math.max(highest,c.indexOf(e))}this.symbolType=c[highest]}var f=this.items.get(2).add({xtype:"gx_vectorlegend",showTitle:false,height:a.length>10?250:undefined,autoScroll:a.length>10,rules:a,symbolType:this.symbolType,
selectOnClick:true,enableDD:b.enableDD,listeners:{ruleselected:function(h,j){this.selectedRule=j;var k=this.items.get(3).items;this.updateRuleRemoveButton();k.get(2).enable();k.get(3).enable()},ruleunselected:function(){this.selectedRule=null;var h=this.items.get(3).items;h.get(1).disable();h.get(2).disable();h.get(3).disable()},afterlayout:function(){this.selectedRule!==null&&f.selectedRule===null&&f.rules.indexOf(this.selectedRule)!==-1&&f.selectRuleEntry(this.selectedRule)},scope:this}});this.doLayout();
return f},newStyleName:function(){var a=this.layerRecord.get("name");return a.split(":").pop()+"_"+gxp.util.md5(a+new Date+Math.random()).substr(0,8)}});
gxp.WMSStylesDialog.createGeoServerStylerConfig=function(a,b){var c=a.getLayer();b||(b=c.url.split("?").shift().replace(/\/(wms|ows)\/?$/,"/rest"));return{xtype:"gxp_wmsstylesdialog",layerRecord:a,plugins:[{ptype:"gxp_geoserverstylewriter",baseUrl:b}],listeners:{styleselected:function(d,e){d.modified&&c.mergeNewParams({styles:e})},modified:function(d){d.saveStyles()},saved:function(d,e){c.mergeNewParams({_olSalt:Math.random(),styles:e})},scope:this}}};
(function(){OpenLayers.Renderer.defaultSymbolizer={fillColor:"#808080",fillOpacity:1,strokeColor:"#000000",strokeOpacity:1,strokeWidth:1,strokeDashstyle:"solid",pointRadius:3,graphicName:"square",fontColor:"#000000",fontSize:10,haloColor:"#FFFFFF",haloOpacity:1,haloRadius:1}})();Ext.reg("gxp_wmsstylesdialog",gxp.WMSStylesDialog);Ext.namespace("gxp.plugins");
gxp.plugins.Styler=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_styler",menuText:"Edit Styles",tooltip:"Manage layer styles",sameOriginStyling:true,constructor:function(){gxp.plugins.Styler.superclass.constructor.apply(this,arguments);if(!this.outputConfig)this.outputConfig={autoHeight:true,width:265};Ext.applyIf(this.outputConfig,{closeAction:"close"})},addActions:function(){var a=gxp.plugins.Styler.superclass.addActions.apply(this,[{menuText:this.menuText,iconCls:"gxp-icon-palette",disabled:true,tooltip:this.tooltip,
handler:function(){this.addOutput()},scope:this}]);this.target.on("layerselectionchange",function(b){var c=false,d=this.target.getSource(b);d instanceof gxp.plugins.WMSSource&&d.describeLayer(b,function(e){if(e&&e.get("owsType")=="WFS"){if(b&&b.get("styles")){var g=this.target.layerSources[b.get("source")].url.split("?").shift().replace(/\/(wms|ows)\/?$/,"/rest");c=this.sameOriginStyling?g.charAt(0)==="/":true}c&&Ext.Ajax.request({method:"PUT",url:g+"/styles",callback:function(f,h,j){a[0].setDisabled(j.status!=
405)}})}},this);c||a[0].disable()},this);return a},addOutput:function(a){a=a||{};var b=this.target.selectedLayer;this.outputConfig.title=(this.initialConfig.outputConfig||{}).title||this.menuText+": "+b.get("title");Ext.apply(a,gxp.WMSStylesDialog.createGeoServerStylerConfig(b));Ext.applyIf(a,{style:"padding: 10px"});var c=gxp.plugins.Styler.superclass.addOutput.call(this,a);c.stylesStore.on("load",function(){this.outputTarget||c.ownerCt.ownerCt.center()})}});
Ext.preg(gxp.plugins.Styler.prototype.ptype,gxp.plugins.Styler);Ext.namespace("gxp.grid");
gxp.grid.CapabilitiesGrid=Ext.extend(Ext.grid.GridPanel,{store:null,cm:null,expander:null,mapPanel:null,url:null,autoExpandColumn:"title",allowNewSources:true,nameHeaderText:"Name",titleHeaderText:"Title",queryableHeaderText:"Queryable",layerSelectionLabel:"View available data from:",layerAdditionLabel:"or add a new server.",expanderTemplateText:"<p><b>Abstract:</b> {abstract}</p>",initComponent:function(){if(!this.store){this.store=new GeoExt.data.WMSCapabilitiesStore({url:this.url+"?service=wms&request=GetCapabilities"});
this.store.load()}if(!("expander"in this))this.expander=new Ext.grid.RowExpander({tpl:new Ext.Template(this.expanderTemplateText)});if(!this.plugins&&this.expander)this.plugins=this.expander;if(!this.cm){var a=[{id:"title",header:this.titleHeaderText,dataIndex:"title",sortable:true},{header:this.nameHeaderText,dataIndex:"name",width:180,sortable:true},{header:this.queryableHeaderText,dataIndex:"queryable",width:70,renderer:function(c,d){d.css="x-btn";var e="x-btn cancel";if(c)e="x-btn add";return'<div style="background-repeat: no-repeat; background-position: 50% 0%; height: 16px;" class="'+
e+'">&nbsp;</div>'}}];this.expander&&a.unshift(this.expander);this.cm=new Ext.grid.ColumnModel(a)}if(!("allowNewSources"in this))this.allowNewSources=!!this.metaStore;if(this.allowNewSources||this.metaStore&&this.metaStore.getCount()>1){this.sourceComboBox=new Ext.form.ComboBox({store:this.metaStore,valueField:"identifier",displayField:"name",triggerAction:"all",editable:false,allowBlank:false,forceSelection:true,mode:"local",value:this.metaStore.getAt(this.metaStore.findBy(function(c){return c.get("store")==
this.store},this)).get("identifier"),listeners:{select:function(c,d){this.reconfigure(d.data.store,this.getColumnModel());if(this.expander)this.expander.ows=d.get("url")},scope:this}});this.metaStore.on("add",function(c,d,e){this.sourceComboBox.onSelect(d[0],e)},this);this.tbar=this.tbar||[];this.tbar.push(""+this.layerSelectionLabel);this.tbar.push(this.sourceComboBox)}if(this.allowNewSources){var b=this;if(!this.newSourceWindow)this.newSourceWindow=new gxp.NewSourceWindow({modal:true,metaStore:this.metaStore,
addSource:function(){b.addSource.apply(b,arguments)}});this.tbar.push(new Ext.Button({text:this.layerAdditionLabel,handler:function(){this.newSourceWindow.show()},scope:this}))}gxp.grid.CapabilitiesGrid.superclass.initComponent.call(this)},addSource:function(a,b,c,d){d=d||this;c=new GeoExt.data.WMSCapabilitiesStore({url:a,autoLoad:true});this.metaStore.add(new this.metaStore.recordType({url:a,store:c,identifier:a,name:a}));b.apply(d)},addLayers:function(){for(var a=this.getSelectionModel().getSelections(),
b,c,d=[],e=0;e<a.length;e++){Ext.data.Record.AUTO_ID++;b=a[e].copy(Ext.data.Record.AUTO_ID);if(this.alignToGrid){c=b.getLayer().clone();c.maxExtent=new OpenLayers.Bounds(-180,-90,180,90)}else{c=b.getLayer();c=new OpenLayers.Layer.WMS(c.name,c.url,{layers:c.params.LAYERS},{attribution:c.attribution,maxExtent:OpenLayers.Bounds.fromArray(b.get("llbbox")).transform(new OpenLayers.Projection("EPSG:4326"),this.mapPanel.map.getProjectionObject())})}b.data.layer=c;b.commit(true);d.push(b)}if(d.length){a=
this.mapPanel.layers.findBy(function(g){return g.getLayer()instanceof OpenLayers.Layer.Vector});a!==-1?this.mapPanel.layers.insert(a,d):this.mapPanel.layers.add(d)}}});Ext.reg("gxp_capabilitiesgrid",gxp.grid.CapabilitiesGrid);Ext.namespace("gxp");
gxp.GoogleEarthPanel=Ext.extend(Ext.Panel,{HORIZONTAL_FIELD_OF_VIEW:30*Math.PI/180,map:null,mapPanel:null,layers:null,earth:null,projection:null,layerCache:null,initComponent:function(){this.addEvents("beforeadd");gxp.GoogleEarthPanel.superclass.initComponent.call(this);var a=this.mapPanel;if(a&&!(a instanceof GeoExt.MapPanel))a=Ext.getCmp(a);if(!a)throw Error("Could not get map panel from config: "+this.mapPanel);this.map=a.map;this.layers=a.layers;this.projection=new OpenLayers.Projection("EPSG:4326");
this.on("show",function(){if(this.rendered){this.layerCache={};google.earth.createInstance(this.body.dom,this.onEarthReady.createDelegate(this),function(){})}},this);this.on("hide",function(){if(this.earth!=null){this.updateMap();this.body.child("*").remove()}this.earth=null},this)},onEarthReady:function(a){this.earth=a;this.earth.getOptions().setFlyToSpeed(this.earth.SPEED_TELEPORT);this.resetCamera();this.setExtent(this.map.getExtent());this.earth.getNavigationControl().setVisibility(this.earth.VISIBILITY_SHOW);
a=this.earth.getNavigationControl().getScreenXY();a.setXUnits(this.earth.UNITS_PIXELS);a.setYUnits(this.earth.UNITS_INSET_PIXELS);this.earth.getWindow().setVisibility(true);this.layers.each(function(b){this.addLayer(b)},this);this.layers.on("remove",this.updateLayers,this);this.layers.on("update",this.updateLayers,this);this.layers.on("add",this.updateLayers,this)},updateLayers:function(){if(this.earth){for(var a=this.earth.getFeatures(),b=a.getFirstChild();b!=null;){a.removeChild(b);b=a.getFirstChild()}this.layers.each(function(c){this.addLayer(c)},
this)}},addLayer:function(a,b){var c=a.getLayer().url;if(this.earth&&c)if(this.fireEvent("beforeadd",a)!==false){var d=a.getLayer().id;if(this.layerCache[d])c=this.layerCache[d];else{var e=this.earth.createLink("kl_"+d);c=c.replace(/\?.*/,"");var g=a.getLayer().params;e.setHref(c+("/kml?mode=refresh&layers="+g.LAYERS+"&styles="+g.STYLES));c=this.earth.createNetworkLink("nl_"+d);c.setName(d);c.set(e,false,false);this.layerCache[d]=c}c.setVisibility(a.getLayer().getVisibility());b!==undefined&&b<this.earth.getFeatures().getChildNodes().getLength()?
this.earth.getFeatures().insertBefore(this.earth.getFeatures().getChildNodes().item(b)):this.earth.getFeatures().appendChild(c)}},setExtent:function(a){a=a.transform(this.map.getProjectionObject(),this.projection);var b=a.getCenterLonLat();a=this.getExtentWidth(a)/(2*Math.tan(this.HORIZONTAL_FIELD_OF_VIEW));var c=this.earth.getView().copyAsLookAt(this.earth.ALTITUDE_RELATIVE_TO_GROUND);c.setLatitude(b.lat);c.setLongitude(b.lon);c.setRange(a);this.earth.getView().setAbstractView(c)},resetCamera:function(){var a=
this.earth.getView().copyAsCamera(this.earth.ALTITUDE_RELATIVE_TO_GROUND);a.setRoll(0);a.setHeading(0);a.setTilt(0);this.earth.getView().setAbstractView(a)},getExtent:function(){var a=this.earth.getView().getViewportGlobeBounds();return new OpenLayers.Bounds(a.getWest(),a.getSouth(),a.getEast(),a.getNorth())},updateMap:function(){var a=this.earth.getView().copyAsLookAt(this.earth.ALTITUDE_RELATIVE_TO_GROUND),b=this.reprojectToMap(new OpenLayers.LonLat(a.getLongitude(),a.getLatitude()));this.map.zoomToExtent(this.reprojectToMap(this.getExtent()),
true);this.map.setCenter(b);a=2*a.getRange()*Math.tan(this.HORIZONTAL_FIELD_OF_VIEW);var c=this.map.getResolutionForZoom(this.map.getZoom()+1),d=this.map.getExtent();b=new OpenLayers.Bounds(b.lon-this.map.getSize().w/2*c,b.lat+this.map.getSize().h/2*c,b.lon+this.map.getSize().w/2*c,b.lat-this.map.getSize().h/2*c);d=Math.abs(this.getExtentWidth(d)-a);Math.abs(this.getExtentWidth(b)-a)<d&&this.map.zoomTo(this.map.getZoom()+1)},getExtentWidth:function(a){var b=a.getCenterLonLat(),c=new OpenLayers.LonLat(a.left,
b.lat);a=new OpenLayers.LonLat(a.right,b.lat);return OpenLayers.Util.distVincenty(c,a)*1E3},reprojectToGE:function(a){return a.clone().transform(this.map.getProjectionObject(),this.projection)},reprojectToMap:function(a){return a.clone().transform(this.projection,this.map.getProjectionObject())}});Ext.reg("gxp_googleearthpanel",gxp.GoogleEarthPanel);Ext.namespace("gxp");
gxp.FillSymbolizer=Ext.extend(Ext.FormPanel,{symbolizer:null,colorManager:null,checkboxToggle:true,defaultColor:null,border:false,fillText:"Fill",colorText:"Color",opacityText:"Opacity",initComponent:function(){if(!this.symbolizer)this.symbolizer={};var a;if(this.colorManager)a=[new this.colorManager];this.items=[{xtype:"fieldset",title:this.fillText,autoHeight:true,checkboxToggle:this.checkboxToggle,collapsed:this.checkboxToggle===true&&this.symbolizer.fill===false,hideMode:"offsets",defaults:{width:100},
items:[{xtype:"gxp_colorfield",fieldLabel:this.colorText,name:"color",emptyText:OpenLayers.Renderer.defaultSymbolizer.fillColor,value:this.symbolizer.fillColor,defaultBackground:this.defaultColor||OpenLayers.Renderer.defaultSymbolizer.fillColor,plugins:a,listeners:{valid:function(b){b=b.getValue();var c=this.symbolizer.fillColor!=b;this.symbolizer.fillColor=b;c&&this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"slider",fieldLabel:this.opacityText,name:"opacity",values:[("fillOpacity"in
this.symbolizer?this.symbolizer.fillOpacity:OpenLayers.Renderer.defaultSymbolizer.fillOpacity)*100],isFormField:true,listeners:{changecomplete:function(b,c){this.symbolizer.fillOpacity=c/100;this.fireEvent("change",this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(b){return b.value+"%"}})]}],listeners:{collapse:function(){if(this.symbolizer.fill!==false){this.symbolizer.fill=false;this.fireEvent("change",this.symbolizer)}},expand:function(){this.symbolizer.fill=true;this.fireEvent("change",
this.symbolizer)},scope:this}}];this.addEvents("change");gxp.FillSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_fillsymbolizer",gxp.FillSymbolizer);Ext.namespace("gxp");
gxp.ScaleLimitPanel=Ext.extend(Ext.Panel,{maxScaleDenominatorLimit:1.577757414193268E9*OpenLayers.DOTS_PER_INCH/256,limitMaxScaleDenominator:true,maxScaleDenominator:undefined,minScaleDenominatorLimit:Math.pow(0.5,19)*1.577757414193268E9*OpenLayers.DOTS_PER_INCH/256,limitMinScaleDenominator:true,minScaleDenominator:undefined,scaleLevels:20,scaleSliderTemplate:"{scaleType} Scale 1:{scale}",modifyScaleTipContext:Ext.emptyFn,scaleFactor:null,changing:false,border:false,maxScaleLimitText:"Max scale limit",
minScaleLimitText:"Min scale limit",initComponent:function(){this.layout="column";this.defaults={border:false,bodyStyle:"margin: 0 5px;"};this.bodyStyle={padding:"5px"};this.scaleSliderTemplate=new Ext.Template(this.scaleSliderTemplate);Ext.applyIf(this,{minScaleDenominator:this.minScaleDenominatorLimit,maxScaleDenominator:this.maxScaleDenominatorLimit});this.scaleFactor=Math.pow(this.maxScaleDenominatorLimit/this.minScaleDenominatorLimit,1/(this.scaleLevels-1));this.scaleSlider=new Ext.Slider({vertical:true,
height:100,values:[0,100],listeners:{changecomplete:function(a){this.updateScaleValues(a)},render:function(a){a.thumbs[0].el.setVisible(this.limitMaxScaleDenominator);a.thumbs[1].el.setVisible(this.limitMinScaleDenominator);a.setDisabled(!this.limitMinScaleDenominator&&!this.limitMaxScaleDenominator)},scope:this},plugins:[new gxp.slider.Tip({getText:function(a){var b=a.slider.thumbs.indexOf(a),c=this.sliderValuesToScale([a.value]);a={scale:String(c[0]),zoom:(a.value*(this.scaleLevels/100)).toFixed(1),
type:b===0?"Max":"Min",scaleType:b===0?"Min":"Max"};this.modifyScaleTipContext(this,a);return this.scaleSliderTemplate.apply(a)}.createDelegate(this)})]});this.maxScaleDenominatorInput=new Ext.form.NumberField({allowNegative:false,width:100,fieldLabel:"1",value:Math.round(this.maxScaleDenominator),disabled:!this.limitMaxScaleDenominator,validator:function(a){return!this.limitMinScaleDenominator||a>this.minScaleDenominator}.createDelegate(this),listeners:{valid:function(a){a=Number(a.getValue());if(a<
Math.round(this.maxScaleDenominatorLimit)&&a>this.minScaleDenominator){this.maxScaleDenominator=a;this.updateSliderValues()}},change:function(a){var b=Number(a.getValue()),c=Math.round(this.maxScaleDenominatorLimit);if(b>c)a.setValue(c);else if(b<this.minScaleDenominator)a.setValue(this.minScaleDenominator);else{this.maxScaleDenominator=b;this.updateSliderValues()}},scope:this}});this.minScaleDenominatorInput=new Ext.form.NumberField({allowNegative:false,width:100,fieldLabel:"1",value:Math.round(this.minScaleDenominator),
disabled:!this.limitMinScaleDenominator,validator:function(a){return!this.limitMaxScaleDenominator||a<this.maxScaleDenominator}.createDelegate(this),listeners:{valid:function(a){a=Number(a.getValue());if(a>Math.round(this.minScaleDenominatorLimit)&&a<this.maxScaleDenominator){this.minScaleDenominator=a;this.updateSliderValues()}},change:function(a){var b=Number(a.getValue()),c=Math.round(this.minScaleDenominatorLimit);if(b<c)a.setValue(c);else if(b>this.maxScaleDenominator)a.setValue(this.maxScaleDenominator);
else{this.minScaleDenominator=b;this.updateSliderValues()}},scope:this}});this.items=[this.scaleSlider,{xtype:"panel",layout:"form",defaults:{border:false},items:[{labelWidth:90,layout:"form",width:150,items:[{xtype:"checkbox",checked:!!this.limitMinScaleDenominator,fieldLabel:this.maxScaleLimitText,listeners:{check:function(a,b){this.limitMinScaleDenominator=b;var c=this.scaleSlider;c.setValue(1,100);c.thumbs[1].el.setVisible(b);this.minScaleDenominatorInput.setDisabled(!b);this.updateScaleValues(c);
c.setDisabled(!this.limitMinScaleDenominator&&!this.limitMaxScaleDenominator)},scope:this}}]},{labelWidth:10,layout:"form",items:[this.minScaleDenominatorInput]},{labelWidth:90,layout:"form",items:[{xtype:"checkbox",checked:!!this.limitMaxScaleDenominator,fieldLabel:this.minScaleLimitText,listeners:{check:function(a,b){this.limitMaxScaleDenominator=b;var c=this.scaleSlider;c.setValue(0,0);c.thumbs[0].el.setVisible(b);this.maxScaleDenominatorInput.setDisabled(!b);this.updateScaleValues(c);c.setDisabled(!this.limitMinScaleDenominator&&
!this.limitMaxScaleDenominator)},scope:this}}]},{labelWidth:10,layout:"form",items:[this.maxScaleDenominatorInput]}]}];this.addEvents("change");gxp.ScaleLimitPanel.superclass.initComponent.call(this)},updateScaleValues:function(a){if(!this.changing){var b=a.getValues(),c=false;if(!this.limitMaxScaleDenominator)if(b[0]>0){b[0]=0;c=true}if(!this.limitMinScaleDenominator)if(b[1]<100){b[1]=100;c=true}if(c){a.setValue(0,b[0]);a.setValue(1,b[1])}else{b=this.sliderValuesToScale(b);a=b[0];b=b[1];this.changing=
true;this.minScaleDenominatorInput.setValue(b);this.maxScaleDenominatorInput.setValue(a);this.changing=false;this.fireEvent("change",this,this.limitMinScaleDenominator?b:undefined,this.limitMaxScaleDenominator?a:undefined)}}},updateSliderValues:function(){if(!this.changing){var a=this.minScaleDenominator,b=this.maxScaleDenominator,c=this.scaleToSliderValues([b,a]);this.changing=true;this.scaleSlider.setValue(0,c[0]);this.scaleSlider.setValue(1,c[1]);this.changing=false;this.fireEvent("change",this,
this.limitMinScaleDenominator?a:undefined,this.limitMaxScaleDenominator?b:undefined)}},sliderValuesToScale:function(a){var b=100/(this.scaleLevels-1);return[Math.round(Math.pow(this.scaleFactor,(100-a[0])/b)*this.minScaleDenominatorLimit),Math.round(Math.pow(this.scaleFactor,(100-a[1])/b)*this.minScaleDenominatorLimit)]},scaleToSliderValues:function(a){var b=100/(this.scaleLevels-1);return[100-b*Math.log(a[0]/this.minScaleDenominatorLimit)/Math.log(this.scaleFactor),100-b*Math.log(a[1]/this.minScaleDenominatorLimit)/
Math.log(this.scaleFactor)]}});Ext.reg("gxp_scalelimitpanel",gxp.ScaleLimitPanel);Ext.namespace("gxp.plugins");
gxp.plugins.WMSFilterView=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_wmsfilterview",featureManager:null,init:function(){gxp.plugins.WMSFilterView.superclass.init.apply(this,arguments);this.createFilterLayer()},createFilterLayer:function(){this.filterLayer=new OpenLayers.Layer.WMS(this.id+"filterlayer",Ext.BLANK_IMAGE_URL,{format:"image/png",transparent:true},{buffer:0,displayInLayerSwitcher:false,tileOptions:{maxGetUrlLength:2048}});var a=this.target.mapPanel.map;a.addLayer(this.filterLayer);a.events.on({addlayer:this.raiseLayer,
scope:this});var b=this.target.tools[this.featureManager],c=new OpenLayers.Format.SLD;a=function(){this.filterLayer.setUrl(Ext.BLANK_IMAGE_URL);this.filterLayer.setVisibility(false)}.bind(this);b.on({clearfeatures:a,beforelayerchange:a,beforequery:function(){this.filterLayer.setUrl(Ext.BLANK_IMAGE_URL);this.filterLayer.setVisibility(false)},query:function(d,e,g){if(g){e=new OpenLayers.Rule;var f=b.geometryType.replace(/^Multi/,""),h=b.style.all.rules[0].symbolizer;e.symbolizer[f]=Ext.applyIf(Ext.apply({},
h[f]||h),OpenLayers.Feature.Vector.style["default"]);e=new OpenLayers.Style(null,{rules:[e]});this.filterLayer.setUrl(d.layerRecord.getLayer().url);if(g instanceof OpenLayers.Filter.Logical){d=g.filters;for(f=d.length-1;f>=0;--f)d[f].type===OpenLayers.Filter.Spatial.BBOX&&d.remove(d[f]);if(d.length==1&&g.type!==OpenLayers.Filter.Comparison.NOT)g=d[0];else if(d.length==0)g=null}else if(g.type===OpenLayers.Filter.Spatial.BBOX)g=null;d={};if(g)if(g instanceof OpenLayers.Filter.FeatureId)d.featureid=
g.fids;else d.cql_filter=(new OpenLayers.Format.CQL).write(g);this.filterLayer.mergeNewParams(Ext.apply(d,{sld_body:c.write({namedLayers:[{name:b.layerRecord.get("name"),userStyles:[e]}]}).replace(/( (xmlns|xsi):[^\"]*\"[^\"]*"|sld:)/g,"")}));this.filterLayer.setVisibility(true)}},scope:this})},raiseLayer:function(){var a=this.filterLayer.map;a.setLayerIndex(this.filterLayer,a.layers.length)}});Ext.preg(gxp.plugins.WMSFilterView.prototype.ptype,gxp.plugins.WMSFilterView);Ext.namespace("gxp.plugins");
gxp.plugins.Navigation=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_navigation",menuText:"Pan Map",tooltip:"Pan Map",constructor:function(){gxp.plugins.Navigation.superclass.constructor.apply(this,arguments)},addActions:function(){this.controlOptions=this.controlOptions||{};Ext.applyIf(this.controlOptions,{zoomWheelEnabled:false});var a=[new GeoExt.Action({tooltip:this.tooltip,menuText:this.menuText,iconCls:"gxp-icon-pan",enableToggle:true,pressed:true,allowDepress:false,control:new OpenLayers.Control.Navigation(this.controlOptions),
map:this.target.mapPanel.map,toggleGroup:this.toggleGroup})];return gxp.plugins.Navigation.superclass.addActions.apply(this,[a])}});Ext.preg(gxp.plugins.Navigation.prototype.ptype,gxp.plugins.Navigation);Ext.namespace("gxp.menu");
gxp.menu.LayerMenu=Ext.extend(Ext.menu.Menu,{layerText:"Layer",layers:null,initComponent:function(){gxp.menu.LayerMenu.superclass.initComponent.apply(this,arguments);this.layers.on("add",this.onLayerAdd,this);this.onLayerAdd()},onRender:function(){gxp.menu.LayerMenu.superclass.onRender.apply(this,arguments)},beforeDestroy:function(){this.layers&&this.layers.on&&this.layers.un("add",this.onLayerAdd,this);delete this.layers;gxp.menu.LayerMenu.superclass.beforeDestroy.apply(this,arguments)},onLayerAdd:function(){this.removeAll();
this.add({iconCls:"gxp-layer-visibility",text:this.layerText,canActivate:false},"-");this.layers.each(function(a){if(a.getLayer().displayInLayerSwitcher){var b=new Ext.menu.CheckItem({text:a.get("title"),checked:a.getLayer().getVisibility(),group:a.get("group"),listeners:{checkchange:function(c,d){a.getLayer().setVisibility(d)}}});this.items.getCount()>2?this.insert(2,b):this.add(b)}},this)}});Ext.reg("gxp_layermenu",gxp.menu.LayerMenu);Ext.namespace("gxp.form");
gxp.form.ComparisonComboBox=Ext.extend(Ext.form.ComboBox,{allowedTypes:[[OpenLayers.Filter.Comparison.EQUAL_TO,"="],[OpenLayers.Filter.Comparison.NOT_EQUAL_TO,"<>"],[OpenLayers.Filter.Comparison.LESS_THAN,"<"],[OpenLayers.Filter.Comparison.GREATER_THAN,">"],[OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,"<="],[OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,">="],[OpenLayers.Filter.Comparison.LIKE,"like"]],allowBlank:false,mode:"local",typeAhead:true,forceSelection:true,triggerAction:"all",
width:50,editable:true,initComponent:function(){var a={displayField:"name",valueField:"value",store:new Ext.data.SimpleStore({data:this.allowedTypes,fields:["value","name"]}),value:this.value===undefined?this.allowedTypes[0][0]:this.value,listeners:{blur:function(){var b=this.store.findExact("value",this.getValue());if(b!=-1)this.fireEvent("select",this,this.store.getAt(b));else this.startValue!=null&&this.setValue(this.startValue)}}};Ext.applyIf(this,a);gxp.form.ComparisonComboBox.superclass.initComponent.call(this)}});
Ext.reg("gxp_comparisoncombo",gxp.form.ComparisonComboBox);Ext.namespace("gxp.form");
gxp.form.ColorField=Ext.extend(Ext.form.TextField,{cssColors:{aqua:"#00FFFF",black:"#000000",blue:"#0000FF",fuchsia:"#FF00FF",gray:"#808080",green:"#008000",lime:"#00FF00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#FF0000",silver:"#C0C0C0",teal:"#008080",white:"#FFFFFF",yellow:"#FFFF00"},defaultBackground:"#ffffff",initComponent:function(){if(this.value)this.value=this.hexToColor(this.value);gxp.form.ColorField.superclass.initComponent.call(this);this.on({render:this.colorField,
valid:this.colorField,scope:this})},isDark:function(a){var b=false;if(a){b=parseInt(a.substring(1,3),16)/255;var c=parseInt(a.substring(3,5),16)/255;a=parseInt(a.substring(5,7),16)/255;b=b*0.299+c*0.587+a*0.144<0.5}return b},colorField:function(){var a=this.colorToHex(this.getValue())||this.defaultBackground;this.getEl().setStyle({background:a,color:this.isDark(a)?"#ffffff":"#000000"})},getHexValue:function(){return this.colorToHex(gxp.form.ColorField.superclass.getValue.apply(this,arguments))},getValue:function(){var a=
this.getHexValue(),b=this.initialConfig.value;if(a===this.hexToColor(b))a=b;return a},setValue:function(a){gxp.form.ColorField.superclass.setValue.apply(this,[this.hexToColor(a)])},colorToHex:function(a){if(!a)return a;return a.match(/^#[0-9a-f]{6}$/i)?a:this.cssColors[a.toLowerCase()]||null},hexToColor:function(a){if(!a)return a;for(var b in this.cssColors)if(this.cssColors[b]==a.toUpperCase()){a=b;break}return a}});Ext.reg("gxp_colorfield",gxp.form.ColorField);Ext.namespace("gxp.plugins");
gxp.plugins.FeatureGrid=Ext.extend(gxp.plugins.ClickableFeatures,{ptype:"gxp_featuregrid",schema:null,alwaysDisplayOnMap:false,displayMode:"all",autoExpand:false,autoCollapse:false,selectOnMap:false,displayFeatureText:"Display on map",firstPageTip:"First page",previousPageTip:"Previous page",zoomPageExtentTip:"Zoom to page extent",nextPageTip:"Next page",lastPageTip:"Last page",addOutput:function(a){var b=this.target.tools[this.featureManager],c=this.target.mapPanel.map,d;this.selectControl=new OpenLayers.Control.SelectFeature(b.featureLayer);
if(this.selectOnMap){if(b.paging)this.selectControl.events.on({activate:function(){c.events.register("click",this,this.noFeatureClick)},deactivate:function(){c.events.unregister("click",this,this.noFeatureClick)},scope:this});c.addControl(this.selectControl);d={selectControl:this.selectControl}}else d={selectControl:this.selectControl,singleSelect:false,autoActivateControl:false,listeners:{beforerowselect:function(){if(this.selectControl.active||b.featureStore.getModifiedRecords().length)return false},
scope:this}};a=Ext.apply({xtype:"gxp_featuregrid",sm:new GeoExt.grid.FeatureSelectionModel(d),autoScroll:true,bbar:(b.paging?[{iconCls:"x-tbar-page-first",ref:"../firstPageButton",tooltip:this.firstPageTip,disabled:true,handler:function(){b.setPage({index:0})}},{iconCls:"x-tbar-page-prev",ref:"../prevPageButton",tooltip:this.previousPageTip,disabled:true,handler:function(){b.previousPage()}},{iconCls:"gxp-icon-zoom-to",ref:"../zoomToPageButton",tooltip:this.zoomPageExtentTip,disabled:true,hidden:b.autoZoomPage,
handler:function(){c.zoomToExtent(b.page.extent)}},{iconCls:"x-tbar-page-next",ref:"../nextPageButton",tooltip:this.nextPageTip,disabled:true,handler:function(){b.nextPage()}},{iconCls:"x-tbar-page-last",ref:"../lastPageButton",tooltip:this.lastPageTip,disabled:true,handler:function(){b.setPage({index:"last"})}}]:[]).concat(["->"].concat(!this.alwaysDisplayOnMap?[{text:this.displayFeatureText,enableToggle:true,toggleHandler:function(g,f){this.selectOnMap&&this.selectControl[f?"activate":"deactivate"]();
b[f?"showLayer":"hideLayer"](this.id,this.displayMode)},scope:this}]:[])),listeners:{added:function(g,f){var h=function(){this.selectOnMap&&this.selectControl.deactivate();this.autoCollapse&&typeof f.collapse=="function"&&f.collapse()}.bind(this),j=function(){this.selectOnMap&&this.selectControl.activate();this.autoExpand&&typeof f.expand=="function"&&f.expand()}.bind(this);b.on({query:function(k,l){l&&l.getCount()?j():h()},layerchange:h,clearfeatures:h})},contextmenu:function(g){if(e.contextMenu.items.getCount()>
0){var f=e.getView().findRowIndex(g.getTarget());if(f!==false){e.getSelectionModel().selectRow(f);e.contextMenu.showAt(g.getXY());g.stopEvent()}}},scope:this},contextMenu:new Ext.menu.Menu({items:[]})},a||{});var e=gxp.plugins.FeatureGrid.superclass.addOutput.call(this,a);if(this.alwaysDisplayOnMap||this.selectOnMap)b.showLayer(this.id,this.displayMode);b.paging&&b.on("setpage",function(g){var f=g.pages&&g.pages.length;e.zoomToPageButton.setDisabled(!f);var h=f&&g.pages.indexOf(g.page)!==0;e.firstPageButton.setDisabled(!h);
e.prevPageButton.setDisabled(!h);g=f&&g.pages.indexOf(g.page)!==g.pages.length-1;e.lastPageButton.setDisabled(!g);e.nextPageButton.setDisabled(!g)},this);b.on("layerchange",function(g,f,h){var j=["feature","state","fid"];h&&h.each(function(k){k.get("type").indexOf("gml:")==0&&j.push(k.get("name"))});e.ignoreFields=j;e.setStore(b.featureStore,h)},this);return e}});Ext.preg(gxp.plugins.FeatureGrid.prototype.ptype,gxp.plugins.FeatureGrid);Ext.namespace("gxp");
gxp.LineSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,initComponent:function(){this.items=[{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,listeners:{change:function(){this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.LineSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_linesymbolizer",gxp.LineSymbolizer);Ext.namespace("gxp");
gxp.RulePanel=Ext.extend(Ext.TabPanel,{fonts:undefined,symbolType:"Point",rule:null,attributes:null,nestedFilters:true,minScaleDenominatorLimit:Math.pow(0.5,19)*1.577757414193268E9*OpenLayers.DOTS_PER_INCH/256,maxScaleDenominatorLimit:1.577757414193268E9*OpenLayers.DOTS_PER_INCH/256,scaleLevels:20,scaleSliderTemplate:"{scaleType} Scale 1:{scale}",modifyScaleTipContext:Ext.emptyFn,labelFeaturesText:"Label Features",labelsText:"Labels",basicText:"Basic",advancedText:"Advanced",limitByScaleText:"Limit by scale",
limitByConditionText:"Limit by condition",symbolText:"Symbol",nameText:"Name",initComponent:function(){Ext.applyIf(this,{plain:true,border:false});if(this.rule){if(!this.initialConfig.symbolType)this.symbolType=this.getSymbolTypeFromRule(this.rule)||this.symbolType}else this.rule=new OpenLayers.Rule({name:this.uniqueRuleName()});this.activeTab=0;this.textSymbolizer=new gxp.TextSymbolizer({symbolizer:this.getTextSymbolizer(),attributes:this.attributes,fonts:this.fonts,listeners:{change:function(){this.fireEvent("change",
this,this.rule)},scope:this}});this.scaleLimitPanel=new gxp.ScaleLimitPanel({maxScaleDenominator:this.rule.maxScaleDenominator||undefined,limitMaxScaleDenominator:!!this.rule.maxScaleDenominator,maxScaleDenominatorLimit:this.maxScaleDenominatorLimit,minScaleDenominator:this.rule.minScaleDenominator||undefined,limitMinScaleDenominator:!!this.rule.minScaleDenominator,minScaleDenominatorLimit:this.minScaleDenominatorLimit,scaleLevels:this.scaleLevels,scaleSliderTemplate:this.scaleSliderTemplate,modifyScaleTipContext:this.modifyScaleTipContext,
listeners:{change:function(a,b,c){this.rule.minScaleDenominator=b;this.rule.maxScaleDenominator=c;this.fireEvent("change",this,this.rule)},scope:this}});this.filterBuilder=new gxp.FilterBuilder({allowGroups:this.nestedFilters,filter:this.rule&&this.rule.filter&&this.rule.filter.clone(),attributes:this.attributes,listeners:{change:function(a){this.rule.filter=a.getFilter();this.fireEvent("change",this,this.rule)},scope:this}});this.items=[{title:this.labelsText,autoScroll:true,bodyStyle:{padding:"10px"},
items:[{xtype:"fieldset",title:this.labelFeaturesText,autoHeight:true,checkboxToggle:true,collapsed:!this.hasTextSymbolizer(),items:[this.textSymbolizer],listeners:{collapse:function(){OpenLayers.Util.removeItem(this.rule.symbolizers,this.getTextSymbolizer());this.fireEvent("change",this,this.rule)},expand:function(){this.setTextSymbolizer(this.textSymbolizer.symbolizer);this.fireEvent("change",this,this.rule)},scope:this}}]}];if(this.getSymbolTypeFromRule(this.rule)||this.symbolType)this.items=[{title:this.basicText,
autoScroll:true,items:[this.createHeaderPanel(),this.createSymbolizerPanel()]},this.items[0],{title:this.advancedText,defaults:{style:{margin:"7px"}},autoScroll:true,items:[{xtype:"fieldset",title:this.limitByScaleText,checkboxToggle:true,collapsed:!(this.rule&&(this.rule.minScaleDenominator||this.rule.maxScaleDenominator)),autoHeight:true,items:[this.scaleLimitPanel],listeners:{collapse:function(){delete this.rule.minScaleDenominator;delete this.rule.maxScaleDenominator;this.fireEvent("change",this,
this.rule)},expand:function(){var a=this.getActiveTab();this.activeTab=null;this.setActiveTab(a);a=false;if(this.scaleLimitPanel.limitMinScaleDenominator){this.rule.minScaleDenominator=this.scaleLimitPanel.minScaleDenominator;a=true}if(this.scaleLimitPanel.limitMaxScaleDenominator){this.rule.maxScaleDenominator=this.scaleLimitPanel.maxScaleDenominator;a=true}a&&this.fireEvent("change",this,this.rule)},scope:this}},{xtype:"fieldset",title:this.limitByConditionText,checkboxToggle:true,collapsed:!(this.rule&&
this.rule.filter),autoHeight:true,items:[this.filterBuilder],listeners:{collapse:function(){delete this.rule.filter;this.fireEvent("change",this,this.rule)},expand:function(){this.rule.filter=this.filterBuilder.getFilter();this.fireEvent("change",this,this.rule)},scope:this}}]}];this.items[0].autoHeight=true;this.addEvents("change");this.on({tabchange:function(a,b){b.doLayout()},scope:this});gxp.RulePanel.superclass.initComponent.call(this)},hasTextSymbolizer:function(){for(var a,b,c=0,d=this.rule.symbolizers.length;c<
d;++c){a=this.rule.symbolizers[c];if(a instanceof OpenLayers.Symbolizer.Text){b=a;break}}return b},getTextSymbolizer:function(){var a=this.hasTextSymbolizer();a||(a=new OpenLayers.Symbolizer.Text);return a},setTextSymbolizer:function(a){for(var b,c=0,d=this.rule.symbolizers.length;c<d;++c){candidate=this.rule.symbolizers[c];if(this.rule.symbolizers[c]instanceof OpenLayers.Symbolizer.Text){this.rule.symbolizers[c]=a;b=true;break}}b||this.rule.symbolizers.push(a)},uniqueRuleName:function(){return OpenLayers.Util.createUniqueID("rule_")},
createHeaderPanel:function(){this.symbolizerSwatch=new GeoExt.FeatureRenderer({symbolType:this.symbolType,isFormField:true,fieldLabel:this.symbolText});return{xtype:"form",border:false,labelAlign:"top",defaults:{border:false},style:{padding:"0.3em 0 0 1em"},items:[{layout:"column",defaults:{border:false,style:{"padding-right":"1em"}},items:[{layout:"form",width:150,items:[{xtype:"textfield",fieldLabel:this.nameText,anchor:"95%",value:this.rule&&(this.rule.title||this.rule.name||""),listeners:{change:function(a,
b){this.rule.title=b;this.fireEvent("change",this,this.rule)},scope:this}}]},{layout:"form",width:70,items:[this.symbolizerSwatch]}]}]}},createSymbolizerPanel:function(){var a,b,c=OpenLayers.Symbolizer[this.symbolType],d=false;if(c){for(var e=0,g=this.rule.symbolizers.length;e<g;++e){a=this.rule.symbolizers[e];if(a instanceof c){d=true;b=a;break}}b||(b=new c({fill:false,stroke:false}))}else throw Error("Appropriate symbolizer type not included in build: "+this.symbolType);this.symbolizerSwatch.setSymbolizers([b],
{draw:this.symbolizerSwatch.rendered});a={xtype:"gxp_"+this.symbolType.toLowerCase()+"symbolizer",symbolizer:b,bodyStyle:{padding:"10px"},border:false,labelWidth:70,defaults:{labelWidth:70},listeners:{change:function(f){this.symbolizerSwatch.setSymbolizers([f],{draw:this.symbolizerSwatch.rendered});if(!d){this.rule.symbolizers.push(f);d=true}this.fireEvent("change",this,this.rule)},scope:this}};if(this.symbolType==="Point"&&this.pointGraphics)a.pointGraphics=this.pointGraphics;return a},getSymbolTypeFromRule:function(a){for(var b,
c,d=0,e=a.symbolizers.length;d<e;++d){b=a.symbolizers[d];if(!(b instanceof OpenLayers.Symbolizer.Text)){c=b.CLASS_NAME.split(".").pop();break}}return c}});Ext.reg("gxp_rulepanel",gxp.RulePanel);Ext.namespace("gxp.slider");
gxp.slider.Tip=Ext.extend(Ext.slider.Tip,{hover:true,dragging:false,init:function(a){if(this.hover)a.on("render",this.registerThumbListeners,this);this.slider=a;gxp.slider.Tip.superclass.init.apply(this,arguments)},registerThumbListeners:function(){for(var a=0,b=this.slider.thumbs.length;a<b;++a)this.slider.thumbs[a].el.on({mouseover:this.createHoverListener(a),mouseout:function(){this.dragging||this.hide.apply(this,arguments)},scope:this})},createHoverListener:function(a){return function(){this.onSlide(this.slider,
{},this.slider.thumbs[a]);this.dragging=false}.createDelegate(this)},onSlide:function(){this.dragging=true;gxp.slider.Tip.superclass.onSlide.apply(this,arguments)}});Ext.namespace("gxp.plugins");
gxp.plugins.DeleteSelectedFeatures=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_deleteselectedfeatures",deleteMsgTitle:"Delete",deleteFeaturesMsg:"Are you sure you want to delete {0} selected features?",deleteFeatureMsg:"Are you sure you want to delete the selected feature?",menuText:"Delete selected features",tooltip:"Delete the currently selected features",iconCls:"delete",addActions:function(){var a=gxp.plugins.DeleteSelectedFeatures.superclass.addActions.apply(this,[{text:this.buttonText,menuText:this.menuText,
iconCls:this.iconCls,tooltip:this.tooltip,handler:this.deleteFeatures,scope:this}]);a[0].disable();var b=this.target.tools[this.featureManager].featureLayer;b.events.on({featureselected:function(){a[0].isDisabled()&&a[0].enable()},featureunselected:function(){b.selectedFeatures.length==0&&a[0].disable()}});return a},deleteFeatures:function(){var a=this.target.tools[this.featureManager],b=a.featureLayer.selectedFeatures;Ext.Msg.show({title:this.deleteMsgTitle,msg:b.length>1?String.format(this.deleteFeaturesMsg,
b.length):this.deleteFeatureMsg,buttons:Ext.Msg.YESNO,fn:function(c){if(c==="yes"){c=a.featureStore;for(var d,e=b.length-1;e>=0;--e){d=b[e];d.layer.selectedFeatures.remove(d);d.layer.events.triggerEvent("featureunselected",{feature:d});if(d.state!==OpenLayers.State.INSERT){d.state=OpenLayers.State.DELETE;c._removing=true}c.remove(c.getRecordFromFeature(d));delete c._removing}c.save()}},scope:this,icon:Ext.MessageBox.QUESTION})}});Ext.preg(gxp.plugins.DeleteSelectedFeatures.prototype.ptype,gxp.plugins.DeleteSelectedFeatures);
Ext.namespace("gxp.plugins");
gxp.plugins.TMSSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_tmssource",title:"OpenStreetMap Layers",osmAttribution:"Data CC-By-SA by <a href='http://openstreetmap.org/' target='_blank'>OpenStreetMap</a>",cyclemapAttribution:"Data CC-By-SA by <a href='http://www.opencyclemap.org/' target='_blank'>OpenCycleMap</a>",mapQuestAttribution:"Tiles Courtesy of <a href='http://open.mapquest.co.uk/' target='_blank'>MapQuest</a> <img src='http://developer.mapquest.com/content/osm/mq_logo.png' border='0'>",labelsAttribution:"Labels overlay CC-by-SA by <a href='http://oobrien.com/oom/' target='_blank'>OpenOrienteeringMap</a>",
reliefAttribution:"Relief by <a href='http://hikebikemap.de/' target='_blank'>Hike &amp; Bike Map</a>",createStore:function(){var a={projection:"EPSG:900913",maxExtent:new OpenLayers.Bounds(-2.00375083392E7,-2.00375083392E7,2.00375083392E7,2.00375083392E7),maxResolution:156543.0339,numZoomLevels:19,units:"m",buffer:1,type:"png",getURL:this.getTileURL,displayOutsideMaxExtent:true};a=[new OpenLayers.Layer.TMS("OpenStreetMap (Mapnik)",["http://a.tile.openstreetmap.org/","http://b.tile.openstreetmap.org/",
"http://c.tile.openstreetmap.org/"],OpenLayers.Util.applyDefaults({attribution:this.osmAttribution,layerType:"mapnik"},a)),new OpenLayers.Layer.TMS("OpenStreetMap (CycleMap)",["http://a.tile.opencyclemap.org/cycle/","http://b.tile.opencyclemap.org/cycle/","http://c.tile.opencyclemap.org/cycle/"],OpenLayers.Util.applyDefaults({attribution:this.cyclemapAttribution,layerType:"cyclemap"},a)),new OpenLayers.Layer.TMS("MapQuest",["http://otile1.mqcdn.com/tiles/1.0.0/osm/","http://otile2.mqcdn.com/tiles/1.0.0/osm/",
"http://otile3.mqcdn.com/tiles/1.0.0/osm/","http://otile4.mqcdn.com/tiles/1.0.0/osm/"],OpenLayers.Util.applyDefaults({attribution:this.mapQuestAttribution,type:"mapquest"},a)),new OpenLayers.Layer.TMS("OpenStreetMap (Osmarender)",["http://a.tah.openstreetmap.org/Tiles/tile/","http://b.tah.openstreetmap.org/Tiles/tile/","http://c.tah.openstreetmap.org/Tiles/tile/"],OpenLayers.Util.applyDefaults({attribution:this.osmAttribution,layerType:"osmarender"},a)),new OpenLayers.Layer.TMS("OpenStreetMap (Sahana)",
["http://geo.eden.sahanafoundation.org/tiles/"],OpenLayers.Util.applyDefaults({attribution:this.osmAttribution,layerType:"sahana"},a)),new OpenLayers.Layer.TMS("OpenStreetMap (Taiwan)",["http://tile.openstreetmap.tw/tiles/"],OpenLayers.Util.applyDefaults({attribution:this.osmAttribution,layerType:"taiwan"},a)),new OpenLayers.Layer.TMS("OpenStreetMap (Labels)",["http://tiler1.censusprofiler.org/labelsonly/"],OpenLayers.Util.applyDefaults({attribution:this.labelsAttribution,layerType:"labels",isBaseLayer:false,
group:"overlays"},a)),new OpenLayers.Layer.TMS("OpenStreetMap (Relief)",["http://toolserver.org/~cmarqu/hill/"],OpenLayers.Util.applyDefaults({attribution:this.reliefAttribution,layerType:"relief",isBaseLayer:false,group:"overlays"},a))];this.store=new GeoExt.data.LayerStore({layers:a,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"layerType"},{name:"abstract",type:"string",mapping:"attribution"},{name:"group",type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",
defaultValue:true},{name:"selected",type:"boolean"}]});this.store.each(function(b){b.get("group")!="overlays"?b.set("group","background"):b.set("group","")});this.fireEvent("ready",this)},createLayerRecord:function(a){var b,c=this.store.findExact("name",a.name);if(c>-1){b=this.store.getAt(c).copy(Ext.data.Record.id({}));c=b.getLayer().clone();if(a.title){c.setName(a.title);b.set("title",a.title)}if("visibility"in a)c.visibility=a.visibility;b.set("selected",a.selected||false);b.set("source",a.source);
b.set("name",a.name);"group"in a&&b.set("group",a.group);b.data.layer=c;b.commit()}return b},getTileURL:function(a){var b=this.map.getResolution(),c=Math.round((a.left-this.maxExtent.left)/(b*this.tileSize.w));a=Math.round((this.maxExtent.top-a.top)/(b*this.tileSize.h));b=this.map.getZoom();var d=Math.pow(2,b);if(a<0||a>=d)return OpenLayers.Util.getImagesLocation()+"404.png";else{c=b+"/"+(c%d+d)%d+"/"+a+"."+this.type;a=this.url;if(a instanceof Array)a=this.selectUrl(c,a);return a+c}}});
Ext.preg(gxp.plugins.TMSSource.prototype.ptype,gxp.plugins.TMSSource);Ext.namespace("gxp.plugins");
gxp.plugins.GoogleSource=Ext.extend(gxp.plugins.LayerSource,{ptype:"gxp_googlesource",timeout:7E3,title:"Google Layers",roadmapAbstract:"Show street map",satelliteAbstract:"Show satellite imagery",hybridAbstract:"Show imagery with street names",terrainAbstract:"Show street map with terrain",constructor:function(a){this.config=a;gxp.plugins.GoogleSource.superclass.constructor.apply(this,arguments)},createStore:function(){gxp.plugins.GoogleSource.loader.onLoad({timeout:this.timeout,callback:this.syncCreateStore,
errback:function(){delete this.store;this.fireEvent("failure",this,"The Google Maps script failed to load within the provided timeout ("+this.timeout/1E3+" s).")},scope:this})},syncCreateStore:function(){var a={ROADMAP:{"abstract":this.roadmapAbstract,MAX_ZOOM_LEVEL:20},SATELLITE:{"abstract":this.satelliteAbstract},HYBRID:{"abstract":this.hybridAbstract},TERRAIN:{"abstract":this.terrainAbstract,MAX_ZOOM_LEVEL:15}},b=[],c,d;for(c in a){d=google.maps.MapTypeId[c];b.push(new OpenLayers.Layer.Google("Google "+
d.replace(/\w/,function(e){return e.toUpperCase()}),{type:d,typeName:c,MAX_ZOOM_LEVEL:a[c].MAX_ZOOM_LEVEL,maxExtent:new OpenLayers.Bounds(-2.003750834E7,-2.003750834E7,2.003750834E7,2.003750834E7),restrictedExtent:new OpenLayers.Bounds(-2.003750834E7,-2.003750834E7,2.003750834E7,2.003750834E7),projection:this.projection}))}this.store=new GeoExt.data.LayerStore({layers:b,fields:[{name:"source",type:"string"},{name:"name",type:"string",mapping:"typeName"},{name:"abstract",type:"string"},{name:"group",
type:"string",defaultValue:"background"},{name:"fixed",type:"boolean",defaultValue:true},{name:"selected",type:"boolean"}]});this.store.each(function(e){e.set("abstract",a[e.get("name")]["abstract"])});this.fireEvent("ready",this)},createLayerRecord:function(a){var b,c=function(d){return d.get("name")===a.name};if(this.target.mapPanel.layers.findBy(c)==-1){b=this.store.getAt(this.store.findBy(c)).clone();c=b.getLayer();if(a.title){c.setName(a.title);b.set("title",a.title)}if("visibility"in a)c.visibility=
a.visibility;b.set("selected",a.selected||false);b.set("source",a.source);b.set("name",a.name);"group"in a&&b.set("group",a.group);b.commit()}return b}});
gxp.plugins.GoogleSource.loader=new (Ext.extend(Ext.util.Observable,{ready:!!(window.google&&google.maps),loading:false,constructor:function(){this.addEvents("ready","failure");return Ext.util.Observable.prototype.constructor.apply(this,arguments)},onScriptLoad:function(){var a=gxp.plugins.GoogleSource.loader;if(!a.ready){a.ready=true;a.loading=false;a.fireEvent("ready")}},onLoad:function(a){if(this.ready)window.setTimeout(function(){a.callback.call(a.scope)},0);else if(this.loading)this.on({ready:a.callback,
failure:a.errback||Ext.emptyFn,scope:a.scope});else this.loadScript(a)},loadScript:function(a){var b={autoload:Ext.encode({modules:[{name:"maps",version:3.3,nocss:"true",callback:"gxp.plugins.GoogleSource.loader.onScriptLoad",other_params:"sensor=false"}]})},c=document.createElement("script");c.src="http://www.google.com/jsapi?"+Ext.urlEncode(b);var d=a.errback||Ext.emptyFn;b=a.timeout||gxp.plugins.GoogleSource.prototype.timeout;window.setTimeout(function(){if(!gxp.plugins.GoogleSource.loader.ready){this.ready=
this.loading=false;document.getElementsByTagName("head")[0].removeChild(c);d.call(a.scope);this.fireEvent("failure");this.purgeListeners()}}.createDelegate(this),b);this.on({ready:a.callback,scope:a.scope});this.loading=true;document.getElementsByTagName("head")[0].appendChild(c)}}));Ext.preg(gxp.plugins.GoogleSource.prototype.ptype,gxp.plugins.GoogleSource);Ext.namespace("gxp");
gxp.FeatureEditPopup=Ext.extend(GeoExt.Popup,{closeMsgTitle:"Save Changes?",closeMsg:"This feature has unsaved changes. Would you like to save your changes?",deleteMsgTitle:"Delete Feature?",deleteMsg:"Are you sure you want to delete this feature?",editButtonText:"Edit",editButtonTooltip:"Make this feature editable",deleteButtonText:"Delete",deleteButtonTooltip:"Delete this feature",cancelButtonText:"Cancel",cancelButtonTooltip:"Stop editing, discard changes",saveButtonText:"Save",saveButtonTooltip:"Save changes",
layout:"fit",feature:null,schema:null,readOnly:false,allowDelete:false,editing:false,grid:null,modifyControl:null,geometry:null,attributes:null,cancelButton:null,saveButton:null,editButton:null,deleteButton:null,initComponent:function(){this.addEvents("featuremodified","canceledit","cancelclose");if(!this.dateFormat)this.dateFormat=Ext.form.DateField.prototype.format;if(!this.timeFormat)this.timeFormat=Ext.form.TimeField.prototype.format;var a=this.feature;if(!this.location)this.location=a;this.anchored=
!this.editing;var b={},c={};if(this.schema){var d={};if(this.fields){if(!this.excludeFields)this.excludeFields=[];for(var e=0,g=this.fields.length;e<g;++e)d[this.fields[e]]=null}var f=this.fields?this.fields.join(",").toUpperCase().split(","):[];this.schema.each(function(j){var k=j.get("type");if(!k.match(/^[^:]*:?((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry))/)){var l=j.get("name");this.fields&&f.indexOf(l.toUpperCase())==-1&&this.excludeFields.push(l);var m=a.attributes[l];j=GeoExt.form.recordToField(j);
var o;if(typeof m=="string"){var n;switch(k.split(":").pop()){case "date":n=this.dateFormat;j.editable=false;case "dateTime":if(!n){n=this.dateFormat+" "+this.timeFormat;j.editable=true}j.format=n;o={startedit:function(p,q){if(!(q instanceof Date)){var r=Date.parseDate(q.replace(/Z$/,""),"c");r&&this.setValue(r)}}};c[l]=function(){return function(p){var q=p;if(typeof p=="string")q=Date.parseDate(p.replace(/Z$/,""),"c");return q?q.format(n):p}}();break;case "boolean":o={startedit:function(p,q){this.setValue(Boolean(q))}}}}b[l]=
new Ext.grid.GridEditor({field:Ext.create(j),listeners:o});d[l]=m}},this);a.attributes=d}if(!this.title&&a.fid)this.title=a.fid;this.editButton=new Ext.Button({text:this.editButtonText,tooltip:this.editButtonTooltip,iconCls:"edit",handler:this.startEditing,scope:this});this.deleteButton=new Ext.Button({text:this.deleteButtonText,tooltip:this.deleteButtonTooltip,iconCls:"delete",hidden:!this.allowDelete,handler:this.deleteFeature,scope:this});this.cancelButton=new Ext.Button({text:this.cancelButtonText,
tooltip:this.cancelButtonTooltip,iconCls:"cancel",hidden:true,handler:function(){this.stopEditing(false)},scope:this});this.saveButton=new Ext.Button({text:this.saveButtonText,tooltip:this.saveButtonTooltip,iconCls:"save",hidden:true,handler:function(){this.stopEditing(true)},scope:this});var h=this.excludeFields?this.excludeFields.join(",").toUpperCase().split(","):[];this.grid=new Ext.grid.PropertyGrid({border:false,source:a.attributes,customEditors:b,customRenderers:c,viewConfig:{forceFit:true,
getRowClass:function(j){if(h.indexOf(j.get("name").toUpperCase())!==-1)return"x-hide-nosize"}},listeners:{beforeedit:function(){return this.editing},propertychange:function(){this.setFeatureState(this.getDirtyState())},scope:this},initComponent:function(){var j=Ext.data.Store.prototype.sort;Ext.data.Store.prototype.sort=function(){};Ext.grid.PropertyGrid.prototype.initComponent.apply(this,arguments);Ext.data.Store.prototype.sort=j}});this.grid.propStore.isEditableValue=function(){return true};this.items=
[this.grid];this.bbar=new Ext.Toolbar({hidden:this.readOnly,items:[this.editButton,this.deleteButton,this.saveButton,this.cancelButton]});gxp.FeatureEditPopup.superclass.initComponent.call(this);this.on({show:function(){if(this.editing){this.editing=null;this.startEditing()}},beforeclose:function(){if(this.editing)if(this.feature.state===this.getDirtyState()){Ext.Msg.show({title:this.closeMsgTitle,msg:this.closeMsg,buttons:Ext.Msg.YESNOCANCEL,fn:function(j){if(j&&j!=="cancel"){this.stopEditing(j===
"yes");this.close()}else this.fireEvent("cancelclose",this)},scope:this,icon:Ext.MessageBox.QUESTION,animEl:this.getEl()});return false}else this.stopEditing(false)},scope:this})},getDirtyState:function(){return this.feature.state===OpenLayers.State.INSERT?this.feature.state:OpenLayers.State.UPDATE},startEditing:function(){if(!this.editing){this.editing=true;this.anc&&this.unanchorPopup();this.editButton.hide();this.deleteButton.hide();this.saveButton.show();this.cancelButton.show();this.geometry=
this.feature.geometry.clone();this.attributes=Ext.apply({},this.feature.attributes);this.modifyControl=new OpenLayers.Control.ModifyFeature(this.feature.layer,{standalone:true,vertexRenderIntent:this.vertexRenderIntent});this.feature.layer.map.addControl(this.modifyControl);this.modifyControl.activate();this.modifyControl.selectFeature(this.feature)}},stopEditing:function(a){if(this.editing){this.modifyControl.deactivate();this.modifyControl.destroy();var b=this.feature;if(b.state===this.getDirtyState())if(a===
true){if(this.schema){var c,d;for(d in b.attributes){c=this.schema.getAt(this.schema.findExact("name",d));a=b.attributes[d];if(a instanceof Date){c=c.get("type").split(":").pop();b.attributes[d]=a.format(c=="date"?"Y-m-d":"c")}}}this.fireEvent("featuremodified",this,b)}else if(b.state===OpenLayers.State.INSERT){this.editing=false;b.layer.destroyFeatures([b]);this.fireEvent("canceledit",this,null);this.close()}else{d=b.layer;d.drawFeature(b,{display:"none"});b.geometry=this.geometry;b.attributes=this.attributes;
this.setFeatureState(null);this.grid.setSource(b.attributes);d.drawFeature(b);this.fireEvent("canceledit",this,b)}if(!this.isDestroyed){this.cancelButton.hide();this.saveButton.hide();this.editButton.show();this.allowDelete&&this.deleteButton.show()}this.editing=false}},deleteFeature:function(){Ext.Msg.show({title:this.deleteMsgTitle,msg:this.deleteMsg,buttons:Ext.Msg.YESNO,fn:function(a){if(a==="yes"){this.setFeatureState(OpenLayers.State.DELETE);this.fireEvent("featuremodified",this,this.feature);
this.close()}},scope:this,icon:Ext.MessageBox.QUESTION,animEl:this.getEl()})},setFeatureState:function(a){this.feature.state=a;(a=this.feature.layer)&&a.events.triggerEvent("featuremodified",{feature:this.feature})}});Ext.reg("gxp_featureeditpopup",gxp.FeatureEditPopup);Ext.namespace("gxp.grid");
gxp.grid.FeatureGrid=Ext.extend(Ext.grid.GridPanel,{map:null,ignoreFields:null,layer:null,initComponent:function(){this.ignoreFields=["feature","state","fid"].concat(this.ignoreFields);if(this.store){this.cm=this.createColumnModel(this.store);if(this.map){this.layer=new OpenLayers.Layer.Vector(this.id+"_layer");this.map.addLayer(this.layer)}}else{this.store=new Ext.data.Store;this.cm=new Ext.grid.ColumnModel({columns:[]})}if(this.layer){this.sm=this.sm||new GeoExt.grid.FeatureSelectionModel({layerFromStore:false,
layer:this.layer});this.store instanceof GeoExt.data.FeatureStore&&this.store.bind(this.layer)}if(!this.dateFormat)this.dateFormat=Ext.form.DateField.prototype.format;if(!this.timeFormat)this.timeFormat=Ext.form.TimeField.prototype.format;gxp.grid.FeatureGrid.superclass.initComponent.call(this)},onDestroy:function(){if(this.initialConfig&&this.initialConfig.map&&!this.initialConfig.layer){this.layer.destroy();delete this.layer}gxp.grid.FeatureGrid.superclass.onDestroy.apply(this,arguments)},setStore:function(a,
b){if(b)this.schema=b;if(a){this.store instanceof GeoExt.data.FeatureStore&&this.store.unbind();if(this.layer){this.layer.destroyFeatures();a.bind(this.layer)}this.reconfigure(a,this.createColumnModel(a))}else this.reconfigure(new Ext.data.Store,new Ext.grid.ColumnModel({columns:[]}))},createColumnModel:function(a){function b(j){return function(k){var l=k;if(typeof k=="string")l=Date.parseDate(k.replace(/Z$/,""),"c");return l?l.format(j):k}}var c=[],d,e,g,f,h;(this.schema||a.fields).each(function(j){if(this.schema){d=
j.get("name");e=j.get("type").split(":").pop();f=null;switch(e){case "date":f=this.dateFormat;case "datetime":f=f?f:this.dateFormat+" "+this.timeFormat;g=undefined;h=b(f);break;case "boolean":g="booleancolumn";break;case "string":g="gridcolumn";break;default:g="numbercolumn"}}else d=j.name;if(this.ignoreFields.indexOf(d)===-1)c.push({dataIndex:d,header:d,sortable:true,xtype:g,format:f,renderer:g?undefined:h})},this);return new Ext.grid.ColumnModel(c)}});Ext.reg("gxp_featuregrid",gxp.grid.FeatureGrid);
Ext.namespace("gxp");
gxp.FilterBuilder=Ext.extend(Ext.Container,{builderTypeNames:["any","all","none","not all"],allowedBuilderTypes:null,allowBlank:false,preComboText:"Match",postComboText:"of the following:",cls:"gxp-filterbuilder",builderType:null,childFilterContainer:null,customizeFilterOnInit:true,addConditionText:"add condition",addGroupText:"add group",removeConditionText:"remove condition",allowGroups:true,initComponent:function(){Ext.applyIf(this,{defaultBuilderType:gxp.FilterBuilder.ANY_OF});if(this.customizeFilterOnInit)this.filter=
this.customizeFilter(this.filter);this.builderType=this.getBuilderType();this.items=[{xtype:"container",layout:"form",defaults:{anchor:"100%"},hideLabels:true,items:[{xtype:"compositefield",style:"padding-left: 2px",items:[{xtype:"label",style:"padding-top: 0.3em",text:this.preComboText},this.createBuilderTypeCombo(),{xtype:"label",style:"padding-top: 0.3em",text:this.postComboText}]},this.createChildFiltersPanel(),{xtype:"toolbar",items:this.createToolBar()}]}];this.addEvents("change");gxp.FilterBuilder.superclass.initComponent.call(this)},
createToolBar:function(){var a=[{text:this.addConditionText,iconCls:"add",handler:function(){this.addCondition()},scope:this}];this.allowGroups&&a.push({text:this.addGroupText,iconCls:"add",handler:function(){this.addCondition(true)},scope:this});return a},getFilter:function(){var a;if(this.filter){a=this.filter.clone();if(a instanceof OpenLayers.Filter.Logical)a=this.cleanFilter(a)}return a},cleanFilter:function(a){if(a instanceof OpenLayers.Filter.Logical)if(a.type!==OpenLayers.Filter.Logical.NOT&&
a.filters.length===1)a=this.cleanFilter(a.filters[0]);else for(var b,c=0,d=a.filters.length;c<d;++c){b=a.filters[c];if(b instanceof OpenLayers.Filter.Logical)if(b=this.cleanFilter(b))a.filters[c]=b;else{a=b;break}else if(!b||b.type===null||b.property===null||b.value===null){a=false;break}}else if(!a||a.type===null||a.property===null||a.value===null)a=false;return a},customizeFilter:function(a){if(a){a=this.cleanFilter(a);switch(a.type){case OpenLayers.Filter.Logical.AND:case OpenLayers.Filter.Logical.OR:if(!a.filters||
a.filters.length===0)a.filters=[this.createDefaultFilter()];else for(var b,c=0,d=a.filters.length;c<d;++c){b=a.filters[c];if(b instanceof OpenLayers.Filter.Logical)a.filters[c]=this.customizeFilter(b)}a=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:[a]});break;case OpenLayers.Filter.Logical.NOT:if(!a.filters||a.filters.length===0)a.filters=[new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:[this.createDefaultFilter()]})];else{b=a.filters[0];if(b instanceof
OpenLayers.Filter.Logical)if(b.type!==OpenLayers.Filter.Logical.NOT){var e;c=0;for(d=b.filters.length;c<d;++c){e=b.filters[c];if(e instanceof OpenLayers.Filter.Logical)b.filters[c]=this.customizeFilter(e)}}else a=b.filters&&b.filters.length>0?this.customizeFilter(b.filters[0]):this.wrapFilter(this.createDefaultFilter());else a.filters=[new OpenLayers.Filter.Logical({type:this.defaultBuilderType===gxp.FilterBuilder.NOT_ALL_OF?OpenLayers.Filter.Logical.AND:OpenLayers.Filter.Logical.OR,filters:[b]})]}break;
default:a=this.wrapFilter(a)}}else a=this.wrapFilter(this.createDefaultFilter());return a},createDefaultFilter:function(){return new OpenLayers.Filter.Comparison},wrapFilter:function(a){return new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.OR,filters:[new OpenLayers.Filter.Logical({type:this.defaultBuilderType===gxp.FilterBuilder.ALL_OF?OpenLayers.Filter.Logical.AND:OpenLayers.Filter.Logical.OR,filters:[a]})]})},addCondition:function(a){var b,c;if(a){c="gxp_filterbuilder";b=this.wrapFilter(this.createDefaultFilter())}else{c=
"gxp_filterfield";b=this.createDefaultFilter()}this.childFilterContainer.add(this.newRow({xtype:c,filter:b,columnWidth:1,attributes:this.attributes,allowBlank:a?undefined:this.allowBlank,customizeFilterOnInit:a&&false,listeners:{change:function(){this.fireEvent("change",this)},scope:this}}));this.filter.filters[0].filters.push(b);this.childFilterContainer.doLayout()},removeCondition:function(a,b){var c=this.filter.filters[0].filters;if(c.length>1){c.remove(b);this.childFilterContainer.remove(a,true)}this.fireEvent("change",
this)},createBuilderTypeCombo:function(){for(var a=this.allowedBuilderTypes||[gxp.FilterBuilder.ANY_OF,gxp.FilterBuilder.ALL_OF,gxp.FilterBuilder.NONE_OF],b=a.length,c=Array(b),d,e=0;e<b;++e){d=a[e];c[e]=[d,this.builderTypeNames[d]]}return{xtype:"combo",store:new Ext.data.SimpleStore({data:c,fields:["value","name"]}),value:this.builderType,displayField:"name",valueField:"value",triggerAction:"all",mode:"local",listeners:{select:function(g,f){this.changeBuilderType(f.get("value"));this.fireEvent("change",
this)},scope:this},width:60}},changeBuilderType:function(a){if(a!==this.builderType){this.builderType=a;var b=this.filter.filters[0];switch(a){case gxp.FilterBuilder.ANY_OF:this.filter.type=OpenLayers.Filter.Logical.OR;b.type=OpenLayers.Filter.Logical.OR;break;case gxp.FilterBuilder.ALL_OF:this.filter.type=OpenLayers.Filter.Logical.OR;b.type=OpenLayers.Filter.Logical.AND;break;case gxp.FilterBuilder.NONE_OF:this.filter.type=OpenLayers.Filter.Logical.NOT;b.type=OpenLayers.Filter.Logical.OR;break;case gxp.FilterBuilder.NOT_ALL_OF:this.filter.type=
OpenLayers.Filter.Logical.NOT;b.type=OpenLayers.Filter.Logical.AND}}},createChildFiltersPanel:function(){this.childFilterContainer=new Ext.Container;for(var a=this.filter.filters[0].filters,b,c=0,d=a.length;c<d;++c){b=a[c];var e={xtype:"gxp_filterfield",allowBlank:this.allowBlank,columnWidth:1,filter:b,attributes:this.attributes,listeners:{change:function(){this.fireEvent("change",this)},scope:this}};this.childFilterContainer.add(this.newRow(Ext.applyIf(b instanceof OpenLayers.Filter.Logical?{xtype:"gxp_filterbuilder"}:
{xtype:"container",layout:"form",hideLabels:true,items:e},e)))}return this.childFilterContainer},newRow:function(a){var b=new Ext.Container({layout:"column",items:[{xtype:"container",width:28,height:26,style:"padding-left: 2px",items:{xtype:"button",tooltip:this.removeConditionText,iconCls:"delete",handler:function(){this.removeCondition(b,a.filter)},scope:this}},a]});return b},getBuilderType:function(){var a=this.defaultBuilderType;if(this.filter){var b=this.filter.filters[0];if(this.filter.type===
OpenLayers.Filter.Logical.NOT)switch(b.type){case OpenLayers.Filter.Logical.OR:a=gxp.FilterBuilder.NONE_OF;break;case OpenLayers.Filter.Logical.AND:a=gxp.FilterBuilder.NOT_ALL_OF}else switch(b.type){case OpenLayers.Filter.Logical.OR:a=gxp.FilterBuilder.ANY_OF;break;case OpenLayers.Filter.Logical.AND:a=gxp.FilterBuilder.ALL_OF}}return a}});gxp.FilterBuilder.ANY_OF=0;gxp.FilterBuilder.ALL_OF=1;gxp.FilterBuilder.NONE_OF=2;gxp.FilterBuilder.NOT_ALL_OF=3;Ext.reg("gxp_filterbuilder",gxp.FilterBuilder);
Ext.namespace("gxp.plugins");
gxp.plugins.QueryForm=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_queryform",featureManager:null,autoHide:false,schema:null,queryActionText:"Query",cancelButtonText:"Cancel",queryMenuText:"Query layer",queryActionTip:"Query the selected layer",queryByLocationText:"Query by location",currentTextText:"Current extent",queryByAttributesText:"Query by attributes",queryMsg:"Querying...",noFeaturesTitle:"No Match",noFeaturesMessage:"Your query did not return any results.",outputAction:0,constructor:function(a){Ext.applyIf(a,
{actions:[{text:this.queryActionText,menuText:this.queryMenuText,iconCls:"gxp-icon-find",tooltip:this.queryActionTip,disabled:true}]});gxp.plugins.QueryForm.superclass.constructor.apply(this,arguments)},addActions:function(){gxp.plugins.QueryForm.superclass.addActions.apply(this,arguments);if(this.actions)this.target.tools[this.featureManager].on("layerchange",function(a,b,c){for(a=this.actions.length-1;a>=0;--a)this.actions[a].setDisabled(!c)},this)},addOutput:function(a){var b=this.target.tools[this.featureManager];
a=Ext.apply({border:false,bodyStyle:"padding: 10px",layout:"form",autoScroll:true,items:[{xtype:"fieldset",ref:"spatialFieldset",title:this.queryByLocationText,checkboxToggle:true,items:[{xtype:"textfield",ref:"../extent",anchor:"100%",fieldLabel:this.currentTextText,value:this.getFormattedMapExtent(),readOnly:true}]},{xtype:"fieldset",ref:"attributeFieldset",title:this.queryByAttributesText,checkboxToggle:true}],bbar:["->",{text:this.cancelButtonText,iconCls:"cancel",handler:function(){var d=this.outputTarget?
c.ownerCt:c.ownerCt.ownerCt;d&&d instanceof Ext.Window?d.hide():addAttributeFilter(b,b.layerRecord,featureManater.schema)}},{text:this.queryActionText,iconCls:"gxp-icon-find",handler:function(){var d=[];c.spatialFieldset.collapsed!==true&&d.push(new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:b.featureStore.geometryName,value:this.target.mapPanel.map.getExtent()}));if(c.attributeFieldset.collapsed!==true){var e=c.filterBuilder.getFilter();e&&d.push(e)}b.loadFeatures(d.length>
1?new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:d}):d[0])},scope:this}]},a||{});var c=gxp.plugins.FeatureGrid.superclass.addOutput.call(this,a);a=function(d,e,g){c.attributeFieldset.removeAll();c.setDisabled(!g);if(g){c.attributeFieldset.add({xtype:"gxp_filterbuilder",ref:"../filterBuilder",attributes:g,allowBlank:true,allowGroups:false});c.spatialFieldset.expand();c.attributeFieldset.expand()}else{c.attributeFieldset.collapse();c.spatialFieldset.collapse()}c.attributeFieldset.doLayout()};
b.on("layerchange",a);a(b,b.layerRecord,b.schema);this.target.mapPanel.map.events.register("moveend",this,function(){c.extent.setValue(this.getFormattedMapExtent())});b.on({beforequery:function(){(new Ext.LoadMask(c.getEl(),{store:b.featureStore,msg:this.queryMsg})).show()},query:function(d,e){if(e){e.getCount()||Ext.Msg.show({title:this.noFeaturesTitle,msg:this.noFeaturesMessage,buttons:Ext.Msg.OK,icon:Ext.Msg.INFO});if(this.autoHide){var g=this.outputTarget?c.ownerCt:c.ownerCt.ownerCt;g instanceof
Ext.Window&&g.hide()}}},scope:this});return c},getFormattedMapExtent:function(){var a=this.target.mapPanel.map.getExtent();return a&&a.toArray().join(", ")}});Ext.preg(gxp.plugins.QueryForm.prototype.ptype,gxp.plugins.QueryForm);Ext.namespace("gxp.plugins");
gxp.plugins.NavigationHistory=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_navigationhistory",previousMenuText:"Zoom To Previous Extent",nextMenuText:"Zoom To Next Extent",previousTooltip:"Zoom To Previous Extent",nextTooltip:"Zoom To Next Extent",constructor:function(){gxp.plugins.NavigationHistory.superclass.constructor.apply(this,arguments)},addActions:function(){var a=new OpenLayers.Control.NavigationHistory;this.target.mapPanel.map.addControl(a);a=[new GeoExt.Action({menuText:this.previousMenuText,
iconCls:"gxp-icon-zoom-previous",tooltip:this.previousTooltip,disabled:true,control:a.previous}),new GeoExt.Action({menuText:this.nextMenuText,iconCls:"gxp-icon-zoom-next",tooltip:this.nextTooltip,disabled:true,control:a.next})];return gxp.plugins.NavigationHistory.superclass.addActions.apply(this,[a])}});Ext.preg(gxp.plugins.NavigationHistory.prototype.ptype,gxp.plugins.NavigationHistory);Ext.namespace("gxp.plugins");
gxp.plugins.ZoomToSelectedFeatures=Ext.extend(gxp.plugins.ZoomToExtent,{ptype:"gxp_zoomtoselectedfeatures",menuText:"Zoom to selected features",tooltip:"Zoom to selected features",closest:false,iconCls:"gxp-icon-zoom-to",extent:function(){for(var a,b,c=this.target.tools[this.featureManager].featureLayer.selectedFeatures,d=c.length-1;d>=0;--d)if(b=c[d].geometry){b=b.getBounds();if(a)a.extend(b);else a=b.clone()}return a},addActions:function(){var a=gxp.plugins.ZoomToSelectedFeatures.superclass.addActions.apply(this,
arguments);a[0].disable();var b=this.target.tools[this.featureManager].featureLayer;b.events.on({featureselected:function(){a[0].isDisabled()&&a[0].enable()},featureunselected:function(){b.selectedFeatures.length==0&&a[0].disable()}});return a}});Ext.preg(gxp.plugins.ZoomToSelectedFeatures.prototype.ptype,gxp.plugins.ZoomToSelectedFeatures);Ext.namespace("gxp");
gxp.StrokeSymbolizer=Ext.extend(Ext.FormPanel,{solidStrokeName:"solid",dashStrokeName:"dash",dotStrokeName:"dot",titleText:"Stroke",styleText:"Style",colorText:"Color",widthText:"Width",opacityText:"Opacity",symbolizer:null,colorManager:null,checkboxToggle:true,defaultColor:null,dashStyles:null,border:false,initComponent:function(){this.dashStyles=this.dashStyles||[["solid",this.solidStrokeName],["4 4",this.dashStrokeName],["2 4",this.dotStrokeName]];if(!this.symbolizer)this.symbolizer={};var a;if(this.colorManager)a=
[new this.colorManager];this.items=[{xtype:"fieldset",title:this.titleText,autoHeight:true,checkboxToggle:this.checkboxToggle,collapsed:this.checkboxToggle===true&&this.symbolizer.stroke===false,hideMode:"offsets",defaults:{width:100},items:[{xtype:"combo",name:"style",fieldLabel:this.styleText,store:new Ext.data.SimpleStore({data:this.dashStyles,fields:["value","display"]}),displayField:"display",valueField:"value",value:this.getDashArray(this.symbolizer.strokeDashstyle)||OpenLayers.Renderer.defaultSymbolizer.strokeDashstyle,
mode:"local",allowBlank:true,triggerAction:"all",editable:false,listeners:{select:function(b,c){this.symbolizer.strokeDashstyle=c.get("value");this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_colorfield",name:"color",fieldLabel:this.colorText,emptyText:OpenLayers.Renderer.defaultSymbolizer.strokeColor,value:this.symbolizer.strokeColor,defaultBackground:this.defaultColor||OpenLayers.Renderer.defaultSymbolizer.strokeColor,plugins:a,listeners:{valid:function(b){b=b.getValue();var c=
this.symbolizer.strokeColor!=b;this.symbolizer.strokeColor=b;c&&this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"numberfield",name:"width",fieldLabel:this.widthText,allowNegative:false,emptyText:OpenLayers.Renderer.defaultSymbolizer.strokeWidth,value:this.symbolizer.strokeWidth,listeners:{change:function(b,c){c=parseFloat(c);if(isNaN(c))delete this.symbolizer.strokeWidth;else this.symbolizer.strokeWidth=c;this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"slider",name:"opacity",
fieldLabel:this.opacityText,values:[("strokeOpacity"in this.symbolizer?this.symbolizer.strokeOpacity:OpenLayers.Renderer.defaultSymbolizer.strokeOpacity)*100],isFormField:true,listeners:{changecomplete:function(b,c){this.symbolizer.strokeOpacity=c/100;this.fireEvent("change",this.symbolizer)},scope:this},plugins:[new GeoExt.SliderTip({getText:function(b){return b.value+"%"}})]}],listeners:{collapse:function(){if(this.symbolizer.stroke!==false){this.symbolizer.stroke=false;this.fireEvent("change",
this.symbolizer)}},expand:function(){this.symbolizer.stroke=true;this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.StrokeSymbolizer.superclass.initComponent.call(this)},getDashArray:function(a){var b;if(a){a=a.split(/\s+/);a=a[0]/a[1];isNaN(a)||(b=a>=1?"4 4":"2 4")}return b}});Ext.reg("gxp_strokesymbolizer",gxp.StrokeSymbolizer);Ext.namespace("gxp.form");
gxp.form.GoogleGeocoderComboBox=Ext.extend(Ext.form.ComboBox,{xtype:"gxp_googlegeocodercombo",queryDelay:100,valueField:"viewport",displayField:"address",initComponent:function(){this.disabled=true;if(window.google)window.setTimeout(function(){this.prepGeocoder()}.createDelegate(this),0);else{if(!gxp.plugins||!gxp.plugins.GoogleSource)throw Error("The gxp.form.GoogleGeocoderComboBox requres the gxp.plugins.GoogleSource or the Google Maps V3 API to be loaded.");gxp.plugins.GoogleSource.loader.onLoad({callback:this.prepGeocoder,
errback:function(){throw Error("The Google Maps script failed to load within the given timeout.");},scope:this})}this.store=new Ext.data.JsonStore({root:"results",fields:[{name:"address",type:"string"},{name:"location"},{name:"viewport"}],autoLoad:false});this.on({focus:function(){this.clearValue()},scope:this});return gxp.form.GoogleGeocoderComboBox.superclass.initComponent.apply(this,arguments)},prepGeocoder:function(){var a=new google.maps.Geocoder,b={};b[Ext.data.Api.actions.read]=true;b=new Ext.data.DataProxy({api:b});
var c=this,d=function(){var e=this.bounds;if(e){if(e instanceof OpenLayers.Bounds)e=e.toArray();e=new google.maps.LatLngBounds(new google.maps.LatLng(e[1],e[0]),new google.maps.LatLng(e[3],e[2]))}return e}.createDelegate(this);b.doRequest=function(e,g,f,h,j,k,l){a.geocode({address:f.query,bounds:d()},function(m,o){var n;if(o===google.maps.GeocoderStatus.OK||o===google.maps.GeocoderStatus.ZERO_RESULTS)try{m=c.transformResults(m);n=h.readRecords({results:m})}catch(p){c.fireEvent("exception",c,"response",
e,l,o,p)}else c.fireEvent("exception",c,"remote",e,l,o,null);n?j.call(k,n,l,true):j.call(k,null,l,false)})};this.store.proxy=b;this.initialConfig.disabled!=true&&this.enable()},transformResults:function(a){var b=a.length,c=Array(b),d,e,g,f;for(i=0;i<b;++i){d=a[i];e=d.geometry.location;g=d.geometry.viewport;f=g.getNorthEast();g=g.getSouthWest();c[i]={address:d.formatted_address,location:new OpenLayers.LonLat(e.lng(),e.lat()),viewport:new OpenLayers.Bounds(g.lng(),g.lat(),f.lng(),f.lat())}}return c}});
Ext.reg(gxp.form.GoogleGeocoderComboBox.prototype.xtype,gxp.form.GoogleGeocoderComboBox);Ext.namespace("gxp.plugins");
gxp.plugins.LayerProperties=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_layerproperties",menuText:"Layer Properties",toolTip:"Layer Properties",constructor:function(){gxp.plugins.LayerProperties.superclass.constructor.apply(this,arguments);if(!this.outputConfig)this.outputConfig={width:265,autoHeight:true}},addActions:function(){var a=gxp.plugins.LayerProperties.superclass.addActions.apply(this,[{menuText:this.menuText,iconCls:"gxp-icon-layerproperties",disabled:true,tooltip:this.toolTip,handler:function(){this.removeOutput();
this.addOutput()},scope:this}]),b=a[0];this.target.on("layerselectionchange",function(c){b.setDisabled(!c||!c.get("properties"))},this);return a},addOutput:function(a){var b=this.target.selectedLayer;this.outputConfig.title=(this.initialConfig.outputConfig||{}).title||this.menuText+": "+b.get("title");return gxp.plugins.LayerProperties.superclass.addOutput.call(this,Ext.apply({xtype:b.get("properties")||"gxp_layerpanel",layerRecord:b,source:this.target.getSource(b),defaults:{style:"padding: 10px",
autoHeight:this.outputConfig.autoHeight}},a))}});Ext.preg(gxp.plugins.LayerProperties.prototype.ptype,gxp.plugins.LayerProperties);Ext.namespace("gxp.plugins");
gxp.plugins.SelectedFeatureActions=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_selectedfeatureactions",addActions:function(){for(var a=this.target.tools[this.featureManager],b=this.actions.length,c=Array(b),d=this,e=0;e<b;++e)c[e]=Ext.apply({iconCls:"process",disabled:true,handler:function(){var g=a.featureLayer.selectedFeatures[0],f=new Ext.Template(this.urlTemplate),h=Ext.applyIf(this.outputConfig||{},d.initialConfig.outputConfig);d.outputConfig=Ext.apply(h,{title:this.menuText,bodyCfg:{tag:"iframe",
src:f.apply(Ext.applyIf({fid:g.fid.split(".").pop(),layer:a.layerRecord.get("name")},g.attributes)),style:{border:"0px none"}}});d.addOutput()}},this.actions[e]);a.featureLayer.events.on({featureselected:function(g){g=g.feature.layer.selectedFeatures.length!=1;for(var f=c.length-1;f>=0;--f)c[f].setDisabled(g)},featureunselected:function(g){if(g.feature.layer.selectedFeatures.length==0)for(g=c.length-1;g>=0;--g)c[g].disable()},scope:this});gxp.plugins.SelectedFeatureActions.superclass.addActions.apply(this,
[c])}});Ext.preg(gxp.plugins.SelectedFeatureActions.prototype.ptype,gxp.plugins.SelectedFeatureActions);Ext.namespace("gxp");
gxp.EmbedMapDialog=Ext.extend(Ext.Container,{url:null,url:null,publishMessage:"Your map is ready to be published to the web! Simply copy the following HTML to embed the map in your website:",heightLabel:"Height",widthLabel:"Width",mapSizeLabel:"Map Size",miniSizeLabel:"Mini",smallSizeLabel:"Small",premiumSizeLabel:"Premium",largeSizeLabel:"Large",snippetArea:null,heightField:null,widthField:null,initComponent:function(){Ext.apply(this,this.getConfig());gxp.EmbedMapDialog.superclass.initComponent.call(this)},
getIframeHTML:function(){return this.snippetArea.getValue()},updateSnippet:function(){this.snippetArea.setValue('<iframe style="border: none;" height="'+this.heightField.getValue()+'" width="'+this.widthField.getValue()+'" src="'+gxp.util.getAbsoluteUrl(this.url)+'"></iframe>');this.snippetArea.focus(true,100)},getConfig:function(){this.snippetArea=new Ext.form.TextArea({height:70,selectOnFocus:true,readOnly:true});var a={change:this.updateSnippet,specialkey:function(b,c){c.getKey()==c.ENTER&&this.updateSnippet()},
scope:this};this.heightField=new Ext.form.NumberField({width:50,value:400,listeners:a});this.widthField=new Ext.form.NumberField({width:50,value:600,listeners:a});return{border:false,defaults:{border:false,cls:"gxp-export-section",xtype:"container",layout:"fit"},items:[{items:[new Ext.Container({layout:"column",defaults:{border:false,xtype:"box"},items:[{autoEl:{cls:"gxp-field-label",html:this.mapSizeLabel}},new Ext.form.ComboBox({editable:false,width:75,store:new Ext.data.SimpleStore({fields:["name",
"height","width"],data:[[this.miniSizeLabel,100,100],[this.smallSizeLabel,200,300],[this.largeSizeLabel,400,600],[this.premiumSizeLabel,600,800]]}),triggerAction:"all",displayField:"name",value:this.largeSizeLabel,mode:"local",listeners:{select:function(b,c){this.widthField.setValue(c.get("width"));this.heightField.setValue(c.get("height"));this.updateSnippet()},scope:this}}),{autoEl:{cls:"gxp-field-label",html:this.heightLabel}},this.heightField,{autoEl:{cls:"gxp-field-label",html:this.widthLabel}},
this.widthField]})]},{xtype:"box",autoEl:{tag:"p",html:this.publishMessage}},{items:[this.snippetArea]}],listeners:{afterrender:this.updateSnippet,scope:this}}}});Ext.reg("gxp_embedmapdialog",gxp.EmbedMapDialog);Ext.namespace("gxp.plugins");
gxp.plugins.ZoomToDataExtent=Ext.extend(gxp.plugins.ZoomToExtent,{ptype:"gxp_zoomtodataextent",menuText:"Zoom to layer extent",tooltip:"Zoom to layer extent",closest:false,iconCls:"gxp-icon-zoom-to",extent:function(){return this.target.tools[this.featureManager].featureLayer.getDataExtent()},addActions:function(){var a=gxp.plugins.ZoomToDataExtent.superclass.addActions.apply(this,arguments);a[0].disable();var b=this.target.tools[this.featureManager].featureLayer;b.events.on({featuresadded:function(){a[0].isDisabled()&&
a[0].enable()},featuresremoved:function(){b.features.length==0&&a[0].disable()}});return a}});Ext.preg(gxp.plugins.ZoomToDataExtent.prototype.ptype,gxp.plugins.ZoomToDataExtent);Ext.namespace("gxp");
gxp.LayerUploadPanel=Ext.extend(Ext.FormPanel,{titleLabel:"Title",titleEmptyText:"Layer title",abstractLabel:"Description",abstractEmptyText:"Layer description",fileLabel:"Data",fieldEmptyText:"Browse for data archive...",uploadText:"Upload",waitMsgText:"Uploading your data...",invalidFileExtensionText:"File extension must be one of: ",optionsText:"Options",workspaceLabel:"Workspace",workspaceEmptyText:"Default workspace",dataStoreLabel:"Store",dataStoreEmptyText:"Default datastore",crsLabel:"CRS",
crsEmptyText:"Coordinate Reference System ID",invalidCrsText:"CRS identifier should be an EPSG code (e.g. EPSG:4326)",fileUpload:true,validFileExtensions:[".zip",".tif",".gz",".tar.bz2",".tar",".tgz",".tbz2"],constructor:function(a){a.errorReader={read:a.handleUploadResponse||this.handleUploadResponse.createDelegate(this)};gxp.LayerUploadPanel.superclass.constructor.call(this,a)},selectedWorkspace:null,initComponent:function(){this.items=[{xtype:"textfield",name:"title",fieldLabel:this.titleLabel,
emptyText:this.titleEmptyText,allowBlank:true},{xtype:"textarea",name:"abstract",fieldLabel:this.abstractLabel,emptyText:this.abstractEmptyText,allowBlank:true},{xtype:"fileuploadfield",id:"file",emptyText:this.fieldEmptyText,fieldLabel:this.fileLabel,name:"file",buttonText:"",buttonCfg:{iconCls:"gxp-icon-filebrowse"},validator:this.fileNameValidator.createDelegate(this)},{xtype:"fieldset",title:this.optionsText,checkboxToggle:true,collapsed:true,hideMode:"offsets",defaults:{anchor:"97%"},items:[this.createWorkspacesCombo(),
this.createDataStoresCombo(),{xtype:"textfield",name:"crs",fieldLabel:this.crsLabel,emptyText:this.crsEmptyText,allowBlank:true,regex:/^epsg:\d+$/i,regexText:this.invalidCrsText}],listeners:{collapse:function(a){a.items.each(function(b){b.reset()})}}}];this.buttons=[{text:this.uploadText,handler:function(){var a=this.getForm();a.isValid()&&a.submit({url:this.getUploadUrl(),submitEmptyText:false,waitMsg:this.waitMsgText,waitMsgTarget:true,reset:true,success:this.handleUploadSuccess,scope:this})},scope:this}];
this.addEvents("workspaceselected","datastoreselected","uploadcomplete");gxp.LayerUploadPanel.superclass.initComponent.call(this)},fileNameValidator:function(a){for(var b=false,c,d=0,e=this.validFileExtensions.length;d<e;++d){c=this.validFileExtensions[d];if(a.slice(-c.length).toLowerCase()===c){b=true;break}}return b||this.invalidFileExtensionText+this.validFileExtensions.join(", ")},createWorkspacesCombo:function(){return{xtype:"combo",name:"workspace",fieldLabel:this.workspaceLabel,emptyText:this.workspaceEmptyText,
store:new Ext.data.JsonStore({url:this.getWorkspacesUrl(),autoLoad:true,root:"workspaces.workspace",fields:["name","href"]}),displayField:"name",valueField:"name",mode:"local",allowBlank:true,triggerAction:"all",editable:false,listeners:{select:function(a,b){this.fireEvent("workspaceselected",this,b)},scope:this}}},createDataStoresCombo:function(){var a=new Ext.data.JsonStore({autoLoad:false,root:"dataStores.dataStore",fields:["name","href"]});this.on({workspaceselected:function(c,d){b.reset();var e=
d.get("href");a.removeAll();a.proxy=new Ext.data.HttpProxy({url:e.split(".json").shift()+"/datastores.json"});a.load()},scope:this});var b=new Ext.form.ComboBox({name:"store",fieldLabel:this.dataStoreLabel,emptyText:this.dataStoreEmptyText,store:a,displayField:"name",valueField:"name",mode:"local",allowBlank:true,triggerAction:"all",editable:false,listeners:{select:function(c,d){this.fireEvent("datastoreselected",this,d)},scope:this}});return b},getUploadUrl:function(){return this.url+"/upload"},
getWorkspacesUrl:function(){return this.url+"/workspaces.json"},handleUploadResponse:function(a){var b=(a=this.parseResponseText(a.responseText))&&a.success,c=[];b||(c=[{data:{id:"file",msg:a.message}}]);return{success:b,records:c}},parseResponseText:function(a){var b;try{b=Ext.decode(a)}catch(c){if(a=a.match(/^\s*<pre>(.*)<\/pre>\s*/))try{b=Ext.decode(a[1])}catch(d){}}return b},handleUploadSuccess:function(a,b){this.fireEvent("uploadcomplete",this,this.parseResponseText(b.response.responseText))}});
Ext.reg("gxp_layeruploadpanel",gxp.LayerUploadPanel);Ext.namespace("gxp.plugins");
gxp.plugins.Zoom=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_zoom",zoomInMenuText:"Zoom In",zoomOutMenuText:"Zoom Out",zoomInTooltip:"Zoom In",zoomOutTooltip:"Zoom Out",constructor:function(){gxp.plugins.Zoom.superclass.constructor.apply(this,arguments)},addActions:function(){return gxp.plugins.Zoom.superclass.addActions.apply(this,[[{menuText:this.zoomInMenuText,iconCls:"gxp-icon-zoom-in",tooltip:this.zoomInTooltip,handler:function(){this.target.mapPanel.map.zoomIn()},scope:this},{menuText:this.zoomOutMenuText,
iconCls:"gxp-icon-zoom-out",tooltip:this.zoomOutTooltip,handler:function(){this.target.mapPanel.map.zoomOut()},scope:this}]])}});Ext.preg(gxp.plugins.Zoom.prototype.ptype,gxp.plugins.Zoom);Ext.namespace("gxp.plugins");
gxp.plugins.ZoomToLayerExtent=Ext.extend(gxp.plugins.ZoomToExtent,{ptype:"gxp_zoomtolayerextent",menuText:"Zoom to layer extent",tooltip:"Zoom to layer extent",iconCls:"gxp-icon-zoom-to",destroy:function(){this.selectedRecord=null;gxp.plugins.ZoomToLayerExtent.superclass.destroy.apply(this,arguments)},extent:function(){var a=this.selectedRecord.get("layer");return a.restrictedExtent||a.maxExtent||map.maxExtent},addActions:function(){var a=gxp.plugins.ZoomToLayerExtent.superclass.addActions.apply(this,
arguments);a[0].disable();this.target.on("layerselectionchange",function(b){this.selectedRecord=b;a[0].setDisabled(!b||!b.get("layer"))},this);return a}});Ext.preg(gxp.plugins.ZoomToLayerExtent.prototype.ptype,gxp.plugins.ZoomToLayerExtent);Ext.namespace("gxp.form");
gxp.form.FontComboBox=Ext.extend(Ext.form.ComboBox,{fonts:["Serif","SansSerif","Arial","Courier New","Tahoma","Times New Roman","Verdana"],defaultFont:"Serif",allowBlank:false,mode:"local",triggerAction:"all",editable:false,initComponent:function(){var a=this.fonts||gxp.form.FontComboBox.prototype.fonts,b=this.defaultFont;if(a.indexOf(this.defaultFont)===-1)b=a[0];a={displayField:"field1",valueField:"field1",store:a,value:b,tpl:new Ext.XTemplate('<tpl for="."><div class="x-combo-list-item"><span style="font-family: {field1};">{field1}</span></div></tpl>')};
Ext.applyIf(this,a);gxp.form.FontComboBox.superclass.initComponent.call(this)}});Ext.reg("gxp_fontcombo",gxp.form.FontComboBox);Ext.namespace("gxp");
gxp.WMSLayerPanel=Ext.extend(Ext.TabPanel,{layerRecord:null,source:null,sameOriginStyling:true,editableStyles:false,activeTab:0,border:false,imageFormats:/png|gif|jpe?g/i,aboutText:"About",titleText:"Title",nameText:"Name",descriptionText:"Description",displayText:"Display",opacityText:"Opacity",formatText:"Format",transparentText:"Transparent",cacheText:"Cache",cacheFieldText:"Use cached version",stylesText:"Styles",initComponent:function(){this.addEvents("change");this.items=[this.createAboutPanel(),
this.createDisplayPanel()];this.layerRecord.get("layer").params.TILED!=null&&this.items.push(this.createCachePanel());if(this.layerRecord.get("styles")){var a=(this.source||this.layerRecord.get("layer")).url.split("?").shift().replace(/\/(wms|ows)\/?$/,"/rest");this.editableStyles=this.sameOriginStyling?a.charAt(0)==="/":true;this.items.push(this.createStylesPanel(a))}gxp.WMSLayerPanel.superclass.initComponent.call(this)},createCachePanel:function(){return{title:this.cacheText,layout:"form",style:"padding: 10px",
items:[{xtype:"checkbox",fieldLabel:this.cacheFieldText,checked:this.layerRecord.get("layer").params.TILED===true,listeners:{check:function(a,b){this.layerRecord.get("layer").mergeNewParams({TILED:b});this.fireEvent("change")},scope:this}}]}},createStylesPanel:function(a){var b=gxp.WMSStylesDialog.createGeoServerStylerConfig(this.layerRecord,a);return Ext.apply(b,{title:this.stylesText,style:"padding: 10px",editable:false,listeners:Ext.apply(b.listeners,{beforerender:{fn:function(c){var d=!this.editableStyles;
d||Ext.Ajax.request({method:"PUT",url:a+"/styles",callback:function(e,g,f){c.editable=f.status==405;c.ownerCt.doLayout()}});return d},scope:this,single:true}})})},createAboutPanel:function(){return{title:this.aboutText,style:{padding:"10px"},defaults:{border:false},items:[{layout:"form",labelWidth:70,items:[{xtype:"textfield",fieldLabel:this.titleText,anchor:"99%",value:this.layerRecord.get("title"),listeners:{change:function(a){this.layerRecord.set("title",a.getValue());this.layerRecord.commit();
this.fireEvent("change")},scope:this}},{xtype:"textfield",fieldLabel:this.nameText,anchor:"99%",value:this.layerRecord.get("name"),readOnly:true}]},{layout:"form",labelAlign:"top",items:[{xtype:"textarea",fieldLabel:this.descriptionText,grow:true,growMax:150,anchor:"99%",value:this.layerRecord.get("abstract"),readOnly:true}]}]}},createDisplayPanel:function(){var a=this.layerRecord,b=a.getLayer(),c=b.opacity;if(c==null)c=1;var d=[],e=b.params.FORMAT.toLowerCase();Ext.each(a.get("formats"),function(g){this.imageFormats.test(g)&&
d.push(g.toLowerCase())},this);d.indexOf(e)===-1&&d.push(e);a=b.params.TRANSPARENT;return{title:this.displayText,style:{padding:"10px"},layout:"form",labelWidth:70,items:[{xtype:"slider",name:"opacity",fieldLabel:this.opacityText,value:c*100,values:[c*100],anchor:"99%",isFormField:true,listeners:{change:function(g,f){b.setOpacity(f/100);this.fireEvent("change")},scope:this}},{xtype:"combo",fieldLabel:this.formatText,store:d,value:e,mode:"local",triggerAction:"all",editable:false,anchor:"99%",listeners:{select:function(g){b.mergeNewParams({format:g.getValue()});
this.fireEvent("change")},scope:this}},{xtype:"checkbox",fieldLabel:this.transparentText,checked:a==="true"||a===true,listeners:{check:function(g,f){b.mergeNewParams({transparent:f?"true":"false"});this.fireEvent("change")},scope:this}}]}}});Ext.reg("gxp_wmslayerpanel",gxp.WMSLayerPanel);Ext.namespace("gxp.plugins");
gxp.plugins.FeatureToField=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_featuretofield",format:"GeoJSON",addActions:function(){var a=this.target.tools[this.featureManager],b,c=new OpenLayers.Format[this.format];a.featureLayer.events.on({featureselected:function(d){this.target.field.setValue(c.write(d.feature));b=d.feature},featureunselected:function(){this.target.field.setValue("");b=null},scope:this});a.on("layerchange",function(){a.featureStore&&a.featureStore.on("save",function(d,e,g){if(g.create)for(d=
g.create.length-1;d>=0;--d){e=g.create[d].feature;e==b&&this.target.field.setValue(c.write(e))}},this)});return gxp.plugins.FeatureToField.superclass.addActions.apply(this,arguments)}});Ext.preg(gxp.plugins.FeatureToField.prototype.ptype,gxp.plugins.FeatureToField);Ext.namespace("gxp.plugins");
gxp.plugins.FeatureEditor=Ext.extend(gxp.plugins.ClickableFeatures,{ptype:"gxp_featureeditor",createFeatureActionTip:"Create a new feature",featureEditPopupType:"gxp_featureeditpopup",editFeatureActionTip:"Edit existing feature",outputTarget:"map",snappingAgent:null,readOnly:false,autoLoadFeatures:false,showSelectedOnly:true,drawControl:null,popup:null,autoLoadedFeature:null,schema:null,addActions:function(){function a(h,j){var k=Array.prototype.slice.call(arguments);k.splice(0,2);if(!f&&b&&!b.isDestroyed){if(b.editing){var l=
function(){f=true;m.call(this);if(j==="setLayer")this.target.selectLayer(k[0]);else j==="clearFeatures"?window.setTimeout(function(){h[j].call(h)}):h[j].apply(h,k)},m=function(){c.featureStore.un("write",l,this);b.un("canceledit",l,this);b.un("cancelclose",m,this)};c.featureStore.on("write",l,this);b.on({canceledit:l,cancelclose:m,scope:this});b.close()}return!b.editing}f=false}var b,c=this.target.tools[this.featureManager],d=c.featureLayer,e=this.snappingAgent;if(e){var g=this.target.tools[e];if(g)g.addSnappingControl(d);
else throw Error("Unable to locate snapping agent: "+e);}var f=false;c.on({beforequery:a.createDelegate(this,"loadFeatures",1),beforelayerchange:a.createDelegate(this,"setLayer",1),beforesetpage:a.createDelegate(this,"setPage",1),beforeclearfeatures:a.createDelegate(this,"clearFeatures",1),scope:this});this.drawControl=new OpenLayers.Control.DrawFeature(d,OpenLayers.Handler.Point,{eventListeners:{featureadded:function(h){if(this.autoLoadFeatures===true)this.autoLoadedFeature=h.feature},activate:function(){c.showLayer(this.id,
this.showSelectedOnly&&"selected")},deactivate:function(){c.hideLayer(this.id)},scope:this}});this.selectControl=new OpenLayers.Control.SelectFeature(d,{clickout:false,multipleKey:"fakeKey",unselect:function(){c.featureStore.getModifiedRecords().length||OpenLayers.Control.SelectFeature.prototype.unselect.apply(this,arguments)},eventListeners:{activate:function(){if(this.autoLoadFeatures===true||c.paging)this.target.mapPanel.map.events.register("click",this,this.noFeatureClick);c.showLayer(this.id,
this.showSelectedOnly&&"selected");this.selectControl.unselectAll(b&&b.editing&&{except:b.feature})},deactivate:function(){if(this.autoLoadFeatures===true||c.paging)this.target.mapPanel.map.events.unregister("click",this,this.noFeatureClick);if(b){if(b.editing)b.on("cancelclose",function(){this.selectControl.activate()},this,{single:true});b.on("close",function(){c.hideLayer(this.id)},this,{single:true});b.close()}else c.hideLayer(this.id)},scope:this}});d.events.on({beforefeatureremoved:function(h){this.selectControl.unselect(h.feature)},
featureunselected:function(){b&&b.close()},beforefeatureselected:function(){if(b)return!b.editing},featureselected:function(h){var j=h.feature,k=c.featureStore;if(this.selectControl.active)this.popup=b=this.addOutput({xtype:this.featureEditPopupType,collapsible:true,feature:j,vertexRenderIntent:"vertex",readOnly:this.readOnly,fields:this.fields,excludeFields:this.excludeFields,editing:j.state===OpenLayers.State.INSERT,schema:this.schema,allowDelete:true,width:200,height:250,listeners:{close:function(){j.layer&&
j.layer.selectedFeatures.indexOf(j)!==-1&&this.selectControl.unselect(j);j===this.autoLoadedFeature&&k.remove(k.getRecordFromFeature(j))},featuremodified:function(l,m){l.disable();k.on({write:{fn:function(){l&&l.isVisible()&&l.enable()},single:true},scope:this});if(m.state===OpenLayers.State.DELETE){k._removing=true;k.remove(k.getRecordFromFeature(m));delete k._removing}k.save()},canceledit:function(){k.commitChanges()},scope:this}})},sketchcomplete:function(){c.featureLayer.events.register("featuresadded",
this,function(h){c.featureLayer.events.unregister("featuresadded",this,arguments.callee);this.drawControl.deactivate();this.selectControl.activate();this.selectControl.select(h.features[0])})},scope:this});d=this.toggleGroup||Ext.id();d=gxp.plugins.FeatureEditor.superclass.addActions.call(this,[new GeoExt.Action({tooltip:this.createFeatureActionTip,text:this.createFeatureActionText,iconCls:"gxp-icon-addfeature",disabled:true,hidden:this.readOnly,toggleGroup:d,enableToggle:true,allowDepress:true,control:this.drawControl,
deactivateOnDisable:true,map:this.target.mapPanel.map}),new GeoExt.Action({tooltip:this.editFeatureActionTip,text:this.editFeatureActionText,iconCls:"gxp-icon-editfeature",disabled:true,toggleGroup:d,enableToggle:true,allowDepress:true,control:this.selectControl,deactivateOnDisable:true,map:this.target.mapPanel.map})]);c.on("layerchange",this.onLayerChange,this);return d},onLayerChange:function(a,b,c){this.schema=c;this.actions[0].setDisabled(!c);this.actions[1].setDisabled(!c);if(c){b=this.drawControl;
c=this.actions[0];var d={Point:OpenLayers.Handler.Point,Line:OpenLayers.Handler.Path,Curve:OpenLayers.Handler.Path,Polygon:OpenLayers.Handler.Polygon,Surface:OpenLayers.Handler.Polygon},e=a.geometryType.replace("Multi","");if(d=d[e]){var g=b.active;g&&b.deactivate();b.handler=new d(b,b.callbacks,Ext.apply(b.handlerOptions,{multi:e!=a.geometryType}));g&&b.activate();c.enable()}else c.disable()}}});Ext.preg(gxp.plugins.FeatureEditor.prototype.ptype,gxp.plugins.FeatureEditor);Ext.namespace("gxp");
gxp.PolygonSymbolizer=Ext.extend(Ext.Panel,{symbolizer:null,initComponent:function(){this.items=[{xtype:"gxp_fillsymbolizer",symbolizer:this.symbolizer,listeners:{change:function(){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_strokesymbolizer",symbolizer:this.symbolizer,listeners:{change:function(){this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.PolygonSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_polygonsymbolizer",gxp.PolygonSymbolizer);
Ext.namespace("gxp");
gxp.GoogleStreetViewPanel=Ext.extend(Ext.Panel,{panorama:null,heading:0,pitch:0,zoom:0,location:null,initComponent:function(){Ext.applyIf(this,{plain:true,border:false});return gxp.GoogleStreetViewPanel.superclass.initComponent.call(this)},afterRender:function(){var a=this.ownerCt;if(a){a=a.getSize();Ext.applyIf(this,a);this.location||GeoExt.Popup&&this.bubble(function(b){if(b instanceof GeoExt.Popup){this.location=b.location.clone().transform(b.map.getProjectionObject(),new OpenLayers.Projection("EPSG:4326"));return false}},
this)}gxp.GoogleStreetViewPanel.superclass.afterRender.call(this);a={position:new google.maps.LatLng(this.location.lat,this.location.lon),pov:{heading:this.heading,pitch:this.pitch,zoom:this.zoom}};this.panorama=new google.maps.StreetViewPanorama(this.body.dom,a)},beforeDestroy:function(){delete this.panorama;gxp.GoogleStreetViewPanel.superclass.beforeDestroy.apply(this,arguments)},onResize:function(){gxp.GoogleStreetViewPanel.superclass.onResize.apply(this,arguments);this.panorama&&typeof this.panorama==
"object"&&google.maps.event.trigger(this.panorama,"resize")},setSize:function(){gxp.GoogleStreetViewPanel.superclass.setSize.apply(this,arguments);this.panorama&&typeof this.panorama=="object"&&google.maps.event.trigger(this.panorama,"resize")}});Ext.reg("gxp_googlestreetviewpanel",gxp.GoogleStreetViewPanel);Ext.namespace("gxp.plugins");
gxp.plugins.GoogleGeocoder=Ext.extend(gxp.plugins.Tool,{ptype:"gxp_googlegeocoder",updateField:"viewport",init:function(a){var b=new gxp.form.GoogleGeocoderComboBox(Ext.apply({listeners:{select:this.onComboSelect,scope:this}},this.outputConfig)),c=a.mapPanel.map.restrictedExtent;if(c&&!b.bounds)a.on({ready:function(){b.bounds=c.clone().transform(a.mapPanel.map.getProjectionObject(),new OpenLayers.Projection("EPSG:4326"))}});this.combo=b;return gxp.plugins.GoogleGeocoder.superclass.init.apply(this,
arguments)},addOutput:function(){return gxp.plugins.GoogleGeocoder.superclass.addOutput.call(this,this.combo)},onComboSelect:function(a,b){if(this.updateField){var c=this.target.mapPanel.map,d=b.get(this.updateField).clone().transform(new OpenLayers.Projection("EPSG:4326"),c.getProjectionObject());d instanceof OpenLayers.Bounds?c.zoomToExtent(d,true):c.setCenter(d)}}});Ext.preg(gxp.plugins.GoogleGeocoder.prototype.ptype,gxp.plugins.GoogleGeocoder);Ext.namespace("gxp.form");
gxp.form.ViewerField=Ext.extend(Ext.form.TextArea,{viewer:null,initComponent:function(){this.width=this.width||350;this.height=this.height||220;gxp.form.ViewerField.superclass.initComponent.call(this)},onRender:function(){if(!this.el)this.defaultAutoCreate={tag:"textarea",style:{color:"transparent",background:"none"}};gxp.form.ViewerField.superclass.onRender.apply(this,arguments);this.viewerEl=Ext.get(document.createElement("div"));this.viewerEl.setStyle("position","absolute");this.viewerEl.on({mouseenter:function(){this.hasFocus||
this.el.focus()},mousemove:function(){this.hasFocus||this.el.focus()},mouseleave:function(){this.hasFocus&&this.el.blur()},scope:this});this.el.dom.parentNode.appendChild(this.viewerEl.dom);this.viewerEl.anchorTo(this.el,"tl-tl");var a={border:false,renderTo:this.viewerEl,width:this.width,height:this.height,style:"border: 1px solid transparent"},b=Ext.applyIf(this.initialConfig.viewer||{},{field:this,portalConfig:a});Ext.apply(b.portalConfig,a);this.viewer=new gxp.Viewer(b)}});
Ext.reg("gxp_viewerfield",gxp.form.ViewerField);Ext.namespace("gxp");
gxp.StylePropertiesDialog=Ext.extend(Ext.Container,{titleText:"General",nameFieldText:"Name",titleFieldText:"Title",abstractFieldText:"Abstract",userStyle:null,initComponent:function(){Ext.applyIf(this,{layout:"form",items:[{xtype:"fieldset",title:this.titleText,labelWidth:75,defaults:{xtype:"textfield",anchor:"100%",listeners:{change:function(a,b){this.userStyle[a.name]=b;this.fireEvent("change",this,this.userStyle)},scope:this}},items:[{xtype:this.initialConfig.nameEditable?"textfield":"displayfield",
fieldLabel:this.nameFieldText,name:"name",value:this.userStyle.name,maskRe:/[A-Za-z0-9_]/},{fieldLabel:this.titleFieldText,name:"title",value:this.userStyle.title},{xtype:"textarea",fieldLabel:this.abstractFieldText,name:"description",value:this.userStyle.description}]}]});this.addEvents("change");gxp.StylePropertiesDialog.superclass.initComponent.apply(this,arguments)}});Ext.reg("gxp_stylepropertiesdialog",gxp.StylePropertiesDialog);Ext.namespace("gxp");
gxp.QueryPanel=Ext.extend(Ext.Panel,{layout:"form",spatialQuery:true,attributeQuery:true,selectedLayer:null,featureStore:null,attributeStore:null,geometryType:null,geometryName:null,queryByLocationText:"Query by location",currentTextText:"Current extent",queryByAttributesText:"Query by attributes",layerText:"Layer",initComponent:function(){this.addEvents("ready","beforelayerchange","layerchange","beforequery","query","storeload");this.mapExtentField=new Ext.form.TextField({fieldLabel:this.currentTextText,
readOnly:true,anchor:"100%",value:this.getFormattedMapExtent()});this.map.events.on({moveend:this.updateMapExtent,scope:this});this.createFilterBuilder(this.layerStore.getAt(0));this.items=[{xtype:"combo",name:"layer",fieldLabel:this.layerText,store:this.layerStore,value:this.layerStore.getAt(0).get("name"),displayField:"title",valueField:"name",mode:"local",allowBlank:true,editable:false,triggerAction:"all",listeners:{beforeselect:function(a,b){return this.fireEvent("beforelayerchange",this,b)},
select:function(a,b){this.createFilterBuilder(b)},scope:this}},{xtype:"fieldset",title:this.queryByLocationText,checkboxToggle:true,collapsed:!this.spatialQuery,anchor:"95%",items:[this.mapExtentField],listeners:{collapse:function(){this.spatialQuery=false},expand:function(){this.spatialQuery=true},scope:this}},{xtype:"fieldset",title:this.queryByAttributesText,checkboxToggle:true,collapsed:!this.attributeQuery,anchor:"95%",items:[this.filterBuilder],listeners:{collapse:function(){this.attributeQuery=
false},expand:function(){this.attributeQuery=true},scope:this}}];gxp.QueryPanel.superclass.initComponent.apply(this,arguments)},createFilterBuilder:function(a){this.selectedLayer=a;var b=this.filterBuilder&&this.filterBuilder.ownerCt;b&&b.remove(this.filterBuilder,true);this.attributeStore=new GeoExt.data.AttributeStore({url:a.get("schema"),listeners:{load:function(c){this.geometryName=null;c.filterBy(function(d){var e=/gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/.exec(d.get("type"));
if(e&&!this.geometryName){this.geometryName=d.get("name");this.geometryType=e[1];this.fireEvent("layerchange",this,a)}return!e},this);this.createFeatureStore()},scope:this},autoLoad:true});this.filterBuilder=new gxp.FilterBuilder({attributes:this.attributeStore,allowGroups:false});if(b){b.add(this.filterBuilder);b.doLayout()}},getFormattedMapExtent:function(){return this.map&&this.map.getExtent()&&this.map.getExtent().toBBOX().replace(/\.(\d)\d*/g,".$1").replace(/,/g,", ")},updateMapExtent:function(){this.mapExtentField.setValue(this.getFormattedMapExtent())},
getFilter:function(){var a=this.attributeQuery&&this.filterBuilder.getFilter(),b=this.spatialQuery&&new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,value:this.map.getExtent()});return a&&b?new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[b,a]}):a||b},getFieldType:function(a){return{"xsd:boolean":"boolean","xsd:int":"int","xsd:integer":"int","xsd:short":"int","xsd:long":"int","xsd:date":"date","xsd:string":"string","xsd:float":"float","xsd:double":"float"}[a]},
createFeatureStore:function(){var a=[];this.attributeStore.each(function(c){a.push({name:c.get("name"),type:this.getFieldType(c.get("type"))})},this);var b=this.selectedLayer;this.featureStore=new gxp.data.WFSFeatureStore({fields:a,srsName:this.map.getProjection(),url:b.get("url"),featureType:b.get("name"),featureNS:b.get("namespace"),geometryName:this.geometryName,schema:b.get("schema"),maxFeatures:this.maxFeatures,autoLoad:false,autoSave:false,listeners:{load:function(c,d,e){this.fireEvent("storeload",
this,c,d,e)},scope:this}});this.fireEvent("ready",this,this.featureStore)},query:function(){if(this.featureStore)if(this.fireEvent("beforequery",this)!==false){this.featureStore.setOgcFilter(this.getFilter());this.featureStore.load();this.fireEvent("query",this,this.featureStore)}},beforeDestroy:function(){this.map&&this.map.events&&this.map.events.un({moveend:this.updateMapExtent,scope:this});gxp.QueryPanel.superclass.beforeDestroy.apply(this,arguments)}});Ext.reg("gxp_querypanel",gxp.QueryPanel);
Ext.namespace("gxp");
gxp.TextSymbolizer=Ext.extend(Ext.Panel,{fonts:undefined,symbolizer:null,defaultSymbolizer:null,attributes:null,colorManager:null,haloCache:null,border:false,layout:"form",labelValuesText:"Label values",haloText:"Halo",sizeText:"Size",initComponent:function(){if(!this.symbolizer)this.symbolizer={};Ext.applyIf(this.symbolizer,this.defaultSymbolizer);this.haloCache={};var a={xtype:"combo",fieldLabel:this.labelValuesText,store:this.attributes,editable:false,triggerAction:"all",allowBlank:false,displayField:"name",
valueField:"name",value:this.symbolizer.label&&this.symbolizer.label.replace(/^\${(.*)}$/,"$1"),listeners:{select:function(b,c){this.symbolizer.label="${"+c.get("name")+"}";this.fireEvent("change",this.symbolizer)},scope:this},width:120};this.attributesComboConfig=this.attributesComboConfig||{};Ext.applyIf(this.attributesComboConfig,a);this.labelWidth=80;this.items=[this.attributesComboConfig,{cls:"x-html-editor-tb",style:"background: transparent; border: none; padding: 0 0em 0.5em;",xtype:"toolbar",
items:[{xtype:"gxp_fontcombo",fonts:this.fonts||undefined,width:110,value:this.symbolizer.fontFamily,listeners:{select:function(b,c){this.symbolizer.fontFamily=c.get("field1");this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"tbtext",text:this.sizeText+": "},{xtype:"numberfield",allowNegative:false,emptyText:OpenLayers.Renderer.defaultSymbolizer.fontSize,value:this.symbolizer.fontSize,width:30,listeners:{change:function(b,c){c=parseFloat(c);if(isNaN(c))delete this.symbolizer.fontSize;
else this.symbolizer.fontSize=c;this.fireEvent("change",this.symbolizer)},scope:this}},{enableToggle:true,cls:"x-btn-icon",iconCls:"x-edit-bold",pressed:this.symbolizer.fontWeight==="bold",listeners:{toggle:function(b,c){this.symbolizer.fontWeight=c?"bold":"normal";this.fireEvent("change",this.symbolizer)},scope:this}},{enableToggle:true,cls:"x-btn-icon",iconCls:"x-edit-italic",pressed:this.symbolizer.fontStyle==="italic",listeners:{toggle:function(b,c){this.symbolizer.fontStyle=c?"italic":"normal";
this.fireEvent("change",this.symbolizer)},scope:this}}]},{xtype:"gxp_fillsymbolizer",symbolizer:this.symbolizer,defaultColor:OpenLayers.Renderer.defaultSymbolizer.fontColor,checkboxToggle:false,autoHeight:true,width:213,labelWidth:70,plugins:this.colorManager&&[new this.colorManager],listeners:{change:function(){this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"fieldset",title:this.haloText,checkboxToggle:true,collapsed:!(this.symbolizer.haloRadius||this.symbolizer.haloColor||this.symbolizer.haloOpacity),
autoHeight:true,labelWidth:50,items:[{xtype:"numberfield",fieldLabel:this.sizeText,anchor:"89%",allowNegative:false,emptyText:OpenLayers.Renderer.defaultSymbolizer.haloRadius,value:this.symbolizer.haloRadius,listeners:{change:function(b,c){c=parseFloat(c);if(isNaN(c))delete this.symbolizer.haloRadius;else this.symbolizer.haloRadius=c;this.fireEvent("change",this.symbolizer)},scope:this}},{xtype:"gxp_fillsymbolizer",symbolizer:{fillColor:"haloColor"in this.symbolizer?this.symbolizer.haloColor:OpenLayers.Renderer.defaultSymbolizer.haloColor,
fillOpacity:"haloOpacity"in this.symbolizer?this.symbolizer.haloOpacity:OpenLayers.Renderer.defaultSymbolizer.haloOpacity},defaultColor:OpenLayers.Renderer.defaultSymbolizer.haloColor,checkboxToggle:false,width:190,labelWidth:60,plugins:this.colorManager&&[new this.colorManager],listeners:{change:function(b){this.symbolizer.haloColor=b.fillColor;this.symbolizer.haloOpacity=b.fillOpacity;this.fireEvent("change",this.symbolizer)},scope:this}}],listeners:{collapse:function(){this.haloCache={haloRadius:this.symbolizer.haloRadius,
haloColor:this.symbolizer.haloColor,haloOpacity:this.symbolizer.haloOpacity};delete this.symbolizer.haloRadius;delete this.symbolizer.haloColor;delete this.symbolizer.haloOpacity;this.fireEvent("change",this.symbolizer)},expand:function(){Ext.apply(this.symbolizer,this.haloCache);this.doLayout();this.fireEvent("change",this.symbolizer)},scope:this}}];this.addEvents("change");gxp.TextSymbolizer.superclass.initComponent.call(this)}});Ext.reg("gxp_textsymbolizer",gxp.TextSymbolizer);
